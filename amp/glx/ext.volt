module amp.glx.ext;


private import amp.glx.types;
private import amp.glx.enums;
private import amp.glx.funcs;
enum uint GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB = 0x20B2U;
enum uint GLX_SHARE_CONTEXT_EXT = 0x800AU;
enum uint GLX_VISUAL_ID_EXT = 0x800BU;
enum uint GLX_SCREEN_EXT = 0x800CU;
enum uint GLX_COVERAGE_SAMPLES_NV = 100001;
enum uint GLX_COLOR_SAMPLES_NV = 0x20B3U;
enum uint GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS = 0x8026U;
enum uint GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS = 0x8027U;
enum uint GLX_PBUFFER_BIT_SGIX = 0x00000004U;
enum uint GLX_BUFFER_CLOBBER_MASK_SGIX = 0x08000000U;
enum uint GLX_FRONT_LEFT_BUFFER_BIT_SGIX = 0x00000001U;
enum uint GLX_FRONT_RIGHT_BUFFER_BIT_SGIX = 0x00000002U;
enum uint GLX_BACK_LEFT_BUFFER_BIT_SGIX = 0x00000004U;
enum uint GLX_BACK_RIGHT_BUFFER_BIT_SGIX = 0x00000008U;
enum uint GLX_AUX_BUFFERS_BIT_SGIX = 0x00000010U;
enum uint GLX_DEPTH_BUFFER_BIT_SGIX = 0x00000020U;
enum uint GLX_STENCIL_BUFFER_BIT_SGIX = 0x00000040U;
enum uint GLX_ACCUM_BUFFER_BIT_SGIX = 0x00000080U;
enum uint GLX_SAMPLE_BUFFERS_BIT_SGIX = 0x00000100U;
enum uint GLX_MAX_PBUFFER_WIDTH_SGIX = 0x8016U;
enum uint GLX_MAX_PBUFFER_HEIGHT_SGIX = 0x8017U;
enum uint GLX_MAX_PBUFFER_PIXELS_SGIX = 0x8018U;
enum uint GLX_OPTIMAL_PBUFFER_WIDTH_SGIX = 0x8019U;
enum uint GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX = 0x801AU;
enum uint GLX_PRESERVED_CONTENTS_SGIX = 0x801BU;
enum uint GLX_LARGEST_PBUFFER_SGIX = 0x801CU;
enum uint GLX_WIDTH_SGIX = 0x801DU;
enum uint GLX_HEIGHT_SGIX = 0x801EU;
enum uint GLX_EVENT_MASK_SGIX = 0x801FU;
enum uint GLX_DAMAGED_SGIX = 0x8020U;
enum uint GLX_SAVED_SGIX = 0x8021U;
enum uint GLX_WINDOW_SGIX = 0x8022U;
enum uint GLX_PBUFFER_SGIX = 0x8023U;
enum uint GLX_RGBA_FLOAT_TYPE_ARB = 0x20B9U;
enum uint GLX_RGBA_FLOAT_BIT_ARB = 0x00000004U;
enum uint GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX = 80;
enum uint GLX_BAD_HYPERPIPE_CONFIG_SGIX = 91;
enum uint GLX_BAD_HYPERPIPE_SGIX = 92;
enum uint GLX_HYPERPIPE_DISPLAY_PIPE_SGIX = 0x00000001U;
enum uint GLX_HYPERPIPE_RENDER_PIPE_SGIX = 0x00000002U;
enum uint GLX_PIPE_RECT_SGIX = 0x00000001U;
enum uint GLX_PIPE_RECT_LIMITS_SGIX = 0x00000002U;
enum uint GLX_HYPERPIPE_STEREO_SGIX = 0x00000003U;
enum uint GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX = 0x00000004U;
enum uint GLX_HYPERPIPE_ID_SGIX = 0x8030U;
enum uint GLX_CONTEXT_RESET_ISOLATION_BIT_ARB = 0x00000008U;
enum uint GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK = 0x04000000U;
enum uint GLX_EXCHANGE_COMPLETE_INTEL = 0x8180U;
enum uint GLX_COPY_COMPLETE_INTEL = 0x8181U;
enum uint GLX_FLIP_COMPLETE_INTEL = 0x8182U;
enum uint GLX_SYNC_FRAME_SGIX = 0x00000000U;
enum uint GLX_SYNC_SWAP_SGIX = 0x00000001U;
enum uint GLX_CONTEXT_ES2_PROFILE_BIT_EXT = 0x00000004U;
enum uint GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x20B2U;
enum uint GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT = 0x20B1U;
enum uint GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT = 0x00000008U;
enum uint GLX_BACK_BUFFER_AGE_EXT = 0x20F4U;
enum uint GLX_SAMPLE_BUFFERS_3DFX = 0x8050U;
enum uint GLX_SAMPLES_3DFX = 0x8051U;
enum uint GLX_X_VISUAL_TYPE_EXT = 0x22U;
enum uint GLX_TRANSPARENT_TYPE_EXT = 0x23U;
enum uint GLX_TRANSPARENT_INDEX_VALUE_EXT = 0x24U;
enum uint GLX_TRANSPARENT_RED_VALUE_EXT = 0x25U;
enum uint GLX_TRANSPARENT_GREEN_VALUE_EXT = 0x26U;
enum uint GLX_TRANSPARENT_BLUE_VALUE_EXT = 0x27U;
enum uint GLX_TRANSPARENT_ALPHA_VALUE_EXT = 0x28U;
enum uint GLX_NONE_EXT = 0x8000U;
enum uint GLX_TRUE_COLOR_EXT = 0x8002U;
enum uint GLX_DIRECT_COLOR_EXT = 0x8003U;
enum uint GLX_PSEUDO_COLOR_EXT = 0x8004U;
enum uint GLX_STATIC_COLOR_EXT = 0x8005U;
enum uint GLX_GRAY_SCALE_EXT = 0x8006U;
enum uint GLX_STATIC_GRAY_EXT = 0x8007U;
enum uint GLX_TRANSPARENT_RGB_EXT = 0x8008U;
enum uint GLX_TRANSPARENT_INDEX_EXT = 0x8009U;
enum uint GLX_SAMPLE_BUFFERS_SGIS = 100000;
enum uint GLX_SAMPLES_SGIS = 100001;
enum uint GLX_3DFX_WINDOW_MODE_MESA = 0x1U;
enum uint GLX_3DFX_FULLSCREEN_MODE_MESA = 0x2U;
enum uint GLX_TEXTURE_1D_BIT_EXT = 0x00000001U;
enum uint GLX_TEXTURE_2D_BIT_EXT = 0x00000002U;
enum uint GLX_TEXTURE_RECTANGLE_BIT_EXT = 0x00000004U;
enum uint GLX_BIND_TO_TEXTURE_RGB_EXT = 0x20D0U;
enum uint GLX_BIND_TO_TEXTURE_RGBA_EXT = 0x20D1U;
enum uint GLX_BIND_TO_MIPMAP_TEXTURE_EXT = 0x20D2U;
enum uint GLX_BIND_TO_TEXTURE_TARGETS_EXT = 0x20D3U;
enum uint GLX_Y_INVERTED_EXT = 0x20D4U;
enum uint GLX_TEXTURE_FORMAT_EXT = 0x20D5U;
enum uint GLX_TEXTURE_TARGET_EXT = 0x20D6U;
enum uint GLX_MIPMAP_TEXTURE_EXT = 0x20D7U;
enum uint GLX_TEXTURE_FORMAT_NONE_EXT = 0x20D8U;
enum uint GLX_TEXTURE_FORMAT_RGB_EXT = 0x20D9U;
enum uint GLX_TEXTURE_FORMAT_RGBA_EXT = 0x20DAU;
enum uint GLX_TEXTURE_1D_EXT = 0x20DBU;
enum uint GLX_TEXTURE_2D_EXT = 0x20DCU;
enum uint GLX_TEXTURE_RECTANGLE_EXT = 0x20DDU;
enum uint GLX_FRONT_LEFT_EXT = 0x20DEU;
enum uint GLX_FRONT_RIGHT_EXT = 0x20DFU;
enum uint GLX_BACK_LEFT_EXT = 0x20E0U;
enum uint GLX_BACK_RIGHT_EXT = 0x20E1U;
enum uint GLX_FRONT_EXT = 0x20DEU;
enum uint GLX_BACK_EXT = 0x20E0U;
enum uint GLX_AUX0_EXT = 0x20E2U;
enum uint GLX_AUX1_EXT = 0x20E3U;
enum uint GLX_AUX2_EXT = 0x20E4U;
enum uint GLX_AUX3_EXT = 0x20E5U;
enum uint GLX_AUX4_EXT = 0x20E6U;
enum uint GLX_AUX5_EXT = 0x20E7U;
enum uint GLX_AUX6_EXT = 0x20E8U;
enum uint GLX_AUX7_EXT = 0x20E9U;
enum uint GLX_AUX8_EXT = 0x20EAU;
enum uint GLX_AUX9_EXT = 0x20EBU;
enum uint GLX_DEVICE_ID_NV = 0x20CDU;
enum uint GLX_UNIQUE_ID_NV = 0x20CEU;
enum uint GLX_NUM_VIDEO_CAPTURE_SLOTS_NV = 0x20CFU;
enum uint GLX_SAMPLE_BUFFERS_ARB = 100000;
enum uint GLX_SAMPLES_ARB = 100001;
enum uint GLX_SWAP_INTERVAL_EXT = 0x20F1U;
enum uint GLX_MAX_SWAP_INTERVAL_EXT = 0x20F2U;
enum uint GLX_CONTEXT_DEBUG_BIT_ARB = 0x00000001U;
enum uint GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB = 0x00000002U;
enum uint GLX_CONTEXT_MAJOR_VERSION_ARB = 0x2091U;
enum uint GLX_CONTEXT_MINOR_VERSION_ARB = 0x2092U;
enum uint GLX_CONTEXT_FLAGS_ARB = 0x2094U;
enum uint GLX_CONTEXT_ES_PROFILE_BIT_EXT = 0x00000004U;
enum uint GLX_WINDOW_BIT_SGIX = 0x00000001U;
enum uint GLX_PIXMAP_BIT_SGIX = 0x00000002U;
enum uint GLX_RGBA_BIT_SGIX = 0x00000001U;
enum uint GLX_COLOR_INDEX_BIT_SGIX = 0x00000002U;
enum uint GLX_DRAWABLE_TYPE_SGIX = 0x8010U;
enum uint GLX_RENDER_TYPE_SGIX = 0x8011U;
enum uint GLX_X_RENDERABLE_SGIX = 0x8012U;
enum uint GLX_FBCONFIG_ID_SGIX = 0x8013U;
enum uint GLX_RGBA_TYPE_SGIX = 0x8014U;
enum uint GLX_COLOR_INDEX_TYPE_SGIX = 0x8015U;
enum uint GLX_VISUAL_SELECT_GROUP_SGIX = 0x8028U;
enum uint GLX_VIDEO_OUT_COLOR_NV = 0x20C3U;
enum uint GLX_VIDEO_OUT_ALPHA_NV = 0x20C4U;
enum uint GLX_VIDEO_OUT_DEPTH_NV = 0x20C5U;
enum uint GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV = 0x20C6U;
enum uint GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV = 0x20C7U;
enum uint GLX_VIDEO_OUT_FRAME_NV = 0x20C8U;
enum uint GLX_VIDEO_OUT_FIELD_1_NV = 0x20C9U;
enum uint GLX_VIDEO_OUT_FIELD_2_NV = 0x20CAU;
enum uint GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV = 0x20CBU;
enum uint GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV = 0x20CCU;
enum uint GLX_BLENDED_RGBA_SGIS = 0x8025U;
enum uint GLX_DIGITAL_MEDIA_PBUFFER_SGIX = 0x8024U;
enum uint GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB = 0x00000004U;
enum uint GLX_LOSE_CONTEXT_ON_RESET_ARB = 0x8252U;
enum uint GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256U;
enum uint GLX_NO_RESET_NOTIFICATION_ARB = 0x8261U;
enum uint GLX_LATE_SWAPS_TEAR_EXT = 0x20F3U;
enum uint GLX_VISUAL_CAVEAT_EXT = 0x20U;
enum uint GLX_SLOW_VISUAL_EXT = 0x8001U;
enum uint GLX_NON_CONFORMANT_VISUAL_EXT = 0x800DU;
enum uint GLX_FLOAT_COMPONENTS_NV = 0x20B0U;
enum uint GLX_SWAP_METHOD_OML = 0x8060U;
enum uint GLX_SWAP_EXCHANGE_OML = 0x8061U;
enum uint GLX_SWAP_COPY_OML = 0x8062U;
enum uint GLX_SWAP_UNDEFINED_OML = 0x8063U;
enum uint GLX_NUM_VIDEO_SLOTS_NV = 0x20F0U;
enum uint GLX_GPU_VENDOR_AMD = 0x1F00U;
enum uint GLX_GPU_RENDERER_STRING_AMD = 0x1F01U;
enum uint GLX_GPU_OPENGL_VERSION_STRING_AMD = 0x1F02U;
enum uint GLX_GPU_FASTEST_TARGET_GPUS_AMD = 0x21A2U;
enum uint GLX_GPU_RAM_AMD = 0x21A3U;
enum uint GLX_GPU_CLOCK_AMD = 0x21A4U;
enum uint GLX_GPU_NUM_PIPES_AMD = 0x21A5U;
enum uint GLX_GPU_NUM_SIMD_AMD = 0x21A6U;
enum uint GLX_GPU_NUM_RB_AMD = 0x21A7U;
enum uint GLX_GPU_NUM_SPI_AMD = 0x21A8U;
enum uint GLX_CONTEXT_CORE_PROFILE_BIT_ARB = 0x00000001U;
enum uint GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB = 0x00000002U;
enum uint GLX_CONTEXT_PROFILE_MASK_ARB = 0x9126U;
enum uint GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB = 0x2095U;
extern(System) @loadDynamic {
Display* glXGetCurrentDisplayEXT();
int glXQueryContextInfoEXT(Display*, GLXContext, int, int*);
GLXContextID glXGetContextIDEXT(const(GLXContext));
GLXContext glXImportContextEXT(Display*, GLXContextID);
void glXFreeContextEXT(Display*, GLXContext);
GLXPbufferSGIX glXCreateGLXPbufferSGIX(Display*, GLXFBConfigSGIX, uint, uint, int*);
void glXDestroyGLXPbufferSGIX(Display*, GLXPbufferSGIX);
int glXQueryGLXPbufferSGIX(Display*, GLXPbufferSGIX, int, uint*);
void glXSelectEventSGIX(Display*, GLXDrawable, ulong);
void glXGetSelectedEventSGIX(Display*, GLXDrawable, ulong*);
Bool glXJoinSwapGroupNV(Display*, GLXDrawable, GLuint);
Bool glXBindSwapBarrierNV(Display*, GLuint, GLuint);
Bool glXQuerySwapGroupNV(Display*, GLXDrawable, GLuint*, GLuint*);
Bool glXQueryMaxSwapGroupsNV(Display*, int, GLuint*, GLuint*);
Bool glXQueryFrameCountNV(Display*, int, GLuint*);
Bool glXResetFrameCountNV(Display*, int);
GLXHyperpipeNetworkSGIX* glXQueryHyperpipeNetworkSGIX(Display*, int*);
int glXHyperpipeConfigSGIX(Display*, int, int, GLXHyperpipeConfigSGIX*, int*);
GLXHyperpipeConfigSGIX* glXQueryHyperpipeConfigSGIX(Display*, int, int*);
int glXDestroyHyperpipeConfigSGIX(Display*, int);
int glXBindHyperpipeSGIX(Display*, int);
int glXQueryHyperpipeBestAttribSGIX(Display*, int, int, int, void*, void*);
int glXHyperpipeAttribSGIX(Display*, int, int, int, void*);
int glXQueryHyperpipeAttribSGIX(Display*, int, int, int, void*);
int glXBindChannelToWindowSGIX(Display*, int, int, Window);
int glXChannelRectSGIX(Display*, int, int, int, int, int, int);
int glXQueryChannelRectSGIX(Display*, int, int, int*, int*, int*, int*);
int glXQueryChannelDeltasSGIX(Display*, int, int, int*, int*, int*, int*);
int glXChannelRectSyncSGIX(Display*, int, int, GLenum);
void glXCopyImageSubDataNV(Display*, GLXContext, GLuint, GLenum, GLint, GLint, GLint, GLint, GLXContext, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei);
Bool glXGetSyncValuesOML(Display*, GLXDrawable, int64_t*, int64_t*, int64_t*);
Bool glXGetMscRateOML(Display*, GLXDrawable, int32_t*, int32_t*);
int64_t glXSwapBuffersMscOML(Display*, GLXDrawable, int64_t, int64_t, int64_t);
Bool glXWaitForMscOML(Display*, GLXDrawable, int64_t, int64_t, int64_t, int64_t*, int64_t*, int64_t*);
Bool glXWaitForSbcOML(Display*, GLXDrawable, int64_t, int64_t*, int64_t*, int64_t*);
Bool glXMakeCurrentReadSGI(Display*, GLXDrawable, GLXDrawable, GLXContext);
GLXDrawable glXGetCurrentReadDrawableSGI();
int glXSwapIntervalSGI(int);
int glXGetVideoSyncSGI(uint*);
int glXWaitVideoSyncSGI(int, int, uint*);
uint glXGetAGPOffsetMESA(const(void)*);
Bool glXSet3DfxModeMESA(int);
void glXBindTexImageEXT(Display*, GLXDrawable, int, const(int)*);
void glXReleaseTexImageEXT(Display*, GLXDrawable, int);
int glXBindVideoCaptureDeviceNV(Display*, uint, GLXVideoCaptureDeviceNV);
GLXVideoCaptureDeviceNV* glXEnumerateVideoCaptureDevicesNV(Display*, int, int*);
void glXLockVideoCaptureDeviceNV(Display*, GLXVideoCaptureDeviceNV);
int glXQueryVideoCaptureDeviceNV(Display*, GLXVideoCaptureDeviceNV, int, int*);
void glXReleaseVideoCaptureDeviceNV(Display*, GLXVideoCaptureDeviceNV);
void glXJoinSwapGroupSGIX(Display*, GLXDrawable, GLXDrawable);
void glXSwapIntervalEXT(Display*, GLXDrawable, int);
GLXVideoSourceSGIX glXCreateGLXVideoSourceSGIX(Display*, int, VLServer, VLPath, int, VLNode);
void glXDestroyGLXVideoSourceSGIX(Display*, GLXVideoSourceSGIX);
GLXContext glXCreateContextAttribsARB(Display*, GLXFBConfig, GLXContext, Bool, const(int)*);
int glXGetFBConfigAttribSGIX(Display*, GLXFBConfigSGIX, int, int*);
GLXFBConfigSGIX* glXChooseFBConfigSGIX(Display*, int, int*, int*);
GLXPixmap glXCreateGLXPixmapWithConfigSGIX(Display*, GLXFBConfigSGIX, Pixmap);
GLXContext glXCreateContextWithConfigSGIX(Display*, GLXFBConfigSGIX, int, GLXContext, Bool);
XVisualInfo* glXGetVisualFromFBConfigSGIX(Display*, GLXFBConfigSGIX);
GLXFBConfigSGIX glXGetFBConfigFromVisualSGIX(Display*, XVisualInfo*);
GLXPixmap glXCreateGLXPixmapMESA(Display*, XVisualInfo*, Pixmap, Colormap);
int glXGetVideoDeviceNV(Display*, int, int, GLXVideoDeviceNV*);
int glXReleaseVideoDeviceNV(Display*, int, GLXVideoDeviceNV);
int glXBindVideoImageNV(Display*, GLXVideoDeviceNV, GLXPbuffer, int);
int glXReleaseVideoImageNV(Display*, GLXPbuffer);
int glXSendPbufferToVideoNV(Display*, GLXPbuffer, int, ulong*, GLboolean);
int glXGetVideoInfoNV(Display*, int, GLXVideoDeviceNV, ulong*, ulong*);
Bool glXAssociateDMPbufferSGIX(Display*, GLXPbufferSGIX, DMparams*, DMbuffer);
void glXBindSwapBarrierSGIX(Display*, GLXDrawable, int);
Bool glXQueryMaxSwapBarriersSGIX(Display*, int, int*);
Bool glXReleaseBuffersMESA(Display*, GLXDrawable);
void glXCopySubBufferMESA(Display*, GLXDrawable, int, int, int, int);
void glXCushionSGI(Display*, Window, float);
uint* glXEnumerateVideoDevicesNV(Display*, int, int*);
int glXBindVideoDeviceNV(Display*, uint, uint, const(int)*);
Status glXGetTransparentIndexSUN(Display*, Window, Window, long*);
__GLXextFuncPtr glXGetProcAddressARB(const(GLubyte)*);
}
