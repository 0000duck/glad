module glad.egl.ext;


private import glad.egl.types;
private import glad.egl.enums;
private import glad.egl.funcs;
enum uint EGL_READ_SURFACE_BIT_KHR = 0x0001;
enum uint EGL_WRITE_SURFACE_BIT_KHR = 0x0002;
enum uint EGL_LOCK_SURFACE_BIT_KHR = 0x0080;
enum uint EGL_OPTIMAL_FORMAT_BIT_KHR = 0x0100;
enum uint EGL_MATCH_FORMAT_KHR = 0x3043;
enum uint EGL_FORMAT_RGB_565_EXACT_KHR = 0x30C0;
enum uint EGL_FORMAT_RGB_565_KHR = 0x30C1;
enum uint EGL_FORMAT_RGBA_8888_EXACT_KHR = 0x30C2;
enum uint EGL_FORMAT_RGBA_8888_KHR = 0x30C3;
enum uint EGL_MAP_PRESERVE_PIXELS_KHR = 0x30C4;
enum uint EGL_LOCK_USAGE_HINT_KHR = 0x30C5;
enum uint EGL_BITMAP_POINTER_KHR = 0x30C6;
enum uint EGL_BITMAP_PITCH_KHR = 0x30C7;
enum uint EGL_BITMAP_ORIGIN_KHR = 0x30C8;
enum uint EGL_BITMAP_PIXEL_RED_OFFSET_KHR = 0x30C9;
enum uint EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR = 0x30CA;
enum uint EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR = 0x30CB;
enum uint EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR = 0x30CC;
enum uint EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR = 0x30CD;
enum uint EGL_LOWER_LEFT_KHR = 0x30CE;
enum uint EGL_UPPER_LEFT_KHR = 0x30CF;
enum uint EGL_STREAM_FIFO_LENGTH_KHR = 0x31FC;
enum uint EGL_STREAM_TIME_NOW_KHR = 0x31FD;
enum uint EGL_STREAM_TIME_CONSUMER_KHR = 0x31FE;
enum uint EGL_STREAM_TIME_PRODUCER_KHR = 0x31FF;
enum uint EGL_D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE = 0x3200;
enum uint EGL_DRM_BUFFER_FORMAT_MESA = 0x31D0;
enum uint EGL_DRM_BUFFER_USE_MESA = 0x31D1;
enum uint EGL_DRM_BUFFER_FORMAT_ARGB32_MESA = 0x31D2;
enum uint EGL_DRM_BUFFER_MESA = 0x31D3;
enum uint EGL_DRM_BUFFER_STRIDE_MESA = 0x31D4;
enum uint EGL_DRM_BUFFER_USE_SCANOUT_MESA = 0x00000001;
enum uint EGL_DRM_BUFFER_USE_SHARE_MESA = 0x00000002;
enum uint EGL_STREAM_BIT_KHR = 0x0800;
enum uint EGL_GL_TEXTURE_3D_KHR = 0x30B2;
enum uint EGL_GL_TEXTURE_ZOFFSET_KHR = 0x30BD;
enum uint EGL_CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR = 0x321E;
enum uint EGL_PLATFORM_X11_EXT = 0x31D5;
enum uint EGL_PLATFORM_X11_SCREEN_EXT = 0x31D6;
enum uint EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR = 0x30B3;
enum uint EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR = 0x30B4;
enum uint EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR = 0x30B5;
enum uint EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR = 0x30B6;
enum uint EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR = 0x30B7;
enum uint EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR = 0x30B8;
enum uint EGL_SYNC_TYPE_KHR = 0x30F7;
enum uint EGL_SYNC_NEW_FRAME_NV = 0x321F;
enum uint EGL_CONTEXT_MAJOR_VERSION_KHR = 0x3098;
enum uint EGL_CONTEXT_MINOR_VERSION_KHR = 0x30FB;
enum uint EGL_CONTEXT_FLAGS_KHR = 0x30FC;
enum uint EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR = 0x30FD;
enum uint EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR = 0x31BD;
enum uint EGL_NO_RESET_NOTIFICATION_KHR = 0x31BE;
enum uint EGL_LOSE_CONTEXT_ON_RESET_KHR = 0x31BF;
enum uint EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR = 0x00000001;
enum uint EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR = 0x00000002;
enum uint EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR = 0x00000004;
enum uint EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR = 0x00000001;
enum uint EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR = 0x00000002;
enum uint EGL_OPENGL_ES3_BIT_KHR = 0x00000040;
enum uint EGL_CL_EVENT_HANDLE_KHR = 0x309C;
enum uint EGL_SYNC_CL_EVENT_KHR = 0x30FE;
enum uint EGL_SYNC_CL_EVENT_COMPLETE_KHR = 0x30FF;
enum uint EGL_COVERAGE_BUFFERS_NV = 0x30E0;
enum uint EGL_COVERAGE_SAMPLES_NV = 0x30E1;
enum uint EGL_GL_RENDERBUFFER_KHR = 0x30B9;
enum uint EGL_LINUX_DMA_BUF_EXT = 0x3270;
enum uint EGL_LINUX_DRM_FOURCC_EXT = 0x3271;
enum uint EGL_DMA_BUF_PLANE0_FD_EXT = 0x3272;
enum uint EGL_DMA_BUF_PLANE0_OFFSET_EXT = 0x3273;
enum uint EGL_DMA_BUF_PLANE0_PITCH_EXT = 0x3274;
enum uint EGL_DMA_BUF_PLANE1_FD_EXT = 0x3275;
enum uint EGL_DMA_BUF_PLANE1_OFFSET_EXT = 0x3276;
enum uint EGL_DMA_BUF_PLANE1_PITCH_EXT = 0x3277;
enum uint EGL_DMA_BUF_PLANE2_FD_EXT = 0x3278;
enum uint EGL_DMA_BUF_PLANE2_OFFSET_EXT = 0x3279;
enum uint EGL_DMA_BUF_PLANE2_PITCH_EXT = 0x327A;
enum uint EGL_YUV_COLOR_SPACE_HINT_EXT = 0x327B;
enum uint EGL_SAMPLE_RANGE_HINT_EXT = 0x327C;
enum uint EGL_YUV_CHROMA_HORIZONTAL_SITING_HINT_EXT = 0x327D;
enum uint EGL_YUV_CHROMA_VERTICAL_SITING_HINT_EXT = 0x327E;
enum uint EGL_ITU_REC601_EXT = 0x327F;
enum uint EGL_ITU_REC709_EXT = 0x3280;
enum uint EGL_ITU_REC2020_EXT = 0x3281;
enum uint EGL_YUV_FULL_RANGE_EXT = 0x3282;
enum uint EGL_YUV_NARROW_RANGE_EXT = 0x3283;
enum uint EGL_YUV_CHROMA_SITING_0_EXT = 0x3284;
enum uint EGL_YUV_CHROMA_SITING_0_5_EXT = 0x3285;
enum uint EGL_POST_SUB_BUFFER_SUPPORTED_NV = 0x30BE;
enum uint EGL_DISCARD_SAMPLES_ARM = 0x3286;
enum uint EGL_COLOR_FORMAT_HI = 0x8F70;
enum uint EGL_COLOR_RGB_HI = 0x8F71;
enum uint EGL_COLOR_RGBA_HI = 0x8F72;
enum uint EGL_COLOR_ARGB_HI = 0x8F73;
enum uint EGL_RECORDABLE_ANDROID = 0x3142;
enum uint EGL_GL_TEXTURE_2D_KHR = 0x30B1;
enum uint EGL_GL_TEXTURE_LEVEL_KHR = 0x30BC;
enum uint EGL_DEPTH_ENCODING_NV = 0x30E2;
enum uint EGL_DEPTH_ENCODING_NONLINEAR_NV = 0x30E3;
enum uint EGL_SYNC_PRIOR_COMMANDS_COMPLETE_NV = 0x30E6;
enum uint EGL_SYNC_STATUS_NV = 0x30E7;
enum uint EGL_SIGNALED_NV = 0x30E8;
enum uint EGL_UNSIGNALED_NV = 0x30E9;
enum uint EGL_SYNC_FLUSH_COMMANDS_BIT_NV = 0x0001;
enum uint EGL_ALREADY_SIGNALED_NV = 0x30EA;
enum uint EGL_TIMEOUT_EXPIRED_NV = 0x30EB;
enum uint EGL_CONDITION_SATISFIED_NV = 0x30EC;
enum uint EGL_SYNC_TYPE_NV = 0x30ED;
enum uint EGL_SYNC_CONDITION_NV = 0x30EE;
enum uint EGL_SYNC_FENCE_NV = 0x30EF;
enum uint EGL_SYNC_NATIVE_FENCE_ANDROID = 0x3144;
enum uint EGL_SYNC_NATIVE_FENCE_FD_ANDROID = 0x3145;
enum uint EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID = 0x3146;
enum uint EGL_COVERAGE_SAMPLE_RESOLVE_NV = 0x3131;
enum uint EGL_COVERAGE_SAMPLE_RESOLVE_DEFAULT_NV = 0x3132;
enum uint EGL_COVERAGE_SAMPLE_RESOLVE_NONE_NV = 0x3133;
enum uint EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR = 0x30F0;
enum uint EGL_SYNC_CONDITION_KHR = 0x30F8;
enum uint EGL_SYNC_FENCE_KHR = 0x30F9;
enum uint EGL_CLIENT_PIXMAP_POINTER_HI = 0x8F74;
enum uint EGL_CONSUMER_LATENCY_USEC_KHR = 0x3210;
enum uint EGL_PRODUCER_FRAME_KHR = 0x3212;
enum uint EGL_CONSUMER_FRAME_KHR = 0x3213;
enum uint EGL_STREAM_STATE_KHR = 0x3214;
enum uint EGL_STREAM_STATE_CREATED_KHR = 0x3215;
enum uint EGL_STREAM_STATE_CONNECTING_KHR = 0x3216;
enum uint EGL_STREAM_STATE_EMPTY_KHR = 0x3217;
enum uint EGL_STREAM_STATE_NEW_FRAME_AVAILABLE_KHR = 0x3218;
enum uint EGL_STREAM_STATE_OLD_FRAME_AVAILABLE_KHR = 0x3219;
enum uint EGL_STREAM_STATE_DISCONNECTED_KHR = 0x321A;
enum uint EGL_BAD_STREAM_KHR = 0x321B;
enum uint EGL_BAD_STATE_KHR = 0x321C;
enum uint EGL_NATIVE_PIXMAP_KHR = 0x30B0;
enum uint EGL_AUTO_STEREO_NV = 0x3136;
enum uint EGL_FRAMEBUFFER_TARGET_ANDROID = 0x3147;
enum uint EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT = 0x30BF;
enum uint EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT = 0x3138;
enum uint EGL_NO_RESET_NOTIFICATION_EXT = 0x31BE;
enum uint EGL_LOSE_CONTEXT_ON_RESET_EXT = 0x31BF;
enum uint EGL_BITMAP_PIXEL_SIZE_KHR = 0x3110;
enum uint EGL_SYNC_STATUS_KHR = 0x30F1;
enum uint EGL_SIGNALED_KHR = 0x30F2;
enum uint EGL_UNSIGNALED_KHR = 0x30F3;
enum uint EGL_TIMEOUT_EXPIRED_KHR = 0x30F5;
enum uint EGL_CONDITION_SATISFIED_KHR = 0x30F6;
enum uint EGL_SYNC_REUSABLE_KHR = 0x30FA;
enum uint EGL_SYNC_FLUSH_COMMANDS_BIT_KHR = 0x0001;
enum uint EGL_CONFORMANT_KHR = 0x3042;
enum uint EGL_VG_COLORSPACE_LINEAR_BIT_KHR = 0x0020;
enum uint EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR = 0x0040;
enum uint EGL_CONTEXT_PRIORITY_LEVEL_IMG = 0x3100;
enum uint EGL_CONTEXT_PRIORITY_HIGH_IMG = 0x3101;
enum uint EGL_CONTEXT_PRIORITY_MEDIUM_IMG = 0x3102;
enum uint EGL_CONTEXT_PRIORITY_LOW_IMG = 0x3103;
enum uint EGL_MULTIVIEW_VIEW_COUNT_EXT = 0x3134;
enum uint EGL_IMAGE_PRESERVED_KHR = 0x30D2;
enum uint EGL_VG_PARENT_IMAGE_KHR = 0x30BA;
enum uint EGL_NATIVE_BUFFER_ANDROID = 0x3140;
enum uint EGL_BUFFER_AGE_EXT = 0x313D;
nothrow extern(System) {
alias fp_eglLockSurfaceKHR = EGLBoolean function(EGLDisplay, EGLSurface, const(EGLint)*);
alias fp_eglUnlockSurfaceKHR = EGLBoolean function(EGLDisplay, EGLSurface);
alias fp_eglQueryStreamTimeKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR, EGLenum, EGLTimeKHR*);
alias fp_eglQueryNativeDisplayNV = EGLBoolean function(EGLDisplay, EGLNativeDisplayType*);
alias fp_eglQueryNativeWindowNV = EGLBoolean function(EGLDisplay, EGLSurface, EGLNativeWindowType*);
alias fp_eglQueryNativePixmapNV = EGLBoolean function(EGLDisplay, EGLSurface, EGLNativePixmapType*);
alias fp_eglCreateDRMImageMESA = EGLImageKHR function(EGLDisplay, const(EGLint)*);
alias fp_eglExportDRMImageMESA = EGLBoolean function(EGLDisplay, EGLImageKHR, EGLint*, EGLint*, EGLint*);
alias fp_eglCreateStreamProducerSurfaceKHR = EGLSurface function(EGLDisplay, EGLConfig, EGLStreamKHR, const(EGLint)*);
alias fp_eglStreamConsumerGLTextureExternalKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR);
alias fp_eglStreamConsumerAcquireKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR);
alias fp_eglStreamConsumerReleaseKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR);
alias fp_eglCreateStreamSyncNV = EGLSyncKHR function(EGLDisplay, EGLStreamKHR, EGLenum, const(EGLint)*);
alias fp_eglSwapBuffersWithDamageEXT = EGLBoolean function(EGLDisplay, EGLSurface, EGLint*, EGLint);
alias fp_eglPostSubBufferNV = EGLBoolean function(EGLDisplay, EGLSurface, EGLint, EGLint, EGLint, EGLint);
alias fp_eglGetSystemTimeFrequencyNV = EGLuint64NV function();
alias fp_eglGetSystemTimeNV = EGLuint64NV function();
alias fp_eglCreateFenceSyncNV = EGLSyncNV function(EGLDisplay, EGLenum, const(EGLint)*);
alias fp_eglDestroySyncNV = EGLBoolean function(EGLSyncNV);
alias fp_eglFenceNV = EGLBoolean function(EGLSyncNV);
alias fp_eglClientWaitSyncNV = EGLint function(EGLSyncNV, EGLint, EGLTimeNV);
alias fp_eglSignalSyncNV = EGLBoolean function(EGLSyncNV, EGLenum);
alias fp_eglGetSyncAttribNV = EGLBoolean function(EGLSyncNV, EGLint, EGLint*);
alias fp_eglWaitSyncKHR = EGLint function(EGLDisplay, EGLSyncKHR, EGLint);
alias fp_eglDupNativeFenceFDANDROID = EGLint function(EGLDisplay, EGLSyncKHR);
alias fp_eglCreatePixmapSurfaceHI = EGLSurface function(EGLDisplay, EGLConfig, EGLClientPixmapHI*);
alias fp_eglCreateStreamKHR = EGLStreamKHR function(EGLDisplay, const(EGLint)*);
alias fp_eglDestroyStreamKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR);
alias fp_eglStreamAttribKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR, EGLenum, EGLint);
alias fp_eglQueryStreamKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR, EGLenum, EGLint*);
alias fp_eglQueryStreamu64KHR = EGLBoolean function(EGLDisplay, EGLStreamKHR, EGLenum, EGLuint64KHR*);
alias fp_eglCreateImageKHR = EGLImageKHR function(EGLDisplay, EGLContext, EGLenum, EGLClientBuffer, const(EGLint)*);
alias fp_eglDestroyImageKHR = EGLBoolean function(EGLDisplay, EGLImageKHR);
alias fp_eglQuerySurfacePointerANGLE = EGLBoolean function(EGLDisplay, EGLSurface, EGLint, void**);
alias fp_eglCreateSyncKHR = EGLSyncKHR function(EGLDisplay, EGLenum, const(EGLint)*);
alias fp_eglDestroySyncKHR = EGLBoolean function(EGLDisplay, EGLSyncKHR);
alias fp_eglClientWaitSyncKHR = EGLint function(EGLDisplay, EGLSyncKHR, EGLint, EGLTimeKHR);
alias fp_eglSignalSyncKHR = EGLBoolean function(EGLDisplay, EGLSyncKHR, EGLenum);
alias fp_eglGetSyncAttribKHR = EGLBoolean function(EGLDisplay, EGLSyncKHR, EGLint, EGLint*);
alias fp_eglGetStreamFileDescriptorKHR = EGLNativeFileDescriptorKHR function(EGLDisplay, EGLStreamKHR);
alias fp_eglCreateStreamFromFileDescriptorKHR = EGLStreamKHR function(EGLDisplay, EGLNativeFileDescriptorKHR);
alias fp_eglGetPlatformDisplayEXT = EGLDisplay function(EGLenum, void*, const(EGLint)*);
alias fp_eglCreatePlatformWindowSurfaceEXT = EGLSurface function(EGLDisplay, EGLConfig, void*, const(EGLint)*);
alias fp_eglCreatePlatformPixmapSurfaceEXT = EGLSurface function(EGLDisplay, EGLConfig, void*, const(EGLint)*);
alias fp_eglSetBlobCacheFuncsANDROID = void function(EGLDisplay, EGLSetBlobFuncANDROID, EGLGetBlobFuncANDROID);
}
__gshared {
fp_eglCreatePlatformPixmapSurfaceEXT eglCreatePlatformPixmapSurfaceEXT;
fp_eglCreateFenceSyncNV eglCreateFenceSyncNV;
fp_eglStreamAttribKHR eglStreamAttribKHR;
fp_eglCreatePixmapSurfaceHI eglCreatePixmapSurfaceHI;
fp_eglLockSurfaceKHR eglLockSurfaceKHR;
fp_eglDupNativeFenceFDANDROID eglDupNativeFenceFDANDROID;
fp_eglExportDRMImageMESA eglExportDRMImageMESA;
fp_eglQueryStreamKHR eglQueryStreamKHR;
fp_eglPostSubBufferNV eglPostSubBufferNV;
fp_eglDestroySyncKHR eglDestroySyncKHR;
fp_eglGetSystemTimeNV eglGetSystemTimeNV;
fp_eglGetSyncAttribKHR eglGetSyncAttribKHR;
fp_eglWaitSyncKHR eglWaitSyncKHR;
fp_eglDestroyImageKHR eglDestroyImageKHR;
fp_eglUnlockSurfaceKHR eglUnlockSurfaceKHR;
fp_eglGetPlatformDisplayEXT eglGetPlatformDisplayEXT;
fp_eglGetSyncAttribNV eglGetSyncAttribNV;
fp_eglClientWaitSyncKHR eglClientWaitSyncKHR;
fp_eglGetSystemTimeFrequencyNV eglGetSystemTimeFrequencyNV;
fp_eglClientWaitSyncNV eglClientWaitSyncNV;
fp_eglCreateStreamProducerSurfaceKHR eglCreateStreamProducerSurfaceKHR;
fp_eglSignalSyncKHR eglSignalSyncKHR;
fp_eglCreateDRMImageMESA eglCreateDRMImageMESA;
fp_eglCreateStreamFromFileDescriptorKHR eglCreateStreamFromFileDescriptorKHR;
fp_eglSignalSyncNV eglSignalSyncNV;
fp_eglQueryNativeWindowNV eglQueryNativeWindowNV;
fp_eglQueryStreamu64KHR eglQueryStreamu64KHR;
fp_eglCreateSyncKHR eglCreateSyncKHR;
fp_eglCreateStreamKHR eglCreateStreamKHR;
fp_eglCreatePlatformWindowSurfaceEXT eglCreatePlatformWindowSurfaceEXT;
fp_eglFenceNV eglFenceNV;
fp_eglGetStreamFileDescriptorKHR eglGetStreamFileDescriptorKHR;
fp_eglSetBlobCacheFuncsANDROID eglSetBlobCacheFuncsANDROID;
fp_eglStreamConsumerReleaseKHR eglStreamConsumerReleaseKHR;
fp_eglQueryNativePixmapNV eglQueryNativePixmapNV;
fp_eglSwapBuffersWithDamageEXT eglSwapBuffersWithDamageEXT;
fp_eglQuerySurfacePointerANGLE eglQuerySurfacePointerANGLE;
fp_eglDestroyStreamKHR eglDestroyStreamKHR;
fp_eglCreateImageKHR eglCreateImageKHR;
fp_eglStreamConsumerAcquireKHR eglStreamConsumerAcquireKHR;
fp_eglStreamConsumerGLTextureExternalKHR eglStreamConsumerGLTextureExternalKHR;
fp_eglCreateStreamSyncNV eglCreateStreamSyncNV;
fp_eglQueryStreamTimeKHR eglQueryStreamTimeKHR;
fp_eglQueryNativeDisplayNV eglQueryNativeDisplayNV;
fp_eglDestroySyncNV eglDestroySyncNV;
}
