module glad.egl.ext;


private import glad.egl.types;
private import glad.egl.enums;
private import glad.egl.funcs;
nothrow extern(System) {
alias fp_eglLockSurfaceKHR = EGLBoolean function(EGLDisplay, EGLSurface, const(EGLint)*);
alias fp_eglUnlockSurfaceKHR = EGLBoolean function(EGLDisplay, EGLSurface);
alias fp_eglQueryStreamTimeKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR, EGLenum, EGLTimeKHR*);
alias fp_eglQueryNativeDisplayNV = EGLBoolean function(EGLDisplay, EGLNativeDisplayType*);
alias fp_eglQueryNativeWindowNV = EGLBoolean function(EGLDisplay, EGLSurface, EGLNativeWindowType*);
alias fp_eglQueryNativePixmapNV = EGLBoolean function(EGLDisplay, EGLSurface, EGLNativePixmapType*);
alias fp_eglCreateDRMImageMESA = EGLImageKHR function(EGLDisplay, const(EGLint)*);
alias fp_eglExportDRMImageMESA = EGLBoolean function(EGLDisplay, EGLImageKHR, EGLint*, EGLint*, EGLint*);
alias fp_eglCreateStreamProducerSurfaceKHR = EGLSurface function(EGLDisplay, EGLConfig, EGLStreamKHR, const(EGLint)*);
alias fp_eglStreamConsumerGLTextureExternalKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR);
alias fp_eglStreamConsumerAcquireKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR);
alias fp_eglStreamConsumerReleaseKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR);
alias fp_eglCreateStreamSyncNV = EGLSyncKHR function(EGLDisplay, EGLStreamKHR, EGLenum, const(EGLint)*);
alias fp_eglSwapBuffersWithDamageEXT = EGLBoolean function(EGLDisplay, EGLSurface, EGLint*, EGLint);
alias fp_eglPostSubBufferNV = EGLBoolean function(EGLDisplay, EGLSurface, EGLint, EGLint, EGLint, EGLint);
alias fp_eglGetSystemTimeFrequencyNV = EGLuint64NV function();
alias fp_eglGetSystemTimeNV = EGLuint64NV function();
alias fp_eglCreateFenceSyncNV = EGLSyncNV function(EGLDisplay, EGLenum, const(EGLint)*);
alias fp_eglDestroySyncNV = EGLBoolean function(EGLSyncNV);
alias fp_eglFenceNV = EGLBoolean function(EGLSyncNV);
alias fp_eglClientWaitSyncNV = EGLint function(EGLSyncNV, EGLint, EGLTimeNV);
alias fp_eglSignalSyncNV = EGLBoolean function(EGLSyncNV, EGLenum);
alias fp_eglGetSyncAttribNV = EGLBoolean function(EGLSyncNV, EGLint, EGLint*);
alias fp_eglWaitSyncKHR = EGLint function(EGLDisplay, EGLSyncKHR, EGLint);
alias fp_eglDupNativeFenceFDANDROID = EGLint function(EGLDisplay, EGLSyncKHR);
alias fp_eglCreatePixmapSurfaceHI = EGLSurface function(EGLDisplay, EGLConfig, EGLClientPixmapHI*);
alias fp_eglCreateStreamKHR = EGLStreamKHR function(EGLDisplay, const(EGLint)*);
alias fp_eglDestroyStreamKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR);
alias fp_eglStreamAttribKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR, EGLenum, EGLint);
alias fp_eglQueryStreamKHR = EGLBoolean function(EGLDisplay, EGLStreamKHR, EGLenum, EGLint*);
alias fp_eglQueryStreamu64KHR = EGLBoolean function(EGLDisplay, EGLStreamKHR, EGLenum, EGLuint64KHR*);
alias fp_eglCreateImageKHR = EGLImageKHR function(EGLDisplay, EGLContext, EGLenum, EGLClientBuffer, const(EGLint)*);
alias fp_eglDestroyImageKHR = EGLBoolean function(EGLDisplay, EGLImageKHR);
alias fp_eglQuerySurfacePointerANGLE = EGLBoolean function(EGLDisplay, EGLSurface, EGLint, void**);
alias fp_eglCreateSyncKHR = EGLSyncKHR function(EGLDisplay, EGLenum, const(EGLint)*);
alias fp_eglDestroySyncKHR = EGLBoolean function(EGLDisplay, EGLSyncKHR);
alias fp_eglClientWaitSyncKHR = EGLint function(EGLDisplay, EGLSyncKHR, EGLint, EGLTimeKHR);
alias fp_eglSignalSyncKHR = EGLBoolean function(EGLDisplay, EGLSyncKHR, EGLenum);
alias fp_eglGetSyncAttribKHR = EGLBoolean function(EGLDisplay, EGLSyncKHR, EGLint, EGLint*);
alias fp_eglGetStreamFileDescriptorKHR = EGLNativeFileDescriptorKHR function(EGLDisplay, EGLStreamKHR);
alias fp_eglCreateStreamFromFileDescriptorKHR = EGLStreamKHR function(EGLDisplay, EGLNativeFileDescriptorKHR);
alias fp_eglGetPlatformDisplayEXT = EGLDisplay function(EGLenum, void*, const(EGLint)*);
alias fp_eglCreatePlatformWindowSurfaceEXT = EGLSurface function(EGLDisplay, EGLConfig, void*, const(EGLint)*);
alias fp_eglCreatePlatformPixmapSurfaceEXT = EGLSurface function(EGLDisplay, EGLConfig, void*, const(EGLint)*);
alias fp_eglSetBlobCacheFuncsANDROID = void function(EGLDisplay, EGLSetBlobFuncANDROID, EGLGetBlobFuncANDROID);
}
__gshared {
fp_eglCreatePlatformPixmapSurfaceEXT eglCreatePlatformPixmapSurfaceEXT;
fp_eglCreateFenceSyncNV eglCreateFenceSyncNV;
fp_eglStreamAttribKHR eglStreamAttribKHR;
fp_eglCreatePixmapSurfaceHI eglCreatePixmapSurfaceHI;
fp_eglLockSurfaceKHR eglLockSurfaceKHR;
fp_eglDupNativeFenceFDANDROID eglDupNativeFenceFDANDROID;
fp_eglExportDRMImageMESA eglExportDRMImageMESA;
fp_eglQueryStreamKHR eglQueryStreamKHR;
fp_eglPostSubBufferNV eglPostSubBufferNV;
fp_eglDestroySyncKHR eglDestroySyncKHR;
fp_eglGetSystemTimeNV eglGetSystemTimeNV;
fp_eglGetSyncAttribKHR eglGetSyncAttribKHR;
fp_eglWaitSyncKHR eglWaitSyncKHR;
fp_eglDestroyImageKHR eglDestroyImageKHR;
fp_eglUnlockSurfaceKHR eglUnlockSurfaceKHR;
fp_eglGetPlatformDisplayEXT eglGetPlatformDisplayEXT;
fp_eglGetSyncAttribNV eglGetSyncAttribNV;
fp_eglClientWaitSyncKHR eglClientWaitSyncKHR;
fp_eglGetSystemTimeFrequencyNV eglGetSystemTimeFrequencyNV;
fp_eglClientWaitSyncNV eglClientWaitSyncNV;
fp_eglCreateStreamProducerSurfaceKHR eglCreateStreamProducerSurfaceKHR;
fp_eglSignalSyncKHR eglSignalSyncKHR;
fp_eglCreateDRMImageMESA eglCreateDRMImageMESA;
fp_eglCreateStreamFromFileDescriptorKHR eglCreateStreamFromFileDescriptorKHR;
fp_eglSignalSyncNV eglSignalSyncNV;
fp_eglQueryNativeWindowNV eglQueryNativeWindowNV;
fp_eglQueryStreamu64KHR eglQueryStreamu64KHR;
fp_eglCreateSyncKHR eglCreateSyncKHR;
fp_eglCreateStreamKHR eglCreateStreamKHR;
fp_eglCreatePlatformWindowSurfaceEXT eglCreatePlatformWindowSurfaceEXT;
fp_eglFenceNV eglFenceNV;
fp_eglGetStreamFileDescriptorKHR eglGetStreamFileDescriptorKHR;
fp_eglSetBlobCacheFuncsANDROID eglSetBlobCacheFuncsANDROID;
fp_eglStreamConsumerReleaseKHR eglStreamConsumerReleaseKHR;
fp_eglQueryNativePixmapNV eglQueryNativePixmapNV;
fp_eglSwapBuffersWithDamageEXT eglSwapBuffersWithDamageEXT;
fp_eglQuerySurfacePointerANGLE eglQuerySurfacePointerANGLE;
fp_eglDestroyStreamKHR eglDestroyStreamKHR;
fp_eglCreateImageKHR eglCreateImageKHR;
fp_eglStreamConsumerAcquireKHR eglStreamConsumerAcquireKHR;
fp_eglStreamConsumerGLTextureExternalKHR eglStreamConsumerGLTextureExternalKHR;
fp_eglCreateStreamSyncNV eglCreateStreamSyncNV;
fp_eglQueryStreamTimeKHR eglQueryStreamTimeKHR;
fp_eglQueryNativeDisplayNV eglQueryNativeDisplayNV;
fp_eglDestroySyncNV eglDestroySyncNV;
}
