module glad.wgl.ext;


private import glad.wgl.types;
private import glad.wgl.enums;
private import glad.wgl.funcs;
enum uint WGL_COVERAGE_SAMPLES_NV = 0x2042;
enum uint WGL_COLOR_SAMPLES_NV = 0x20B9;
enum uint WGL_IMAGE_BUFFER_MIN_ACCESS_I3D = 0x00000001;
enum uint WGL_IMAGE_BUFFER_LOCK_I3D = 0x00000002;
enum uint WGL_FLOAT_COMPONENTS_NV = 0x20B0;
enum uint WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV = 0x20B1;
enum uint WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV = 0x20B2;
enum uint WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV = 0x20B3;
enum uint WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV = 0x20B4;
enum uint WGL_TEXTURE_FLOAT_R_NV = 0x20B5;
enum uint WGL_TEXTURE_FLOAT_RG_NV = 0x20B6;
enum uint WGL_TEXTURE_FLOAT_RGB_NV = 0x20B7;
enum uint WGL_TEXTURE_FLOAT_RGBA_NV = 0x20B8;
enum uint WGL_TYPE_RGBA_FLOAT_ARB = 0x21A0;
enum uint WGL_CONTEXT_DEBUG_BIT_ARB = 0x00000001;
enum uint WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB = 0x00000002;
enum uint WGL_CONTEXT_MAJOR_VERSION_ARB = 0x2091;
enum uint WGL_CONTEXT_MINOR_VERSION_ARB = 0x2092;
enum uint WGL_CONTEXT_LAYER_PLANE_ARB = 0x2093;
enum uint WGL_CONTEXT_FLAGS_ARB = 0x2094;
enum uint ERROR_INVALID_VERSION_ARB = 0x2095;
enum uint ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV = 0x20D0;
enum uint ERROR_MISSING_AFFINITY_MASK_NV = 0x20D1;
enum uint WGL_NUMBER_PIXEL_FORMATS_EXT = 0x2000;
enum uint WGL_DRAW_TO_WINDOW_EXT = 0x2001;
enum uint WGL_DRAW_TO_BITMAP_EXT = 0x2002;
enum uint WGL_ACCELERATION_EXT = 0x2003;
enum uint WGL_NEED_PALETTE_EXT = 0x2004;
enum uint WGL_NEED_SYSTEM_PALETTE_EXT = 0x2005;
enum uint WGL_SWAP_LAYER_BUFFERS_EXT = 0x2006;
enum uint WGL_SWAP_METHOD_EXT = 0x2007;
enum uint WGL_NUMBER_OVERLAYS_EXT = 0x2008;
enum uint WGL_NUMBER_UNDERLAYS_EXT = 0x2009;
enum uint WGL_TRANSPARENT_EXT = 0x200A;
enum uint WGL_TRANSPARENT_VALUE_EXT = 0x200B;
enum uint WGL_SHARE_DEPTH_EXT = 0x200C;
enum uint WGL_SHARE_STENCIL_EXT = 0x200D;
enum uint WGL_SHARE_ACCUM_EXT = 0x200E;
enum uint WGL_SUPPORT_GDI_EXT = 0x200F;
enum uint WGL_SUPPORT_OPENGL_EXT = 0x2010;
enum uint WGL_DOUBLE_BUFFER_EXT = 0x2011;
enum uint WGL_STEREO_EXT = 0x2012;
enum uint WGL_PIXEL_TYPE_EXT = 0x2013;
enum uint WGL_COLOR_BITS_EXT = 0x2014;
enum uint WGL_RED_BITS_EXT = 0x2015;
enum uint WGL_RED_SHIFT_EXT = 0x2016;
enum uint WGL_GREEN_BITS_EXT = 0x2017;
enum uint WGL_GREEN_SHIFT_EXT = 0x2018;
enum uint WGL_BLUE_BITS_EXT = 0x2019;
enum uint WGL_BLUE_SHIFT_EXT = 0x201A;
enum uint WGL_ALPHA_BITS_EXT = 0x201B;
enum uint WGL_ALPHA_SHIFT_EXT = 0x201C;
enum uint WGL_ACCUM_BITS_EXT = 0x201D;
enum uint WGL_ACCUM_RED_BITS_EXT = 0x201E;
enum uint WGL_ACCUM_GREEN_BITS_EXT = 0x201F;
enum uint WGL_ACCUM_BLUE_BITS_EXT = 0x2020;
enum uint WGL_ACCUM_ALPHA_BITS_EXT = 0x2021;
enum uint WGL_DEPTH_BITS_EXT = 0x2022;
enum uint WGL_STENCIL_BITS_EXT = 0x2023;
enum uint WGL_AUX_BUFFERS_EXT = 0x2024;
enum uint WGL_NO_ACCELERATION_EXT = 0x2025;
enum uint WGL_GENERIC_ACCELERATION_EXT = 0x2026;
enum uint WGL_FULL_ACCELERATION_EXT = 0x2027;
enum uint WGL_SWAP_EXCHANGE_EXT = 0x2028;
enum uint WGL_SWAP_COPY_EXT = 0x2029;
enum uint WGL_SWAP_UNDEFINED_EXT = 0x202A;
enum uint WGL_TYPE_RGBA_EXT = 0x202B;
enum uint WGL_TYPE_COLORINDEX_EXT = 0x202C;
enum uint WGL_UNIQUE_ID_NV = 0x20CE;
enum uint WGL_NUM_VIDEO_CAPTURE_SLOTS_NV = 0x20CF;
enum uint WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV = 0x20A0;
enum uint WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV = 0x20A1;
enum uint WGL_TEXTURE_RECTANGLE_NV = 0x20A2;
enum uint WGL_CONTEXT_ES_PROFILE_BIT_EXT = 0x00000004;
enum uint WGL_CONTEXT_RESET_ISOLATION_BIT_ARB = 0x00000008;
enum uint WGL_BIND_TO_TEXTURE_RGB_ARB = 0x2070;
enum uint WGL_BIND_TO_TEXTURE_RGBA_ARB = 0x2071;
enum uint WGL_TEXTURE_FORMAT_ARB = 0x2072;
enum uint WGL_TEXTURE_TARGET_ARB = 0x2073;
enum uint WGL_MIPMAP_TEXTURE_ARB = 0x2074;
enum uint WGL_TEXTURE_RGB_ARB = 0x2075;
enum uint WGL_TEXTURE_RGBA_ARB = 0x2076;
enum uint WGL_NO_TEXTURE_ARB = 0x2077;
enum uint WGL_TEXTURE_CUBE_MAP_ARB = 0x2078;
enum uint WGL_TEXTURE_1D_ARB = 0x2079;
enum uint WGL_TEXTURE_2D_ARB = 0x207A;
enum uint WGL_MIPMAP_LEVEL_ARB = 0x207B;
enum uint WGL_CUBE_MAP_FACE_ARB = 0x207C;
enum uint WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x207D;
enum uint WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x207E;
enum uint WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x207F;
enum uint WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x2080;
enum uint WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x2081;
enum uint WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x2082;
enum uint WGL_FRONT_LEFT_ARB = 0x2083;
enum uint WGL_FRONT_RIGHT_ARB = 0x2084;
enum uint WGL_BACK_LEFT_ARB = 0x2085;
enum uint WGL_BACK_RIGHT_ARB = 0x2086;
enum uint WGL_AUX0_ARB = 0x2087;
enum uint WGL_AUX1_ARB = 0x2088;
enum uint WGL_AUX2_ARB = 0x2089;
enum uint WGL_AUX3_ARB = 0x208A;
enum uint WGL_AUX4_ARB = 0x208B;
enum uint WGL_AUX5_ARB = 0x208C;
enum uint WGL_AUX6_ARB = 0x208D;
enum uint WGL_AUX7_ARB = 0x208E;
enum uint WGL_AUX8_ARB = 0x208F;
enum uint WGL_AUX9_ARB = 0x2090;
enum uint WGL_DEPTH_FLOAT_EXT = 0x2040;
enum uint WGL_NUMBER_PIXEL_FORMATS_ARB = 0x2000;
enum uint WGL_DRAW_TO_WINDOW_ARB = 0x2001;
enum uint WGL_DRAW_TO_BITMAP_ARB = 0x2002;
enum uint WGL_ACCELERATION_ARB = 0x2003;
enum uint WGL_NEED_PALETTE_ARB = 0x2004;
enum uint WGL_NEED_SYSTEM_PALETTE_ARB = 0x2005;
enum uint WGL_SWAP_LAYER_BUFFERS_ARB = 0x2006;
enum uint WGL_SWAP_METHOD_ARB = 0x2007;
enum uint WGL_NUMBER_OVERLAYS_ARB = 0x2008;
enum uint WGL_NUMBER_UNDERLAYS_ARB = 0x2009;
enum uint WGL_TRANSPARENT_ARB = 0x200A;
enum uint WGL_TRANSPARENT_RED_VALUE_ARB = 0x2037;
enum uint WGL_TRANSPARENT_GREEN_VALUE_ARB = 0x2038;
enum uint WGL_TRANSPARENT_BLUE_VALUE_ARB = 0x2039;
enum uint WGL_TRANSPARENT_ALPHA_VALUE_ARB = 0x203A;
enum uint WGL_TRANSPARENT_INDEX_VALUE_ARB = 0x203B;
enum uint WGL_SHARE_DEPTH_ARB = 0x200C;
enum uint WGL_SHARE_STENCIL_ARB = 0x200D;
enum uint WGL_SHARE_ACCUM_ARB = 0x200E;
enum uint WGL_SUPPORT_GDI_ARB = 0x200F;
enum uint WGL_SUPPORT_OPENGL_ARB = 0x2010;
enum uint WGL_DOUBLE_BUFFER_ARB = 0x2011;
enum uint WGL_STEREO_ARB = 0x2012;
enum uint WGL_PIXEL_TYPE_ARB = 0x2013;
enum uint WGL_COLOR_BITS_ARB = 0x2014;
enum uint WGL_RED_BITS_ARB = 0x2015;
enum uint WGL_RED_SHIFT_ARB = 0x2016;
enum uint WGL_GREEN_BITS_ARB = 0x2017;
enum uint WGL_GREEN_SHIFT_ARB = 0x2018;
enum uint WGL_BLUE_BITS_ARB = 0x2019;
enum uint WGL_BLUE_SHIFT_ARB = 0x201A;
enum uint WGL_ALPHA_BITS_ARB = 0x201B;
enum uint WGL_ALPHA_SHIFT_ARB = 0x201C;
enum uint WGL_ACCUM_BITS_ARB = 0x201D;
enum uint WGL_ACCUM_RED_BITS_ARB = 0x201E;
enum uint WGL_ACCUM_GREEN_BITS_ARB = 0x201F;
enum uint WGL_ACCUM_BLUE_BITS_ARB = 0x2020;
enum uint WGL_ACCUM_ALPHA_BITS_ARB = 0x2021;
enum uint WGL_DEPTH_BITS_ARB = 0x2022;
enum uint WGL_STENCIL_BITS_ARB = 0x2023;
enum uint WGL_AUX_BUFFERS_ARB = 0x2024;
enum uint WGL_NO_ACCELERATION_ARB = 0x2025;
enum uint WGL_GENERIC_ACCELERATION_ARB = 0x2026;
enum uint WGL_FULL_ACCELERATION_ARB = 0x2027;
enum uint WGL_SWAP_EXCHANGE_ARB = 0x2028;
enum uint WGL_SWAP_COPY_ARB = 0x2029;
enum uint WGL_SWAP_UNDEFINED_ARB = 0x202A;
enum uint WGL_TYPE_RGBA_ARB = 0x202B;
enum uint WGL_TYPE_COLORINDEX_ARB = 0x202C;
enum uint WGL_SAMPLE_BUFFERS_ARB = 0x2041;
enum uint WGL_SAMPLES_ARB = 0x2042;
enum uint WGL_GENLOCK_SOURCE_MULTIVIEW_I3D = 0x2044;
enum uint WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D = 0x2045;
enum uint WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D = 0x2046;
enum uint WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D = 0x2047;
enum uint WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D = 0x2048;
enum uint WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D = 0x2049;
enum uint WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D = 0x204A;
enum uint WGL_GENLOCK_SOURCE_EDGE_RISING_I3D = 0x204B;
enum uint WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D = 0x204C;
enum uint WGL_ACCESS_READ_ONLY_NV = 0x00000000;
enum uint WGL_ACCESS_READ_WRITE_NV = 0x00000001;
enum uint WGL_ACCESS_WRITE_DISCARD_NV = 0x00000002;
enum uint WGL_STEREO_EMITTER_ENABLE_3DL = 0x2055;
enum uint WGL_STEREO_EMITTER_DISABLE_3DL = 0x2056;
enum uint WGL_STEREO_POLARITY_NORMAL_3DL = 0x2057;
enum uint WGL_STEREO_POLARITY_INVERT_3DL = 0x2058;
enum uint WGL_DRAW_TO_PBUFFER_EXT = 0x202D;
enum uint WGL_MAX_PBUFFER_PIXELS_EXT = 0x202E;
enum uint WGL_MAX_PBUFFER_WIDTH_EXT = 0x202F;
enum uint WGL_MAX_PBUFFER_HEIGHT_EXT = 0x2030;
enum uint WGL_OPTIMAL_PBUFFER_WIDTH_EXT = 0x2031;
enum uint WGL_OPTIMAL_PBUFFER_HEIGHT_EXT = 0x2032;
enum uint WGL_PBUFFER_LARGEST_EXT = 0x2033;
enum uint WGL_PBUFFER_WIDTH_EXT = 0x2034;
enum uint WGL_PBUFFER_HEIGHT_EXT = 0x2035;
enum uint WGL_BIND_TO_VIDEO_RGB_NV = 0x20C0;
enum uint WGL_BIND_TO_VIDEO_RGBA_NV = 0x20C1;
enum uint WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV = 0x20C2;
enum uint WGL_VIDEO_OUT_COLOR_NV = 0x20C3;
enum uint WGL_VIDEO_OUT_ALPHA_NV = 0x20C4;
enum uint WGL_VIDEO_OUT_DEPTH_NV = 0x20C5;
enum uint WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV = 0x20C6;
enum uint WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV = 0x20C7;
enum uint WGL_VIDEO_OUT_FRAME = 0x20C8;
enum uint WGL_VIDEO_OUT_FIELD_1 = 0x20C9;
enum uint WGL_VIDEO_OUT_FIELD_2 = 0x20CA;
enum uint WGL_VIDEO_OUT_STACKED_FIELDS_1_2 = 0x20CB;
enum uint WGL_VIDEO_OUT_STACKED_FIELDS_2_1 = 0x20CC;
enum uint WGL_SAMPLE_BUFFERS_3DFX = 0x2060;
enum uint WGL_SAMPLES_3DFX = 0x2061;
enum uint WGL_GAMMA_TABLE_SIZE_I3D = 0x204E;
enum uint WGL_GAMMA_EXCLUDE_DESKTOP_I3D = 0x204F;
enum uint WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB = 0x20A9;
enum uint WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x20A9;
enum uint WGL_NUM_VIDEO_SLOTS_NV = 0x20F0;
enum uint WGL_CONTEXT_ES2_PROFILE_BIT_EXT = 0x00000004;
enum uint WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB = 0x00000004;
enum uint WGL_LOSE_CONTEXT_ON_RESET_ARB = 0x8252;
enum uint WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256;
enum uint WGL_NO_RESET_NOTIFICATION_ARB = 0x8261;
enum uint ERROR_INVALID_PIXEL_TYPE_ARB = 0x2043;
enum uint ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB = 0x2054;
enum uint WGL_SAMPLE_BUFFERS_EXT = 0x2041;
enum uint WGL_SAMPLES_EXT = 0x2042;
enum uint WGL_BIND_TO_TEXTURE_DEPTH_NV = 0x20A3;
enum uint WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV = 0x20A4;
enum uint WGL_DEPTH_TEXTURE_FORMAT_NV = 0x20A5;
enum uint WGL_TEXTURE_DEPTH_COMPONENT_NV = 0x20A6;
enum uint WGL_DEPTH_COMPONENT_NV = 0x20A7;
enum uint WGL_TYPE_RGBA_FLOAT_ATI = 0x21A0;
enum uint WGL_CONTEXT_PROFILE_MASK_ARB = 0x9126;
enum uint WGL_CONTEXT_CORE_PROFILE_BIT_ARB = 0x00000001;
enum uint WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB = 0x00000002;
enum uint ERROR_INVALID_PROFILE_ARB = 0x2096;
enum uint WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D = 0x2050;
enum uint WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D = 0x2051;
enum uint WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D = 0x2052;
enum uint WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D = 0x2053;
enum uint WGL_DRAW_TO_PBUFFER_ARB = 0x202D;
enum uint WGL_MAX_PBUFFER_PIXELS_ARB = 0x202E;
enum uint WGL_MAX_PBUFFER_WIDTH_ARB = 0x202F;
enum uint WGL_MAX_PBUFFER_HEIGHT_ARB = 0x2030;
enum uint WGL_PBUFFER_LARGEST_ARB = 0x2033;
enum uint WGL_PBUFFER_WIDTH_ARB = 0x2034;
enum uint WGL_PBUFFER_HEIGHT_ARB = 0x2035;
enum uint WGL_PBUFFER_LOST_ARB = 0x2036;
enum uint WGL_GPU_VENDOR_AMD = 0x1F00;
enum uint WGL_GPU_RENDERER_STRING_AMD = 0x1F01;
enum uint WGL_GPU_OPENGL_VERSION_STRING_AMD = 0x1F02;
enum uint WGL_GPU_FASTEST_TARGET_GPUS_AMD = 0x21A2;
enum uint WGL_GPU_RAM_AMD = 0x21A3;
enum uint WGL_GPU_CLOCK_AMD = 0x21A4;
enum uint WGL_GPU_NUM_PIPES_AMD = 0x21A5;
enum uint WGL_GPU_NUM_SIMD_AMD = 0x21A6;
enum uint WGL_GPU_NUM_RB_AMD = 0x21A7;
enum uint WGL_GPU_NUM_SPI_AMD = 0x21A8;
enum uint WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT = 0x20A8;
enum uint ERROR_INVALID_PIXEL_TYPE_EXT = 0x2043;
enum uint WGL_FRONT_COLOR_BUFFER_BIT_ARB = 0x00000001;
enum uint WGL_BACK_COLOR_BUFFER_BIT_ARB = 0x00000002;
enum uint WGL_DEPTH_BUFFER_BIT_ARB = 0x00000004;
enum uint WGL_STENCIL_BUFFER_BIT_ARB = 0x00000008;
nothrow extern(System) {
alias fp_wglCreateImageBufferI3D = LPVOID function(HDC, DWORD, UINT);
alias fp_wglDestroyImageBufferI3D = BOOL function(HDC, LPVOID);
alias fp_wglAssociateImageBufferEventsI3D = BOOL function(HDC, const(HANDLE)*, const(LPVOID)*, const(DWORD)*, UINT);
alias fp_wglReleaseImageBufferEventsI3D = BOOL function(HDC, const(LPVOID)*, UINT);
alias fp_wglGetFrameUsageI3D = BOOL function(float*);
alias fp_wglBeginFrameTrackingI3D = BOOL function();
alias fp_wglEndFrameTrackingI3D = BOOL function();
alias fp_wglQueryFrameTrackingI3D = BOOL function(DWORD*, DWORD*, float*);
alias fp_wglGetSyncValuesOML = BOOL function(HDC, INT64*, INT64*, INT64*);
alias fp_wglGetMscRateOML = BOOL function(HDC, INT32*, INT32*);
alias fp_wglSwapBuffersMscOML = INT64 function(HDC, INT64, INT64, INT64);
alias fp_wglSwapLayerBuffersMscOML = INT64 function(HDC, int, INT64, INT64, INT64);
alias fp_wglWaitForMscOML = BOOL function(HDC, INT64, INT64, INT64, INT64*, INT64*, INT64*);
alias fp_wglWaitForSbcOML = BOOL function(HDC, INT64, INT64*, INT64*, INT64*);
alias fp_wglCreateContextAttribsARB = HGLRC function(HDC, HGLRC, const(int)*);
alias fp_wglJoinSwapGroupNV = BOOL function(HDC, GLuint);
alias fp_wglBindSwapBarrierNV = BOOL function(GLuint, GLuint);
alias fp_wglQuerySwapGroupNV = BOOL function(HDC, GLuint*, GLuint*);
alias fp_wglQueryMaxSwapGroupsNV = BOOL function(HDC, GLuint*, GLuint*);
alias fp_wglQueryFrameCountNV = BOOL function(HDC, GLuint*);
alias fp_wglResetFrameCountNV = BOOL function(HDC);
alias fp_wglEnumGpusNV = BOOL function(UINT, HGPUNV*);
alias fp_wglEnumGpuDevicesNV = BOOL function(HGPUNV, UINT, PGPU_DEVICE);
alias fp_wglCreateAffinityDCNV = HDC function(const(HGPUNV)*);
alias fp_wglEnumGpusFromAffinityDCNV = BOOL function(HDC, UINT, HGPUNV*);
alias fp_wglDeleteDCNV = BOOL function(HDC);
alias fp_wglGetPixelFormatAttribivEXT = BOOL function(HDC, int, int, UINT, int*, int*);
alias fp_wglGetPixelFormatAttribfvEXT = BOOL function(HDC, int, int, UINT, int*, FLOAT*);
alias fp_wglChoosePixelFormatEXT = BOOL function(HDC, const(int)*, const(FLOAT)*, UINT, int*, UINT*);
alias fp_wglGetExtensionsStringARB = const(char)* function(HDC);
alias fp_wglBindVideoCaptureDeviceNV = BOOL function(UINT, HVIDEOINPUTDEVICENV);
alias fp_wglEnumerateVideoCaptureDevicesNV = UINT function(HDC, HVIDEOINPUTDEVICENV*);
alias fp_wglLockVideoCaptureDeviceNV = BOOL function(HDC, HVIDEOINPUTDEVICENV);
alias fp_wglQueryVideoCaptureDeviceNV = BOOL function(HDC, HVIDEOINPUTDEVICENV, int, int*);
alias fp_wglReleaseVideoCaptureDeviceNV = BOOL function(HDC, HVIDEOINPUTDEVICENV);
alias fp_wglBindTexImageARB = BOOL function(HPBUFFERARB, int);
alias fp_wglReleaseTexImageARB = BOOL function(HPBUFFERARB, int);
alias fp_wglSetPbufferAttribARB = BOOL function(HPBUFFERARB, const(int)*);
alias fp_wglGetPixelFormatAttribivARB = BOOL function(HDC, int, int, UINT, const(int)*, int*);
alias fp_wglGetPixelFormatAttribfvARB = BOOL function(HDC, int, int, UINT, const(int)*, FLOAT*);
alias fp_wglChoosePixelFormatARB = BOOL function(HDC, const(int)*, const(FLOAT)*, UINT, int*, UINT*);
alias fp_wglEnableGenlockI3D = BOOL function(HDC);
alias fp_wglDisableGenlockI3D = BOOL function(HDC);
alias fp_wglIsEnabledGenlockI3D = BOOL function(HDC, BOOL*);
alias fp_wglGenlockSourceI3D = BOOL function(HDC, UINT);
alias fp_wglGetGenlockSourceI3D = BOOL function(HDC, UINT*);
alias fp_wglGenlockSourceEdgeI3D = BOOL function(HDC, UINT);
alias fp_wglGetGenlockSourceEdgeI3D = BOOL function(HDC, UINT*);
alias fp_wglGenlockSampleRateI3D = BOOL function(HDC, UINT);
alias fp_wglGetGenlockSampleRateI3D = BOOL function(HDC, UINT*);
alias fp_wglGenlockSourceDelayI3D = BOOL function(HDC, UINT);
alias fp_wglGetGenlockSourceDelayI3D = BOOL function(HDC, UINT*);
alias fp_wglQueryGenlockMaxSourceDelayI3D = BOOL function(HDC, UINT*, UINT*);
alias fp_wglDXSetResourceShareHandleNV = BOOL function(void*, HANDLE);
alias fp_wglDXOpenDeviceNV = HANDLE function(void*);
alias fp_wglDXCloseDeviceNV = BOOL function(HANDLE);
alias fp_wglDXRegisterObjectNV = HANDLE function(HANDLE, void*, GLuint, GLenum, GLenum);
alias fp_wglDXUnregisterObjectNV = BOOL function(HANDLE, HANDLE);
alias fp_wglDXObjectAccessNV = BOOL function(HANDLE, GLenum);
alias fp_wglDXLockObjectsNV = BOOL function(HANDLE, GLint, HANDLE*);
alias fp_wglDXUnlockObjectsNV = BOOL function(HANDLE, GLint, HANDLE*);
alias fp_wglSetStereoEmitterState3DL = BOOL function(HDC, UINT);
alias fp_wglCreatePbufferEXT = HPBUFFEREXT function(HDC, int, int, int, const(int)*);
alias fp_wglGetPbufferDCEXT = HDC function(HPBUFFEREXT);
alias fp_wglReleasePbufferDCEXT = int function(HPBUFFEREXT, HDC);
alias fp_wglDestroyPbufferEXT = BOOL function(HPBUFFEREXT);
alias fp_wglQueryPbufferEXT = BOOL function(HPBUFFEREXT, int, int*);
alias fp_wglCreateDisplayColorTableEXT = GLboolean function(GLushort);
alias fp_wglLoadDisplayColorTableEXT = GLboolean function(const(GLushort)*, GLuint);
alias fp_wglBindDisplayColorTableEXT = GLboolean function(GLushort);
alias fp_wglDestroyDisplayColorTableEXT = VOID function(GLushort);
alias fp_wglGetVideoDeviceNV = BOOL function(HDC, int, HPVIDEODEV*);
alias fp_wglReleaseVideoDeviceNV = BOOL function(HPVIDEODEV);
alias fp_wglBindVideoImageNV = BOOL function(HPVIDEODEV, HPBUFFERARB, int);
alias fp_wglReleaseVideoImageNV = BOOL function(HPBUFFERARB, int);
alias fp_wglSendPbufferToVideoNV = BOOL function(HPBUFFERARB, int, ulong*, BOOL);
alias fp_wglGetVideoInfoNV = BOOL function(HPVIDEODEV, ulong*, ulong*);
alias fp_wglGetGammaTableParametersI3D = BOOL function(HDC, int, int*);
alias fp_wglSetGammaTableParametersI3D = BOOL function(HDC, int, const(int)*);
alias fp_wglGetGammaTableI3D = BOOL function(HDC, int, USHORT*, USHORT*, USHORT*);
alias fp_wglSetGammaTableI3D = BOOL function(HDC, int, const(USHORT)*, const(USHORT)*, const(USHORT)*);
alias fp_wglCopyImageSubDataNV = BOOL function(HGLRC, GLuint, GLenum, GLint, GLint, GLint, GLint, HGLRC, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei);
alias fp_wglEnumerateVideoDevicesNV = int function(HDC, HVIDEOOUTPUTDEVICENV*);
alias fp_wglBindVideoDeviceNV = BOOL function(HDC, uint, HVIDEOOUTPUTDEVICENV, const(int)*);
alias fp_wglQueryCurrentContextNV = BOOL function(int, int*);
alias fp_wglMakeContextCurrentARB = BOOL function(HDC, HDC, HGLRC);
alias fp_wglGetCurrentReadDCARB = HDC function();
alias fp_wglGetExtensionsStringEXT = const(char)* function();
alias fp_wglSwapIntervalEXT = BOOL function(int);
alias fp_wglGetSwapIntervalEXT = int function();
alias fp_wglGetDigitalVideoParametersI3D = BOOL function(HDC, int, int*);
alias fp_wglSetDigitalVideoParametersI3D = BOOL function(HDC, int, const(int)*);
alias fp_wglCreatePbufferARB = HPBUFFERARB function(HDC, int, int, int, const(int)*);
alias fp_wglGetPbufferDCARB = HDC function(HPBUFFERARB);
alias fp_wglReleasePbufferDCARB = int function(HPBUFFERARB, HDC);
alias fp_wglDestroyPbufferARB = BOOL function(HPBUFFERARB);
alias fp_wglQueryPbufferARB = BOOL function(HPBUFFERARB, int, int*);
alias fp_wglAllocateMemoryNV = void* function(GLsizei, GLfloat, GLfloat, GLfloat);
alias fp_wglFreeMemoryNV = void function(void*);
alias fp_wglGetGPUIDsAMD = UINT function(UINT, UINT*);
alias fp_wglGetGPUInfoAMD = INT function(UINT, int, GLenum, UINT, void*);
alias fp_wglGetContextGPUIDAMD = UINT function(HGLRC);
alias fp_wglCreateAssociatedContextAMD = HGLRC function(UINT);
alias fp_wglCreateAssociatedContextAttribsAMD = HGLRC function(UINT, HGLRC, const(int)*);
alias fp_wglDeleteAssociatedContextAMD = BOOL function(HGLRC);
alias fp_wglMakeAssociatedContextCurrentAMD = BOOL function(HGLRC);
alias fp_wglGetCurrentAssociatedContextAMD = HGLRC function();
alias fp_wglBlitContextFramebufferAMD = VOID function(HGLRC, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
alias fp_wglMakeContextCurrentEXT = BOOL function(HDC, HDC, HGLRC);
alias fp_wglGetCurrentReadDCEXT = HDC function();
alias fp_wglEnableFrameLockI3D = BOOL function();
alias fp_wglDisableFrameLockI3D = BOOL function();
alias fp_wglIsEnabledFrameLockI3D = BOOL function(BOOL*);
alias fp_wglQueryFrameLockMasterI3D = BOOL function(BOOL*);
alias fp_wglCreateBufferRegionARB = HANDLE function(HDC, int, UINT);
alias fp_wglDeleteBufferRegionARB = VOID function(HANDLE);
alias fp_wglSaveBufferRegionARB = BOOL function(HANDLE, int, int, int, int);
alias fp_wglRestoreBufferRegionARB = BOOL function(HANDLE, int, int, int, int, int, int);
}
__gshared {
fp_wglGetGammaTableParametersI3D wglGetGammaTableParametersI3D;
fp_wglEnumerateVideoCaptureDevicesNV wglEnumerateVideoCaptureDevicesNV;
fp_wglDeleteDCNV wglDeleteDCNV;
fp_wglIsEnabledGenlockI3D wglIsEnabledGenlockI3D;
fp_wglGetGPUIDsAMD wglGetGPUIDsAMD;
fp_wglReleaseImageBufferEventsI3D wglReleaseImageBufferEventsI3D;
fp_wglQuerySwapGroupNV wglQuerySwapGroupNV;
fp_wglGetGPUInfoAMD wglGetGPUInfoAMD;
fp_wglSwapBuffersMscOML wglSwapBuffersMscOML;
fp_wglMakeContextCurrentEXT wglMakeContextCurrentEXT;
fp_wglReleaseVideoDeviceNV wglReleaseVideoDeviceNV;
fp_wglCreateAffinityDCNV wglCreateAffinityDCNV;
fp_wglDestroyPbufferARB wglDestroyPbufferARB;
fp_wglGetSyncValuesOML wglGetSyncValuesOML;
fp_wglDXOpenDeviceNV wglDXOpenDeviceNV;
fp_wglQueryPbufferARB wglQueryPbufferARB;
fp_wglGenlockSampleRateI3D wglGenlockSampleRateI3D;
fp_wglBindVideoImageNV wglBindVideoImageNV;
fp_wglQueryGenlockMaxSourceDelayI3D wglQueryGenlockMaxSourceDelayI3D;
fp_wglGetPbufferDCEXT wglGetPbufferDCEXT;
fp_wglLoadDisplayColorTableEXT wglLoadDisplayColorTableEXT;
fp_wglEnumGpuDevicesNV wglEnumGpuDevicesNV;
fp_wglFreeMemoryNV wglFreeMemoryNV;
fp_wglDestroyImageBufferI3D wglDestroyImageBufferI3D;
fp_wglGetGenlockSampleRateI3D wglGetGenlockSampleRateI3D;
fp_wglReleasePbufferDCARB wglReleasePbufferDCARB;
fp_wglDXUnlockObjectsNV wglDXUnlockObjectsNV;
fp_wglGetPixelFormatAttribivEXT wglGetPixelFormatAttribivEXT;
fp_wglGetGenlockSourceEdgeI3D wglGetGenlockSourceEdgeI3D;
fp_wglChoosePixelFormatEXT wglChoosePixelFormatEXT;
fp_wglQueryFrameTrackingI3D wglQueryFrameTrackingI3D;
fp_wglDXSetResourceShareHandleNV wglDXSetResourceShareHandleNV;
fp_wglDXRegisterObjectNV wglDXRegisterObjectNV;
fp_wglGetPbufferDCARB wglGetPbufferDCARB;
fp_wglDXCloseDeviceNV wglDXCloseDeviceNV;
fp_wglEnumGpusNV wglEnumGpusNV;
fp_wglGetDigitalVideoParametersI3D wglGetDigitalVideoParametersI3D;
fp_wglDeleteBufferRegionARB wglDeleteBufferRegionARB;
fp_wglGetGenlockSourceDelayI3D wglGetGenlockSourceDelayI3D;
fp_wglIsEnabledFrameLockI3D wglIsEnabledFrameLockI3D;
fp_wglSwapLayerBuffersMscOML wglSwapLayerBuffersMscOML;
fp_wglEnableFrameLockI3D wglEnableFrameLockI3D;
fp_wglEnableGenlockI3D wglEnableGenlockI3D;
fp_wglQueryCurrentContextNV wglQueryCurrentContextNV;
fp_wglSetGammaTableI3D wglSetGammaTableI3D;
fp_wglGetFrameUsageI3D wglGetFrameUsageI3D;
fp_wglSetGammaTableParametersI3D wglSetGammaTableParametersI3D;
fp_wglReleaseVideoImageNV wglReleaseVideoImageNV;
fp_wglDisableFrameLockI3D wglDisableFrameLockI3D;
fp_wglGetExtensionsStringARB wglGetExtensionsStringARB;
fp_wglEnumerateVideoDevicesNV wglEnumerateVideoDevicesNV;
fp_wglQueryPbufferEXT wglQueryPbufferEXT;
fp_wglGetPixelFormatAttribivARB wglGetPixelFormatAttribivARB;
fp_wglChoosePixelFormatARB wglChoosePixelFormatARB;
fp_wglGetCurrentReadDCARB wglGetCurrentReadDCARB;
fp_wglResetFrameCountNV wglResetFrameCountNV;
fp_wglGenlockSourceI3D wglGenlockSourceI3D;
fp_wglMakeContextCurrentARB wglMakeContextCurrentARB;
fp_wglLockVideoCaptureDeviceNV wglLockVideoCaptureDeviceNV;
fp_wglDestroyDisplayColorTableEXT wglDestroyDisplayColorTableEXT;
fp_wglBindVideoCaptureDeviceNV wglBindVideoCaptureDeviceNV;
fp_wglWaitForSbcOML wglWaitForSbcOML;
fp_wglCreatePbufferARB wglCreatePbufferARB;
fp_wglMakeAssociatedContextCurrentAMD wglMakeAssociatedContextCurrentAMD;
fp_wglGenlockSourceEdgeI3D wglGenlockSourceEdgeI3D;
fp_wglSetStereoEmitterState3DL wglSetStereoEmitterState3DL;
fp_wglBlitContextFramebufferAMD wglBlitContextFramebufferAMD;
fp_wglDisableGenlockI3D wglDisableGenlockI3D;
fp_wglCreateImageBufferI3D wglCreateImageBufferI3D;
fp_wglDeleteAssociatedContextAMD wglDeleteAssociatedContextAMD;
fp_wglBindSwapBarrierNV wglBindSwapBarrierNV;
fp_wglRestoreBufferRegionARB wglRestoreBufferRegionARB;
fp_wglDXObjectAccessNV wglDXObjectAccessNV;
fp_wglGetPixelFormatAttribfvARB wglGetPixelFormatAttribfvARB;
fp_wglQueryFrameLockMasterI3D wglQueryFrameLockMasterI3D;
fp_wglDXLockObjectsNV wglDXLockObjectsNV;
fp_wglGenlockSourceDelayI3D wglGenlockSourceDelayI3D;
fp_wglGetCurrentAssociatedContextAMD wglGetCurrentAssociatedContextAMD;
fp_wglEndFrameTrackingI3D wglEndFrameTrackingI3D;
fp_wglGetContextGPUIDAMD wglGetContextGPUIDAMD;
fp_wglWaitForMscOML wglWaitForMscOML;
fp_wglCreateAssociatedContextAMD wglCreateAssociatedContextAMD;
fp_wglSetPbufferAttribARB wglSetPbufferAttribARB;
fp_wglEnumGpusFromAffinityDCNV wglEnumGpusFromAffinityDCNV;
fp_wglJoinSwapGroupNV wglJoinSwapGroupNV;
fp_wglCreateDisplayColorTableEXT wglCreateDisplayColorTableEXT;
fp_wglDXUnregisterObjectNV wglDXUnregisterObjectNV;
fp_wglBindVideoDeviceNV wglBindVideoDeviceNV;
fp_wglQueryFrameCountNV wglQueryFrameCountNV;
fp_wglCreateBufferRegionARB wglCreateBufferRegionARB;
fp_wglGetPixelFormatAttribfvEXT wglGetPixelFormatAttribfvEXT;
fp_wglQueryVideoCaptureDeviceNV wglQueryVideoCaptureDeviceNV;
fp_wglQueryMaxSwapGroupsNV wglQueryMaxSwapGroupsNV;
fp_wglGetExtensionsStringEXT wglGetExtensionsStringEXT;
fp_wglGetSwapIntervalEXT wglGetSwapIntervalEXT;
fp_wglCreateContextAttribsARB wglCreateContextAttribsARB;
fp_wglSendPbufferToVideoNV wglSendPbufferToVideoNV;
fp_wglReleaseVideoCaptureDeviceNV wglReleaseVideoCaptureDeviceNV;
fp_wglGetMscRateOML wglGetMscRateOML;
fp_wglSwapIntervalEXT wglSwapIntervalEXT;
fp_wglCreatePbufferEXT wglCreatePbufferEXT;
fp_wglGetGenlockSourceI3D wglGetGenlockSourceI3D;
fp_wglDestroyPbufferEXT wglDestroyPbufferEXT;
fp_wglGetVideoInfoNV wglGetVideoInfoNV;
fp_wglCopyImageSubDataNV wglCopyImageSubDataNV;
fp_wglGetCurrentReadDCEXT wglGetCurrentReadDCEXT;
fp_wglGetGammaTableI3D wglGetGammaTableI3D;
fp_wglBeginFrameTrackingI3D wglBeginFrameTrackingI3D;
fp_wglSetDigitalVideoParametersI3D wglSetDigitalVideoParametersI3D;
fp_wglAllocateMemoryNV wglAllocateMemoryNV;
fp_wglReleaseTexImageARB wglReleaseTexImageARB;
fp_wglCreateAssociatedContextAttribsAMD wglCreateAssociatedContextAttribsAMD;
fp_wglBindDisplayColorTableEXT wglBindDisplayColorTableEXT;
fp_wglAssociateImageBufferEventsI3D wglAssociateImageBufferEventsI3D;
fp_wglBindTexImageARB wglBindTexImageARB;
fp_wglGetVideoDeviceNV wglGetVideoDeviceNV;
fp_wglReleasePbufferDCEXT wglReleasePbufferDCEXT;
fp_wglSaveBufferRegionARB wglSaveBufferRegionARB;
}
