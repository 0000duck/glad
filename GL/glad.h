
#ifndef __glad_h_


#ifdef __gl_h_
#error OpenGL header already included, remove this include, glad already provides it
#endif

#define __glad_h_
#define __gl_h_

#ifdef __cplusplus
extern "C" {
#endif

typedef struct _GLVersion {
    int major;
    int minor;
} GLVersion;

typedef void* (* LOADER)(const char *name);

int gladInit(void);
void* gladGetProcAddress(const char *namez);
GLVersion gladLoadGL(void);
GLVersion gladLoadGLLoader(LOADER);

#ifdef _WIN32
typedef void* (*WGLGETPROCADDRESS)(const char*);
WGLGETPROCADDRESS gladwglGetProcAddress;
#else
typedef void* (*GLXGETPROCADDRESS)(const char*);
GLXGETPROCADDRESS gladglXGetProcAddress;
#endif

#include <stddef.h>
#include <KHR/khrplatform.h>
#ifndef GLEXT_64_TYPES_DEFINED
/* This code block is duplicated in glxext.h, so must be protected */
#define GLEXT_64_TYPES_DEFINED
/* Define int32_t, int64_t, and uint64_t types for UST/MSC */
/* (as used in the GL_EXT_timer_query extension). */
#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
#elif defined(__sun__) || defined(__digital__)
#include <inttypes.h>
#if defined(__STDC__)
#if defined(__arch64__) || defined(_LP64)
typedef long int int64_t;
typedef unsigned long int uint64_t;
#else
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#endif /* __arch64__ */
#endif /* __STDC__ */
#elif defined( __VMS ) || defined(__sgi)
#include <inttypes.h>
#elif defined(__SCO__) || defined(__USLC__)
#include <stdint.h>
#elif defined(__UNIXOS2__) || defined(__SOL64__)
typedef long int int32_t;
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#elif defined(_WIN32) && defined(__GNUC__)
#include <stdint.h>
#elif defined(_WIN32)
typedef __int32 int32_t;
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#else
/* Fallback if nothing above works */
#include <inttypes.h>
#endif
#endif
    
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLclampx;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef int GLsizei;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void *GLeglImageOES;
typedef char GLchar;
typedef char GLcharARB;
#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif
typedef unsigned short GLhalfARB;
typedef unsigned short GLhalf;
typedef GLint GLfixed;
typedef ptrdiff_t GLintptr;
typedef ptrdiff_t GLsizeiptr;
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef ptrdiff_t GLintptrARB;
typedef ptrdiff_t GLsizeiptrARB;
typedef int64_t GLint64EXT;
typedef uint64_t GLuint64EXT;
typedef struct __GLsync *GLsync;
struct _cl_context;
struct _cl_event;
typedef void ( *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void ( *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void ( *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
    
typedef khronos_int32_t GLclampx;
    
typedef khronos_int8_t GLbyte;
typedef khronos_uint8_t GLubyte;
typedef khronos_float_t GLfloat;
typedef khronos_float_t GLclampf;
typedef khronos_int32_t GLfixed;
typedef khronos_int64_t GLint64;
typedef khronos_uint64_t GLuint64;
typedef khronos_intptr_t GLintptr;
typedef khronos_ssize_t GLsizeiptr;
    
typedef khronos_int8_t GLbyte;
typedef khronos_uint8_t GLubyte;
typedef khronos_float_t GLfloat;
typedef khronos_float_t GLclampf;
typedef khronos_int32_t GLfixed;
typedef khronos_int64_t GLint64;
typedef khronos_uint64_t GLuint64;
typedef khronos_int64_t GLint64EXT;
typedef khronos_uint64_t GLuint64EXT;
typedef khronos_intptr_t GLintptr;
typedef khronos_ssize_t GLsizeiptr;
    
    
typedef void ( *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
typedef unsigned short GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;
    #define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_FALSE 0
#define GL_TRUE 1
#define GL_POINTS 0x0000
#define GL_LINES 0x0001
#define GL_LINE_LOOP 0x0002
#define GL_LINE_STRIP 0x0003
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_FAN 0x0006
#define GL_QUADS 0x0007
#define GL_NEVER 0x0200
#define GL_LESS 0x0201
#define GL_EQUAL 0x0202
#define GL_LEQUAL 0x0203
#define GL_GREATER 0x0204
#define GL_NOTEQUAL 0x0205
#define GL_GEQUAL 0x0206
#define GL_ALWAYS 0x0207
#define GL_ZERO 0
#define GL_ONE 1
#define GL_SRC_COLOR 0x0300
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_SRC_ALPHA 0x0302
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_DST_ALPHA 0x0304
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_DST_COLOR 0x0306
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_NONE 0
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_FRONT 0x0404
#define GL_BACK 0x0405
#define GL_LEFT 0x0406
#define GL_RIGHT 0x0407
#define GL_FRONT_AND_BACK 0x0408
#define GL_NO_ERROR 0
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_VALUE 0x0501
#define GL_INVALID_OPERATION 0x0502
#define GL_OUT_OF_MEMORY 0x0505
#define GL_CW 0x0900
#define GL_CCW 0x0901
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_FRONT_FACE 0x0B46
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_FUNC 0x0B74
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_VIEWPORT 0x0BA2
#define GL_DITHER 0x0BD0
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND 0x0BE2
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_DRAW_BUFFER 0x0C01
#define GL_READ_BUFFER 0x0C02
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_DOUBLEBUFFER 0x0C32
#define GL_STEREO 0x0C33
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_2D 0x0DE1
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_DONT_CARE 0x1100
#define GL_FASTEST 0x1101
#define GL_NICEST 0x1102
#define GL_BYTE 0x1400
#define GL_UNSIGNED_BYTE 0x1401
#define GL_SHORT 0x1402
#define GL_UNSIGNED_SHORT 0x1403
#define GL_INT 0x1404
#define GL_UNSIGNED_INT 0x1405
#define GL_FLOAT 0x1406
#define GL_DOUBLE 0x140A
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_CLEAR 0x1500
#define GL_AND 0x1501
#define GL_AND_REVERSE 0x1502
#define GL_COPY 0x1503
#define GL_AND_INVERTED 0x1504
#define GL_NOOP 0x1505
#define GL_XOR 0x1506
#define GL_OR 0x1507
#define GL_NOR 0x1508
#define GL_EQUIV 0x1509
#define GL_INVERT 0x150A
#define GL_OR_REVERSE 0x150B
#define GL_COPY_INVERTED 0x150C
#define GL_OR_INVERTED 0x150D
#define GL_NAND 0x150E
#define GL_SET 0x150F
#define GL_TEXTURE 0x1702
#define GL_COLOR 0x1800
#define GL_DEPTH 0x1801
#define GL_STENCIL 0x1802
#define GL_STENCIL_INDEX 0x1901
#define GL_DEPTH_COMPONENT 0x1902
#define GL_RED 0x1903
#define GL_GREEN 0x1904
#define GL_BLUE 0x1905
#define GL_ALPHA 0x1906
#define GL_RGB 0x1907
#define GL_RGBA 0x1908
#define GL_POINT 0x1B00
#define GL_LINE 0x1B01
#define GL_FILL 0x1B02
#define GL_KEEP 0x1E00
#define GL_REPLACE 0x1E01
#define GL_INCR 0x1E02
#define GL_DECR 0x1E03
#define GL_VENDOR 0x1F00
#define GL_RENDERER 0x1F01
#define GL_VERSION 0x1F02
#define GL_EXTENSIONS 0x1F03
#define GL_NEAREST 0x2600
#define GL_LINEAR 0x2601
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_REPEAT 0x2901
#define GL_R3_G3_B2 0x2A10
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB8 0x8051
#define GL_RGB10 0x8052
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGBA2 0x8055
#define GL_RGBA4 0x8056
#define GL_RGB5_A1 0x8057
#define GL_RGBA8 0x8058
#define GL_RGB10_A2 0x8059
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_CURRENT_BIT 0x00000001
#define GL_POINT_BIT 0x00000002
#define GL_LINE_BIT 0x00000004
#define GL_POLYGON_BIT 0x00000008
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#define GL_PIXEL_MODE_BIT 0x00000020
#define GL_LIGHTING_BIT 0x00000040
#define GL_FOG_BIT 0x00000080
#define GL_ACCUM_BUFFER_BIT 0x00000200
#define GL_VIEWPORT_BIT 0x00000800
#define GL_TRANSFORM_BIT 0x00001000
#define GL_ENABLE_BIT 0x00002000
#define GL_HINT_BIT 0x00008000
#define GL_EVAL_BIT 0x00010000
#define GL_LIST_BIT 0x00020000
#define GL_TEXTURE_BIT 0x00040000
#define GL_SCISSOR_BIT 0x00080000
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_QUAD_STRIP 0x0008
#define GL_POLYGON 0x0009
#define GL_ACCUM 0x0100
#define GL_LOAD 0x0101
#define GL_RETURN 0x0102
#define GL_MULT 0x0103
#define GL_ADD 0x0104
#define GL_AUX0 0x0409
#define GL_AUX1 0x040A
#define GL_AUX2 0x040B
#define GL_AUX3 0x040C
#define GL_2D 0x0600
#define GL_3D 0x0601
#define GL_3D_COLOR 0x0602
#define GL_3D_COLOR_TEXTURE 0x0603
#define GL_4D_COLOR_TEXTURE 0x0604
#define GL_PASS_THROUGH_TOKEN 0x0700
#define GL_POINT_TOKEN 0x0701
#define GL_LINE_TOKEN 0x0702
#define GL_POLYGON_TOKEN 0x0703
#define GL_BITMAP_TOKEN 0x0704
#define GL_DRAW_PIXEL_TOKEN 0x0705
#define GL_COPY_PIXEL_TOKEN 0x0706
#define GL_LINE_RESET_TOKEN 0x0707
#define GL_EXP 0x0800
#define GL_EXP2 0x0801
#define GL_COEFF 0x0A00
#define GL_ORDER 0x0A01
#define GL_DOMAIN 0x0A02
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#define GL_VERTEX_ARRAY_POINTER 0x808E
#define GL_NORMAL_ARRAY_POINTER 0x808F
#define GL_COLOR_ARRAY_POINTER 0x8090
#define GL_INDEX_ARRAY_POINTER 0x8091
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#define GL_CURRENT_COLOR 0x0B00
#define GL_CURRENT_INDEX 0x0B01
#define GL_CURRENT_NORMAL 0x0B02
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#define GL_CURRENT_RASTER_COLOR 0x0B04
#define GL_CURRENT_RASTER_INDEX 0x0B05
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#define GL_CURRENT_RASTER_POSITION 0x0B07
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#define GL_POINT_SMOOTH 0x0B10
#define GL_LINE_STIPPLE 0x0B24
#define GL_LINE_STIPPLE_PATTERN 0x0B25
#define GL_LINE_STIPPLE_REPEAT 0x0B26
#define GL_LIST_MODE 0x0B30
#define GL_MAX_LIST_NESTING 0x0B31
#define GL_LIST_BASE 0x0B32
#define GL_LIST_INDEX 0x0B33
#define GL_POLYGON_STIPPLE 0x0B42
#define GL_EDGE_FLAG 0x0B43
#define GL_LIGHTING 0x0B50
#define GL_LIGHT_MODEL_LOCAL_VIEWER 0x0B51
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#define GL_SHADE_MODEL 0x0B54
#define GL_COLOR_MATERIAL_FACE 0x0B55
#define GL_COLOR_MATERIAL_PARAMETER 0x0B56
#define GL_COLOR_MATERIAL 0x0B57
#define GL_FOG 0x0B60
#define GL_FOG_INDEX 0x0B61
#define GL_FOG_DENSITY 0x0B62
#define GL_FOG_START 0x0B63
#define GL_FOG_END 0x0B64
#define GL_FOG_MODE 0x0B65
#define GL_FOG_COLOR 0x0B66
#define GL_ACCUM_CLEAR_VALUE 0x0B80
#define GL_MATRIX_MODE 0x0BA0
#define GL_NORMALIZE 0x0BA1
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#define GL_MODELVIEW_MATRIX 0x0BA6
#define GL_PROJECTION_MATRIX 0x0BA7
#define GL_TEXTURE_MATRIX 0x0BA8
#define GL_ATTRIB_STACK_DEPTH 0x0BB0
#define GL_CLIENT_ATTRIB_STACK_DEPTH 0x0BB1
#define GL_ALPHA_TEST 0x0BC0
#define GL_ALPHA_TEST_FUNC 0x0BC1
#define GL_ALPHA_TEST_REF 0x0BC2
#define GL_INDEX_LOGIC_OP 0x0BF1
#define GL_LOGIC_OP 0x0BF1
#define GL_AUX_BUFFERS 0x0C00
#define GL_INDEX_CLEAR_VALUE 0x0C20
#define GL_INDEX_WRITEMASK 0x0C21
#define GL_INDEX_MODE 0x0C30
#define GL_RGBA_MODE 0x0C31
#define GL_RENDER_MODE 0x0C40
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#define GL_POINT_SMOOTH_HINT 0x0C51
#define GL_FOG_HINT 0x0C54
#define GL_TEXTURE_GEN_S 0x0C60
#define GL_TEXTURE_GEN_T 0x0C61
#define GL_TEXTURE_GEN_R 0x0C62
#define GL_TEXTURE_GEN_Q 0x0C63
#define GL_PIXEL_MAP_I_TO_I_SIZE 0x0CB0
#define GL_PIXEL_MAP_S_TO_S_SIZE 0x0CB1
#define GL_PIXEL_MAP_I_TO_R_SIZE 0x0CB2
#define GL_PIXEL_MAP_I_TO_G_SIZE 0x0CB3
#define GL_PIXEL_MAP_I_TO_B_SIZE 0x0CB4
#define GL_PIXEL_MAP_I_TO_A_SIZE 0x0CB5
#define GL_PIXEL_MAP_R_TO_R_SIZE 0x0CB6
#define GL_PIXEL_MAP_G_TO_G_SIZE 0x0CB7
#define GL_PIXEL_MAP_B_TO_B_SIZE 0x0CB8
#define GL_PIXEL_MAP_A_TO_A_SIZE 0x0CB9
#define GL_MAP_COLOR 0x0D10
#define GL_MAP_STENCIL 0x0D11
#define GL_INDEX_SHIFT 0x0D12
#define GL_INDEX_OFFSET 0x0D13
#define GL_RED_SCALE 0x0D14
#define GL_RED_BIAS 0x0D15
#define GL_ZOOM_X 0x0D16
#define GL_ZOOM_Y 0x0D17
#define GL_GREEN_SCALE 0x0D18
#define GL_GREEN_BIAS 0x0D19
#define GL_BLUE_SCALE 0x0D1A
#define GL_BLUE_BIAS 0x0D1B
#define GL_ALPHA_SCALE 0x0D1C
#define GL_ALPHA_BIAS 0x0D1D
#define GL_DEPTH_SCALE 0x0D1E
#define GL_DEPTH_BIAS 0x0D1F
#define GL_MAX_EVAL_ORDER 0x0D30
#define GL_MAX_LIGHTS 0x0D31
#define GL_MAX_CLIP_PLANES 0x0D32
#define GL_MAX_PIXEL_MAP_TABLE 0x0D34
#define GL_MAX_ATTRIB_STACK_DEPTH 0x0D35
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#define GL_MAX_NAME_STACK_DEPTH 0x0D37
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 0x0D3B
#define GL_INDEX_BITS 0x0D51
#define GL_RED_BITS 0x0D52
#define GL_GREEN_BITS 0x0D53
#define GL_BLUE_BITS 0x0D54
#define GL_ALPHA_BITS 0x0D55
#define GL_DEPTH_BITS 0x0D56
#define GL_STENCIL_BITS 0x0D57
#define GL_ACCUM_RED_BITS 0x0D58
#define GL_ACCUM_GREEN_BITS 0x0D59
#define GL_ACCUM_BLUE_BITS 0x0D5A
#define GL_ACCUM_ALPHA_BITS 0x0D5B
#define GL_NAME_STACK_DEPTH 0x0D70
#define GL_AUTO_NORMAL 0x0D80
#define GL_MAP1_COLOR_4 0x0D90
#define GL_MAP1_INDEX 0x0D91
#define GL_MAP1_NORMAL 0x0D92
#define GL_MAP1_TEXTURE_COORD_1 0x0D93
#define GL_MAP1_TEXTURE_COORD_2 0x0D94
#define GL_MAP1_TEXTURE_COORD_3 0x0D95
#define GL_MAP1_TEXTURE_COORD_4 0x0D96
#define GL_MAP1_VERTEX_3 0x0D97
#define GL_MAP1_VERTEX_4 0x0D98
#define GL_MAP2_COLOR_4 0x0DB0
#define GL_MAP2_INDEX 0x0DB1
#define GL_MAP2_NORMAL 0x0DB2
#define GL_MAP2_TEXTURE_COORD_1 0x0DB3
#define GL_MAP2_TEXTURE_COORD_2 0x0DB4
#define GL_MAP2_TEXTURE_COORD_3 0x0DB5
#define GL_MAP2_TEXTURE_COORD_4 0x0DB6
#define GL_MAP2_VERTEX_3 0x0DB7
#define GL_MAP2_VERTEX_4 0x0DB8
#define GL_MAP1_GRID_DOMAIN 0x0DD0
#define GL_MAP1_GRID_SEGMENTS 0x0DD1
#define GL_MAP2_GRID_DOMAIN 0x0DD2
#define GL_MAP2_GRID_SEGMENTS 0x0DD3
#define GL_FEEDBACK_BUFFER_SIZE 0x0DF1
#define GL_FEEDBACK_BUFFER_TYPE 0x0DF2
#define GL_SELECTION_BUFFER_SIZE 0x0DF4
#define GL_VERTEX_ARRAY 0x8074
#define GL_NORMAL_ARRAY 0x8075
#define GL_COLOR_ARRAY 0x8076
#define GL_INDEX_ARRAY 0x8077
#define GL_TEXTURE_COORD_ARRAY 0x8078
#define GL_EDGE_FLAG_ARRAY 0x8079
#define GL_VERTEX_ARRAY_SIZE 0x807A
#define GL_VERTEX_ARRAY_TYPE 0x807B
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#define GL_NORMAL_ARRAY_TYPE 0x807E
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#define GL_COLOR_ARRAY_SIZE 0x8081
#define GL_COLOR_ARRAY_TYPE 0x8082
#define GL_COLOR_ARRAY_STRIDE 0x8083
#define GL_INDEX_ARRAY_TYPE 0x8085
#define GL_INDEX_ARRAY_STRIDE 0x8086
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#define GL_EDGE_FLAG_ARRAY_STRIDE 0x808C
#define GL_TEXTURE_COMPONENTS 0x1003
#define GL_TEXTURE_BORDER 0x1005
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#define GL_TEXTURE_PRIORITY 0x8066
#define GL_TEXTURE_RESIDENT 0x8067
#define GL_AMBIENT 0x1200
#define GL_DIFFUSE 0x1201
#define GL_SPECULAR 0x1202
#define GL_POSITION 0x1203
#define GL_SPOT_DIRECTION 0x1204
#define GL_SPOT_EXPONENT 0x1205
#define GL_SPOT_CUTOFF 0x1206
#define GL_CONSTANT_ATTENUATION 0x1207
#define GL_LINEAR_ATTENUATION 0x1208
#define GL_QUADRATIC_ATTENUATION 0x1209
#define GL_COMPILE 0x1300
#define GL_COMPILE_AND_EXECUTE 0x1301
#define GL_2_BYTES 0x1407
#define GL_3_BYTES 0x1408
#define GL_4_BYTES 0x1409
#define GL_EMISSION 0x1600
#define GL_SHININESS 0x1601
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#define GL_COLOR_INDEXES 0x1603
#define GL_MODELVIEW 0x1700
#define GL_PROJECTION 0x1701
#define GL_COLOR_INDEX 0x1900
#define GL_LUMINANCE 0x1909
#define GL_LUMINANCE_ALPHA 0x190A
#define GL_BITMAP 0x1A00
#define GL_RENDER 0x1C00
#define GL_FEEDBACK 0x1C01
#define GL_SELECT 0x1C02
#define GL_FLAT 0x1D00
#define GL_SMOOTH 0x1D01
#define GL_S 0x2000
#define GL_T 0x2001
#define GL_R 0x2002
#define GL_Q 0x2003
#define GL_MODULATE 0x2100
#define GL_DECAL 0x2101
#define GL_TEXTURE_ENV_MODE 0x2200
#define GL_TEXTURE_ENV_COLOR 0x2201
#define GL_TEXTURE_ENV 0x2300
#define GL_EYE_LINEAR 0x2400
#define GL_OBJECT_LINEAR 0x2401
#define GL_SPHERE_MAP 0x2402
#define GL_TEXTURE_GEN_MODE 0x2500
#define GL_OBJECT_PLANE 0x2501
#define GL_EYE_PLANE 0x2502
#define GL_CLAMP 0x2900
#define GL_ALPHA4 0x803B
#define GL_ALPHA8 0x803C
#define GL_ALPHA12 0x803D
#define GL_ALPHA16 0x803E
#define GL_LUMINANCE4 0x803F
#define GL_LUMINANCE8 0x8040
#define GL_LUMINANCE12 0x8041
#define GL_LUMINANCE16 0x8042
#define GL_LUMINANCE4_ALPHA4 0x8043
#define GL_LUMINANCE6_ALPHA2 0x8044
#define GL_LUMINANCE8_ALPHA8 0x8045
#define GL_LUMINANCE12_ALPHA4 0x8046
#define GL_LUMINANCE12_ALPHA12 0x8047
#define GL_LUMINANCE16_ALPHA16 0x8048
#define GL_INTENSITY 0x8049
#define GL_INTENSITY4 0x804A
#define GL_INTENSITY8 0x804B
#define GL_INTENSITY12 0x804C
#define GL_INTENSITY16 0x804D
#define GL_V2F 0x2A20
#define GL_V3F 0x2A21
#define GL_C4UB_V2F 0x2A22
#define GL_C4UB_V3F 0x2A23
#define GL_C3F_V3F 0x2A24
#define GL_N3F_V3F 0x2A25
#define GL_C4F_N3F_V3F 0x2A26
#define GL_T2F_V3F 0x2A27
#define GL_T4F_V4F 0x2A28
#define GL_T2F_C4UB_V3F 0x2A29
#define GL_T2F_C3F_V3F 0x2A2A
#define GL_T2F_N3F_V3F 0x2A2B
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#define GL_CLIP_PLANE0 0x3000
#define GL_CLIP_PLANE1 0x3001
#define GL_CLIP_PLANE2 0x3002
#define GL_CLIP_PLANE3 0x3003
#define GL_CLIP_PLANE4 0x3004
#define GL_CLIP_PLANE5 0x3005
#define GL_LIGHT0 0x4000
#define GL_LIGHT1 0x4001
#define GL_LIGHT2 0x4002
#define GL_LIGHT3 0x4003
#define GL_LIGHT4 0x4004
#define GL_LIGHT5 0x4005
#define GL_LIGHT6 0x4006
#define GL_LIGHT7 0x4007
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_TEXTURE_3D 0x806F
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_RESCALE_NORMAL 0x803A
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#define GL_SINGLE_COLOR 0x81F9
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_MULTISAMPLE 0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLES 0x80A9
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#define GL_MAX_TEXTURE_UNITS 0x84E2
#define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#define GL_MULTISAMPLE_BIT 0x20000000
#define GL_NORMAL_MAP 0x8511
#define GL_REFLECTION_MAP 0x8512
#define GL_COMPRESSED_ALPHA 0x84E9
#define GL_COMPRESSED_LUMINANCE 0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#define GL_COMPRESSED_INTENSITY 0x84EC
#define GL_COMBINE 0x8570
#define GL_COMBINE_RGB 0x8571
#define GL_COMBINE_ALPHA 0x8572
#define GL_SOURCE0_RGB 0x8580
#define GL_SOURCE1_RGB 0x8581
#define GL_SOURCE2_RGB 0x8582
#define GL_SOURCE0_ALPHA 0x8588
#define GL_SOURCE1_ALPHA 0x8589
#define GL_SOURCE2_ALPHA 0x858A
#define GL_OPERAND0_RGB 0x8590
#define GL_OPERAND1_RGB 0x8591
#define GL_OPERAND2_RGB 0x8592
#define GL_OPERAND0_ALPHA 0x8598
#define GL_OPERAND1_ALPHA 0x8599
#define GL_OPERAND2_ALPHA 0x859A
#define GL_RGB_SCALE 0x8573
#define GL_ADD_SIGNED 0x8574
#define GL_INTERPOLATE 0x8575
#define GL_SUBTRACT 0x84E7
#define GL_CONSTANT 0x8576
#define GL_PRIMARY_COLOR 0x8577
#define GL_PREVIOUS 0x8578
#define GL_DOT3_RGB 0x86AE
#define GL_DOT3_RGBA 0x86AF
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_INCR_WRAP 0x8507
#define GL_DECR_WRAP 0x8508
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_POINT_SIZE_MIN 0x8126
#define GL_POINT_SIZE_MAX 0x8127
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#define GL_GENERATE_MIPMAP 0x8191
#define GL_GENERATE_MIPMAP_HINT 0x8192
#define GL_FOG_COORDINATE_SOURCE 0x8450
#define GL_FOG_COORDINATE 0x8451
#define GL_FRAGMENT_DEPTH 0x8452
#define GL_CURRENT_FOG_COORDINATE 0x8453
#define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#define GL_FOG_COORDINATE_ARRAY 0x8457
#define GL_COLOR_SUM 0x8458
#define GL_CURRENT_SECONDARY_COLOR 0x8459
#define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#define GL_SECONDARY_COLOR_ARRAY 0x845E
#define GL_TEXTURE_FILTER_CONTROL 0x8500
#define GL_DEPTH_TEXTURE_MODE 0x884B
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_SUBTRACT 0x800A
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_MIN 0x8007
#define GL_MAX 0x8008
#define GL_CONSTANT_COLOR 0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_CONSTANT_ALPHA 0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_USAGE 0x8765
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_CURRENT_QUERY 0x8865
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_ARRAY_BUFFER 0x8892
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_READ_ONLY 0x88B8
#define GL_WRITE_ONLY 0x88B9
#define GL_READ_WRITE 0x88BA
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_STREAM_COPY 0x88E2
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STATIC_COPY 0x88E6
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_COPY 0x88EA
#define GL_SAMPLES_PASSED 0x8914
#define GL_SRC1_ALPHA 0x8589
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
#define GL_FOG_COORD_SRC 0x8450
#define GL_FOG_COORD 0x8451
#define GL_CURRENT_FOG_COORD 0x8453
#define GL_FOG_COORD_ARRAY_TYPE 0x8454
#define GL_FOG_COORD_ARRAY_STRIDE 0x8455
#define GL_FOG_COORD_ARRAY_POINTER 0x8456
#define GL_FOG_COORD_ARRAY 0x8457
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#define GL_SRC0_RGB 0x8580
#define GL_SRC1_RGB 0x8581
#define GL_SRC2_RGB 0x8582
#define GL_SRC0_ALPHA 0x8588
#define GL_SRC2_ALPHA 0x858A
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_VERTEX_SHADER 0x8B31
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_SHADER_TYPE 0x8B4F
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT4 0x8B5C
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_DELETE_STATUS 0x8B80
#define GL_COMPILE_STATUS 0x8B81
#define GL_LINK_STATUS 0x8B82
#define GL_VALIDATE_STATUS 0x8B83
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_LOWER_LEFT 0x8CA1
#define GL_UPPER_LEFT 0x8CA2
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#define GL_POINT_SPRITE 0x8861
#define GL_COORD_REPLACE 0x8862
#define GL_MAX_TEXTURE_COORDS 0x8871
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_CURRENT_RASTER_SECONDARY_COLOR 0x845F
#define GL_SLUMINANCE_ALPHA 0x8C44
#define GL_SLUMINANCE8_ALPHA8 0x8C45
#define GL_SLUMINANCE 0x8C46
#define GL_SLUMINANCE8 0x8C47
#define GL_COMPRESSED_SLUMINANCE 0x8C4A
#define GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAJOR_VERSION 0x821B
#define GL_MINOR_VERSION 0x821C
#define GL_NUM_EXTENSIONS 0x821D
#define GL_CONTEXT_FLAGS 0x821E
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RG 0x8226
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_RGBA32F 0x8814
#define GL_RGB32F 0x8815
#define GL_RGBA16F 0x881A
#define GL_RGB16F 0x881B
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_FIXED_ONLY 0x891D
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_RGB9_E5 0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_RGBA32UI 0x8D70
#define GL_RGB32UI 0x8D71
#define GL_RGBA16UI 0x8D76
#define GL_RGB16UI 0x8D77
#define GL_RGBA8UI 0x8D7C
#define GL_RGB8UI 0x8D7D
#define GL_RGBA32I 0x8D82
#define GL_RGB32I 0x8D83
#define GL_RGBA16I 0x8D88
#define GL_RGB16I 0x8D89
#define GL_RGBA8I 0x8D8E
#define GL_RGB8I 0x8D8F
#define GL_RED_INTEGER 0x8D94
#define GL_GREEN_INTEGER 0x8D95
#define GL_BLUE_INTEGER 0x8D96
#define GL_RGB_INTEGER 0x8D98
#define GL_RGBA_INTEGER 0x8D99
#define GL_BGR_INTEGER 0x8D9A
#define GL_BGRA_INTEGER 0x8D9B
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_QUERY_WAIT 0x8E13
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_DEPTH_STENCIL 0x84F9
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_FRAMEBUFFER 0x8D40
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_INDEX16 0x8D49
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_MAX_SAMPLES 0x8D57
#define GL_INDEX 0x8222
#define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_HALF_FLOAT 0x140B
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_RG 0x8227
#define GL_RG_INTEGER 0x8228
#define GL_R8 0x8229
#define GL_R16 0x822A
#define GL_RG8 0x822B
#define GL_RG16 0x822C
#define GL_R16F 0x822D
#define GL_R32F 0x822E
#define GL_RG16F 0x822F
#define GL_RG32F 0x8230
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_CLAMP_VERTEX_COLOR 0x891A
#define GL_CLAMP_FRAGMENT_COLOR 0x891B
#define GL_ALPHA_INTEGER 0x8D97
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_R8_SNORM 0x8F94
#define GL_RG8_SNORM 0x8F95
#define GL_RGB8_SNORM 0x8F96
#define GL_RGBA8_SNORM 0x8F97
#define GL_R16_SNORM 0x8F98
#define GL_RG16_SNORM 0x8F99
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGBA16_SNORM 0x8F9B
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_DEPTH_CLAMP 0x864F
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_OBJECT_TYPE 0x9112
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_STATUS 0x9114
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_UNSIGNALED 0x9118
#define GL_SIGNALED 0x9119
#define GL_ALREADY_SIGNALED 0x911A
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_CONDITION_SATISFIED 0x911C
#define GL_WAIT_FAILED 0x911D
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_SRC1_COLOR 0x88F9
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_SAMPLER_BINDING 0x8919
#define GL_RGB10_A2UI 0x906F
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TIME_ELAPSED 0x88BF
#define GL_TIMESTAMP 0x8E28
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_SAMPLE_SHADING 0x8C36
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_MAX_VERTEX_STREAMS 0x8E71
#define GL_DOUBLE_VEC2 0x8FFC
#define GL_DOUBLE_VEC3 0x8FFD
#define GL_DOUBLE_VEC4 0x8FFE
#define GL_DOUBLE_MAT2 0x8F46
#define GL_DOUBLE_MAT3 0x8F47
#define GL_DOUBLE_MAT4 0x8F48
#define GL_DOUBLE_MAT2x3 0x8F49
#define GL_DOUBLE_MAT2x4 0x8F4A
#define GL_DOUBLE_MAT3x2 0x8F4B
#define GL_DOUBLE_MAT3x4 0x8F4C
#define GL_DOUBLE_MAT4x2 0x8F4D
#define GL_DOUBLE_MAT4x3 0x8F4E
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#define GL_MAX_SUBROUTINES 0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#define GL_PATCHES 0x000E
#define GL_PATCH_VERTICES 0x8E72
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_ISOLINES 0x8E7A
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#define GL_FIXED 0x140C
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_LOW_FLOAT 0x8DF0
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_HIGH_FLOAT 0x8DF2
#define GL_LOW_INT 0x8DF3
#define GL_MEDIUM_INT 0x8DF4
#define GL_HIGH_INT 0x8DF5
#define GL_SHADER_COMPILER 0x8DFA
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_RGB565 0x8D62
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_ACTIVE_PROGRAM 0x8259
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_MAX_VIEWPORTS 0x825B
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_1D 0x904C
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_2D_RECT 0x904F
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_1D_ARRAY 0x9052
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#define GL_INT_IMAGE_1D 0x9057
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_2D_RECT 0x905A
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#define GL_MAX_IMAGE_SAMPLES 0x906D
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_COMPUTE_SHADER 0x91B9
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_BUFFER 0x82E0
#define GL_SHADER 0x82E1
#define GL_PROGRAM 0x82E2
#define GL_QUERY 0x82E3
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_SAMPLER 0x82E6
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#define GL_MAX_WIDTH 0x827E
#define GL_MAX_HEIGHT 0x827F
#define GL_MAX_DEPTH 0x8280
#define GL_MAX_LAYERS 0x8281
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#define GL_COLOR_COMPONENTS 0x8283
#define GL_DEPTH_COMPONENTS 0x8284
#define GL_STENCIL_COMPONENTS 0x8285
#define GL_COLOR_RENDERABLE 0x8286
#define GL_DEPTH_RENDERABLE 0x8287
#define GL_STENCIL_RENDERABLE 0x8288
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FRAMEBUFFER_BLEND 0x828B
#define GL_READ_PIXELS 0x828C
#define GL_READ_PIXELS_FORMAT 0x828D
#define GL_READ_PIXELS_TYPE 0x828E
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#define GL_MIPMAP 0x8293
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#define GL_COLOR_ENCODING 0x8296
#define GL_SRGB_READ 0x8297
#define GL_SRGB_WRITE 0x8298
#define GL_FILTER 0x829A
#define GL_VERTEX_TEXTURE 0x829B
#define GL_TESS_CONTROL_TEXTURE 0x829C
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#define GL_GEOMETRY_TEXTURE 0x829E
#define GL_FRAGMENT_TEXTURE 0x829F
#define GL_COMPUTE_TEXTURE 0x82A0
#define GL_TEXTURE_SHADOW 0x82A1
#define GL_TEXTURE_GATHER 0x82A2
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#define GL_SHADER_IMAGE_LOAD 0x82A4
#define GL_SHADER_IMAGE_STORE 0x82A5
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#define GL_CLEAR_BUFFER 0x82B4
#define GL_TEXTURE_VIEW 0x82B5
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#define GL_FULL_SUPPORT 0x82B7
#define GL_CAVEAT_SUPPORT 0x82B8
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#define GL_VIEW_CLASS_128_BITS 0x82C4
#define GL_VIEW_CLASS_96_BITS 0x82C5
#define GL_VIEW_CLASS_64_BITS 0x82C6
#define GL_VIEW_CLASS_48_BITS 0x82C7
#define GL_VIEW_CLASS_32_BITS 0x82C8
#define GL_VIEW_CLASS_24_BITS 0x82C9
#define GL_VIEW_CLASS_16_BITS 0x82CA
#define GL_VIEW_CLASS_8_BITS 0x82CB
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_VERTEX_SUBROUTINE 0x92E8
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#define GL_COMPUTE_SUBROUTINE 0x92ED
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_NAME_LENGTH 0x92F9
#define GL_TYPE 0x92FA
#define GL_ARRAY_SIZE 0x92FB
#define GL_OFFSET 0x92FC
#define GL_BLOCK_INDEX 0x92FD
#define GL_ARRAY_STRIDE 0x92FE
#define GL_MATRIX_STRIDE 0x92FF
#define GL_IS_ROW_MAJOR 0x9300
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_LOCATION 0x930E
#define GL_LOCATION_INDEX 0x930F
#define GL_IS_PER_PATCH 0x92E7
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_DISPLAY_LIST 0x82E7
#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#define GL_MAP_PERSISTENT_BIT 0x0040
#define GL_MAP_COHERENT_BIT 0x0080
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#define GL_CLIENT_STORAGE_BIT 0x0200
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#define GL_CLEAR_TEXTURE 0x9365
#define GL_LOCATION_COMPONENT 0x934A
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
#define GL_QUERY_BUFFER 0x9192
#define GL_QUERY_BUFFER_BARRIER_BIT 0x00008000
#define GL_QUERY_BUFFER_BINDING 0x9193
#define GL_QUERY_RESULT_NO_WAIT 0x9194
#define GL_MIRROR_CLAMP_TO_EDGE 0x8743
int GL_VERSION_1_0;
typedef void (* fp_glCullFace)(GLenum);
extern fp_glCullFace gladglCullFace;
#define glCullFace gladglCullFace
typedef void (* fp_glFrontFace)(GLenum);
extern fp_glFrontFace gladglFrontFace;
#define glFrontFace gladglFrontFace
typedef void (* fp_glHint)(GLenum, GLenum);
extern fp_glHint gladglHint;
#define glHint gladglHint
typedef void (* fp_glLineWidth)(GLfloat);
extern fp_glLineWidth gladglLineWidth;
#define glLineWidth gladglLineWidth
typedef void (* fp_glPointSize)(GLfloat);
extern fp_glPointSize gladglPointSize;
#define glPointSize gladglPointSize
typedef void (* fp_glPolygonMode)(GLenum, GLenum);
extern fp_glPolygonMode gladglPolygonMode;
#define glPolygonMode gladglPolygonMode
typedef void (* fp_glScissor)(GLint, GLint, GLsizei, GLsizei);
extern fp_glScissor gladglScissor;
#define glScissor gladglScissor
typedef void (* fp_glTexParameterf)(GLenum, GLenum, GLfloat);
extern fp_glTexParameterf gladglTexParameterf;
#define glTexParameterf gladglTexParameterf
typedef void (* fp_glTexParameterfv)(GLenum, GLenum, const GLfloat*);
extern fp_glTexParameterfv gladglTexParameterfv;
#define glTexParameterfv gladglTexParameterfv
typedef void (* fp_glTexParameteri)(GLenum, GLenum, GLint);
extern fp_glTexParameteri gladglTexParameteri;
#define glTexParameteri gladglTexParameteri
typedef void (* fp_glTexParameteriv)(GLenum, GLenum, const GLint*);
extern fp_glTexParameteriv gladglTexParameteriv;
#define glTexParameteriv gladglTexParameteriv
typedef void (* fp_glTexImage1D)(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
extern fp_glTexImage1D gladglTexImage1D;
#define glTexImage1D gladglTexImage1D
typedef void (* fp_glTexImage2D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
extern fp_glTexImage2D gladglTexImage2D;
#define glTexImage2D gladglTexImage2D
typedef void (* fp_glDrawBuffer)(GLenum);
extern fp_glDrawBuffer gladglDrawBuffer;
#define glDrawBuffer gladglDrawBuffer
typedef void (* fp_glClear)(GLbitfield);
extern fp_glClear gladglClear;
#define glClear gladglClear
typedef void (* fp_glClearColor)(GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glClearColor gladglClearColor;
#define glClearColor gladglClearColor
typedef void (* fp_glClearStencil)(GLint);
extern fp_glClearStencil gladglClearStencil;
#define glClearStencil gladglClearStencil
typedef void (* fp_glClearDepth)(GLdouble);
extern fp_glClearDepth gladglClearDepth;
#define glClearDepth gladglClearDepth
typedef void (* fp_glStencilMask)(GLuint);
extern fp_glStencilMask gladglStencilMask;
#define glStencilMask gladglStencilMask
typedef void (* fp_glColorMask)(GLboolean, GLboolean, GLboolean, GLboolean);
extern fp_glColorMask gladglColorMask;
#define glColorMask gladglColorMask
typedef void (* fp_glDepthMask)(GLboolean);
extern fp_glDepthMask gladglDepthMask;
#define glDepthMask gladglDepthMask
typedef void (* fp_glDisable)(GLenum);
extern fp_glDisable gladglDisable;
#define glDisable gladglDisable
typedef void (* fp_glEnable)(GLenum);
extern fp_glEnable gladglEnable;
#define glEnable gladglEnable
typedef void (* fp_glFinish)();
extern fp_glFinish gladglFinish;
#define glFinish gladglFinish
typedef void (* fp_glFlush)();
extern fp_glFlush gladglFlush;
#define glFlush gladglFlush
typedef void (* fp_glBlendFunc)(GLenum, GLenum);
extern fp_glBlendFunc gladglBlendFunc;
#define glBlendFunc gladglBlendFunc
typedef void (* fp_glLogicOp)(GLenum);
extern fp_glLogicOp gladglLogicOp;
#define glLogicOp gladglLogicOp
typedef void (* fp_glStencilFunc)(GLenum, GLint, GLuint);
extern fp_glStencilFunc gladglStencilFunc;
#define glStencilFunc gladglStencilFunc
typedef void (* fp_glStencilOp)(GLenum, GLenum, GLenum);
extern fp_glStencilOp gladglStencilOp;
#define glStencilOp gladglStencilOp
typedef void (* fp_glDepthFunc)(GLenum);
extern fp_glDepthFunc gladglDepthFunc;
#define glDepthFunc gladglDepthFunc
typedef void (* fp_glPixelStoref)(GLenum, GLfloat);
extern fp_glPixelStoref gladglPixelStoref;
#define glPixelStoref gladglPixelStoref
typedef void (* fp_glPixelStorei)(GLenum, GLint);
extern fp_glPixelStorei gladglPixelStorei;
#define glPixelStorei gladglPixelStorei
typedef void (* fp_glReadBuffer)(GLenum);
extern fp_glReadBuffer gladglReadBuffer;
#define glReadBuffer gladglReadBuffer
typedef void (* fp_glReadPixels)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
extern fp_glReadPixels gladglReadPixels;
#define glReadPixels gladglReadPixels
typedef void (* fp_glGetBooleanv)(GLenum, GLboolean*);
extern fp_glGetBooleanv gladglGetBooleanv;
#define glGetBooleanv gladglGetBooleanv
typedef void (* fp_glGetDoublev)(GLenum, GLdouble*);
extern fp_glGetDoublev gladglGetDoublev;
#define glGetDoublev gladglGetDoublev
typedef GLenum (* fp_glGetError)();
extern fp_glGetError gladglGetError;
#define glGetError gladglGetError
typedef void (* fp_glGetFloatv)(GLenum, GLfloat*);
extern fp_glGetFloatv gladglGetFloatv;
#define glGetFloatv gladglGetFloatv
typedef void (* fp_glGetIntegerv)(GLenum, GLint*);
extern fp_glGetIntegerv gladglGetIntegerv;
#define glGetIntegerv gladglGetIntegerv
typedef const GLubyte* (* fp_glGetString)(GLenum);
extern fp_glGetString gladglGetString;
#define glGetString gladglGetString
typedef void (* fp_glGetTexImage)(GLenum, GLint, GLenum, GLenum, GLvoid*);
extern fp_glGetTexImage gladglGetTexImage;
#define glGetTexImage gladglGetTexImage
typedef void (* fp_glGetTexParameterfv)(GLenum, GLenum, GLfloat*);
extern fp_glGetTexParameterfv gladglGetTexParameterfv;
#define glGetTexParameterfv gladglGetTexParameterfv
typedef void (* fp_glGetTexParameteriv)(GLenum, GLenum, GLint*);
extern fp_glGetTexParameteriv gladglGetTexParameteriv;
#define glGetTexParameteriv gladglGetTexParameteriv
typedef void (* fp_glGetTexLevelParameterfv)(GLenum, GLint, GLenum, GLfloat*);
extern fp_glGetTexLevelParameterfv gladglGetTexLevelParameterfv;
#define glGetTexLevelParameterfv gladglGetTexLevelParameterfv
typedef void (* fp_glGetTexLevelParameteriv)(GLenum, GLint, GLenum, GLint*);
extern fp_glGetTexLevelParameteriv gladglGetTexLevelParameteriv;
#define glGetTexLevelParameteriv gladglGetTexLevelParameteriv
typedef GLboolean (* fp_glIsEnabled)(GLenum);
extern fp_glIsEnabled gladglIsEnabled;
#define glIsEnabled gladglIsEnabled
typedef void (* fp_glDepthRange)(GLdouble, GLdouble);
extern fp_glDepthRange gladglDepthRange;
#define glDepthRange gladglDepthRange
typedef void (* fp_glViewport)(GLint, GLint, GLsizei, GLsizei);
extern fp_glViewport gladglViewport;
#define glViewport gladglViewport
typedef void (* fp_glNewList)(GLuint, GLenum);
extern fp_glNewList gladglNewList;
#define glNewList gladglNewList
typedef void (* fp_glEndList)();
extern fp_glEndList gladglEndList;
#define glEndList gladglEndList
typedef void (* fp_glCallList)(GLuint);
extern fp_glCallList gladglCallList;
#define glCallList gladglCallList
typedef void (* fp_glCallLists)(GLsizei, GLenum, const GLvoid*);
extern fp_glCallLists gladglCallLists;
#define glCallLists gladglCallLists
typedef void (* fp_glDeleteLists)(GLuint, GLsizei);
extern fp_glDeleteLists gladglDeleteLists;
#define glDeleteLists gladglDeleteLists
typedef GLuint (* fp_glGenLists)(GLsizei);
extern fp_glGenLists gladglGenLists;
#define glGenLists gladglGenLists
typedef void (* fp_glListBase)(GLuint);
extern fp_glListBase gladglListBase;
#define glListBase gladglListBase
typedef void (* fp_glBegin)(GLenum);
extern fp_glBegin gladglBegin;
#define glBegin gladglBegin
typedef void (* fp_glBitmap)(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, const GLubyte*);
extern fp_glBitmap gladglBitmap;
#define glBitmap gladglBitmap
typedef void (* fp_glColor3b)(GLbyte, GLbyte, GLbyte);
extern fp_glColor3b gladglColor3b;
#define glColor3b gladglColor3b
typedef void (* fp_glColor3bv)(const GLbyte*);
extern fp_glColor3bv gladglColor3bv;
#define glColor3bv gladglColor3bv
typedef void (* fp_glColor3d)(GLdouble, GLdouble, GLdouble);
extern fp_glColor3d gladglColor3d;
#define glColor3d gladglColor3d
typedef void (* fp_glColor3dv)(const GLdouble*);
extern fp_glColor3dv gladglColor3dv;
#define glColor3dv gladglColor3dv
typedef void (* fp_glColor3f)(GLfloat, GLfloat, GLfloat);
extern fp_glColor3f gladglColor3f;
#define glColor3f gladglColor3f
typedef void (* fp_glColor3fv)(const GLfloat*);
extern fp_glColor3fv gladglColor3fv;
#define glColor3fv gladglColor3fv
typedef void (* fp_glColor3i)(GLint, GLint, GLint);
extern fp_glColor3i gladglColor3i;
#define glColor3i gladglColor3i
typedef void (* fp_glColor3iv)(const GLint*);
extern fp_glColor3iv gladglColor3iv;
#define glColor3iv gladglColor3iv
typedef void (* fp_glColor3s)(GLshort, GLshort, GLshort);
extern fp_glColor3s gladglColor3s;
#define glColor3s gladglColor3s
typedef void (* fp_glColor3sv)(const GLshort*);
extern fp_glColor3sv gladglColor3sv;
#define glColor3sv gladglColor3sv
typedef void (* fp_glColor3ub)(GLubyte, GLubyte, GLubyte);
extern fp_glColor3ub gladglColor3ub;
#define glColor3ub gladglColor3ub
typedef void (* fp_glColor3ubv)(const GLubyte*);
extern fp_glColor3ubv gladglColor3ubv;
#define glColor3ubv gladglColor3ubv
typedef void (* fp_glColor3ui)(GLuint, GLuint, GLuint);
extern fp_glColor3ui gladglColor3ui;
#define glColor3ui gladglColor3ui
typedef void (* fp_glColor3uiv)(const GLuint*);
extern fp_glColor3uiv gladglColor3uiv;
#define glColor3uiv gladglColor3uiv
typedef void (* fp_glColor3us)(GLushort, GLushort, GLushort);
extern fp_glColor3us gladglColor3us;
#define glColor3us gladglColor3us
typedef void (* fp_glColor3usv)(const GLushort*);
extern fp_glColor3usv gladglColor3usv;
#define glColor3usv gladglColor3usv
typedef void (* fp_glColor4b)(GLbyte, GLbyte, GLbyte, GLbyte);
extern fp_glColor4b gladglColor4b;
#define glColor4b gladglColor4b
typedef void (* fp_glColor4bv)(const GLbyte*);
extern fp_glColor4bv gladglColor4bv;
#define glColor4bv gladglColor4bv
typedef void (* fp_glColor4d)(GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glColor4d gladglColor4d;
#define glColor4d gladglColor4d
typedef void (* fp_glColor4dv)(const GLdouble*);
extern fp_glColor4dv gladglColor4dv;
#define glColor4dv gladglColor4dv
typedef void (* fp_glColor4f)(GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glColor4f gladglColor4f;
#define glColor4f gladglColor4f
typedef void (* fp_glColor4fv)(const GLfloat*);
extern fp_glColor4fv gladglColor4fv;
#define glColor4fv gladglColor4fv
typedef void (* fp_glColor4i)(GLint, GLint, GLint, GLint);
extern fp_glColor4i gladglColor4i;
#define glColor4i gladglColor4i
typedef void (* fp_glColor4iv)(const GLint*);
extern fp_glColor4iv gladglColor4iv;
#define glColor4iv gladglColor4iv
typedef void (* fp_glColor4s)(GLshort, GLshort, GLshort, GLshort);
extern fp_glColor4s gladglColor4s;
#define glColor4s gladglColor4s
typedef void (* fp_glColor4sv)(const GLshort*);
extern fp_glColor4sv gladglColor4sv;
#define glColor4sv gladglColor4sv
typedef void (* fp_glColor4ub)(GLubyte, GLubyte, GLubyte, GLubyte);
extern fp_glColor4ub gladglColor4ub;
#define glColor4ub gladglColor4ub
typedef void (* fp_glColor4ubv)(const GLubyte*);
extern fp_glColor4ubv gladglColor4ubv;
#define glColor4ubv gladglColor4ubv
typedef void (* fp_glColor4ui)(GLuint, GLuint, GLuint, GLuint);
extern fp_glColor4ui gladglColor4ui;
#define glColor4ui gladglColor4ui
typedef void (* fp_glColor4uiv)(const GLuint*);
extern fp_glColor4uiv gladglColor4uiv;
#define glColor4uiv gladglColor4uiv
typedef void (* fp_glColor4us)(GLushort, GLushort, GLushort, GLushort);
extern fp_glColor4us gladglColor4us;
#define glColor4us gladglColor4us
typedef void (* fp_glColor4usv)(const GLushort*);
extern fp_glColor4usv gladglColor4usv;
#define glColor4usv gladglColor4usv
typedef void (* fp_glEdgeFlag)(GLboolean);
extern fp_glEdgeFlag gladglEdgeFlag;
#define glEdgeFlag gladglEdgeFlag
typedef void (* fp_glEdgeFlagv)(const GLboolean*);
extern fp_glEdgeFlagv gladglEdgeFlagv;
#define glEdgeFlagv gladglEdgeFlagv
typedef void (* fp_glEnd)();
extern fp_glEnd gladglEnd;
#define glEnd gladglEnd
typedef void (* fp_glIndexd)(GLdouble);
extern fp_glIndexd gladglIndexd;
#define glIndexd gladglIndexd
typedef void (* fp_glIndexdv)(const GLdouble*);
extern fp_glIndexdv gladglIndexdv;
#define glIndexdv gladglIndexdv
typedef void (* fp_glIndexf)(GLfloat);
extern fp_glIndexf gladglIndexf;
#define glIndexf gladglIndexf
typedef void (* fp_glIndexfv)(const GLfloat*);
extern fp_glIndexfv gladglIndexfv;
#define glIndexfv gladglIndexfv
typedef void (* fp_glIndexi)(GLint);
extern fp_glIndexi gladglIndexi;
#define glIndexi gladglIndexi
typedef void (* fp_glIndexiv)(const GLint*);
extern fp_glIndexiv gladglIndexiv;
#define glIndexiv gladglIndexiv
typedef void (* fp_glIndexs)(GLshort);
extern fp_glIndexs gladglIndexs;
#define glIndexs gladglIndexs
typedef void (* fp_glIndexsv)(const GLshort*);
extern fp_glIndexsv gladglIndexsv;
#define glIndexsv gladglIndexsv
typedef void (* fp_glNormal3b)(GLbyte, GLbyte, GLbyte);
extern fp_glNormal3b gladglNormal3b;
#define glNormal3b gladglNormal3b
typedef void (* fp_glNormal3bv)(const GLbyte*);
extern fp_glNormal3bv gladglNormal3bv;
#define glNormal3bv gladglNormal3bv
typedef void (* fp_glNormal3d)(GLdouble, GLdouble, GLdouble);
extern fp_glNormal3d gladglNormal3d;
#define glNormal3d gladglNormal3d
typedef void (* fp_glNormal3dv)(const GLdouble*);
extern fp_glNormal3dv gladglNormal3dv;
#define glNormal3dv gladglNormal3dv
typedef void (* fp_glNormal3f)(GLfloat, GLfloat, GLfloat);
extern fp_glNormal3f gladglNormal3f;
#define glNormal3f gladglNormal3f
typedef void (* fp_glNormal3fv)(const GLfloat*);
extern fp_glNormal3fv gladglNormal3fv;
#define glNormal3fv gladglNormal3fv
typedef void (* fp_glNormal3i)(GLint, GLint, GLint);
extern fp_glNormal3i gladglNormal3i;
#define glNormal3i gladglNormal3i
typedef void (* fp_glNormal3iv)(const GLint*);
extern fp_glNormal3iv gladglNormal3iv;
#define glNormal3iv gladglNormal3iv
typedef void (* fp_glNormal3s)(GLshort, GLshort, GLshort);
extern fp_glNormal3s gladglNormal3s;
#define glNormal3s gladglNormal3s
typedef void (* fp_glNormal3sv)(const GLshort*);
extern fp_glNormal3sv gladglNormal3sv;
#define glNormal3sv gladglNormal3sv
typedef void (* fp_glRasterPos2d)(GLdouble, GLdouble);
extern fp_glRasterPos2d gladglRasterPos2d;
#define glRasterPos2d gladglRasterPos2d
typedef void (* fp_glRasterPos2dv)(const GLdouble*);
extern fp_glRasterPos2dv gladglRasterPos2dv;
#define glRasterPos2dv gladglRasterPos2dv
typedef void (* fp_glRasterPos2f)(GLfloat, GLfloat);
extern fp_glRasterPos2f gladglRasterPos2f;
#define glRasterPos2f gladglRasterPos2f
typedef void (* fp_glRasterPos2fv)(const GLfloat*);
extern fp_glRasterPos2fv gladglRasterPos2fv;
#define glRasterPos2fv gladglRasterPos2fv
typedef void (* fp_glRasterPos2i)(GLint, GLint);
extern fp_glRasterPos2i gladglRasterPos2i;
#define glRasterPos2i gladglRasterPos2i
typedef void (* fp_glRasterPos2iv)(const GLint*);
extern fp_glRasterPos2iv gladglRasterPos2iv;
#define glRasterPos2iv gladglRasterPos2iv
typedef void (* fp_glRasterPos2s)(GLshort, GLshort);
extern fp_glRasterPos2s gladglRasterPos2s;
#define glRasterPos2s gladglRasterPos2s
typedef void (* fp_glRasterPos2sv)(const GLshort*);
extern fp_glRasterPos2sv gladglRasterPos2sv;
#define glRasterPos2sv gladglRasterPos2sv
typedef void (* fp_glRasterPos3d)(GLdouble, GLdouble, GLdouble);
extern fp_glRasterPos3d gladglRasterPos3d;
#define glRasterPos3d gladglRasterPos3d
typedef void (* fp_glRasterPos3dv)(const GLdouble*);
extern fp_glRasterPos3dv gladglRasterPos3dv;
#define glRasterPos3dv gladglRasterPos3dv
typedef void (* fp_glRasterPos3f)(GLfloat, GLfloat, GLfloat);
extern fp_glRasterPos3f gladglRasterPos3f;
#define glRasterPos3f gladglRasterPos3f
typedef void (* fp_glRasterPos3fv)(const GLfloat*);
extern fp_glRasterPos3fv gladglRasterPos3fv;
#define glRasterPos3fv gladglRasterPos3fv
typedef void (* fp_glRasterPos3i)(GLint, GLint, GLint);
extern fp_glRasterPos3i gladglRasterPos3i;
#define glRasterPos3i gladglRasterPos3i
typedef void (* fp_glRasterPos3iv)(const GLint*);
extern fp_glRasterPos3iv gladglRasterPos3iv;
#define glRasterPos3iv gladglRasterPos3iv
typedef void (* fp_glRasterPos3s)(GLshort, GLshort, GLshort);
extern fp_glRasterPos3s gladglRasterPos3s;
#define glRasterPos3s gladglRasterPos3s
typedef void (* fp_glRasterPos3sv)(const GLshort*);
extern fp_glRasterPos3sv gladglRasterPos3sv;
#define glRasterPos3sv gladglRasterPos3sv
typedef void (* fp_glRasterPos4d)(GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glRasterPos4d gladglRasterPos4d;
#define glRasterPos4d gladglRasterPos4d
typedef void (* fp_glRasterPos4dv)(const GLdouble*);
extern fp_glRasterPos4dv gladglRasterPos4dv;
#define glRasterPos4dv gladglRasterPos4dv
typedef void (* fp_glRasterPos4f)(GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glRasterPos4f gladglRasterPos4f;
#define glRasterPos4f gladglRasterPos4f
typedef void (* fp_glRasterPos4fv)(const GLfloat*);
extern fp_glRasterPos4fv gladglRasterPos4fv;
#define glRasterPos4fv gladglRasterPos4fv
typedef void (* fp_glRasterPos4i)(GLint, GLint, GLint, GLint);
extern fp_glRasterPos4i gladglRasterPos4i;
#define glRasterPos4i gladglRasterPos4i
typedef void (* fp_glRasterPos4iv)(const GLint*);
extern fp_glRasterPos4iv gladglRasterPos4iv;
#define glRasterPos4iv gladglRasterPos4iv
typedef void (* fp_glRasterPos4s)(GLshort, GLshort, GLshort, GLshort);
extern fp_glRasterPos4s gladglRasterPos4s;
#define glRasterPos4s gladglRasterPos4s
typedef void (* fp_glRasterPos4sv)(const GLshort*);
extern fp_glRasterPos4sv gladglRasterPos4sv;
#define glRasterPos4sv gladglRasterPos4sv
typedef void (* fp_glRectd)(GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glRectd gladglRectd;
#define glRectd gladglRectd
typedef void (* fp_glRectdv)(const GLdouble*, const GLdouble*);
extern fp_glRectdv gladglRectdv;
#define glRectdv gladglRectdv
typedef void (* fp_glRectf)(GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glRectf gladglRectf;
#define glRectf gladglRectf
typedef void (* fp_glRectfv)(const GLfloat*, const GLfloat*);
extern fp_glRectfv gladglRectfv;
#define glRectfv gladglRectfv
typedef void (* fp_glRecti)(GLint, GLint, GLint, GLint);
extern fp_glRecti gladglRecti;
#define glRecti gladglRecti
typedef void (* fp_glRectiv)(const GLint*, const GLint*);
extern fp_glRectiv gladglRectiv;
#define glRectiv gladglRectiv
typedef void (* fp_glRects)(GLshort, GLshort, GLshort, GLshort);
extern fp_glRects gladglRects;
#define glRects gladglRects
typedef void (* fp_glRectsv)(const GLshort*, const GLshort*);
extern fp_glRectsv gladglRectsv;
#define glRectsv gladglRectsv
typedef void (* fp_glTexCoord1d)(GLdouble);
extern fp_glTexCoord1d gladglTexCoord1d;
#define glTexCoord1d gladglTexCoord1d
typedef void (* fp_glTexCoord1dv)(const GLdouble*);
extern fp_glTexCoord1dv gladglTexCoord1dv;
#define glTexCoord1dv gladglTexCoord1dv
typedef void (* fp_glTexCoord1f)(GLfloat);
extern fp_glTexCoord1f gladglTexCoord1f;
#define glTexCoord1f gladglTexCoord1f
typedef void (* fp_glTexCoord1fv)(const GLfloat*);
extern fp_glTexCoord1fv gladglTexCoord1fv;
#define glTexCoord1fv gladglTexCoord1fv
typedef void (* fp_glTexCoord1i)(GLint);
extern fp_glTexCoord1i gladglTexCoord1i;
#define glTexCoord1i gladglTexCoord1i
typedef void (* fp_glTexCoord1iv)(const GLint*);
extern fp_glTexCoord1iv gladglTexCoord1iv;
#define glTexCoord1iv gladglTexCoord1iv
typedef void (* fp_glTexCoord1s)(GLshort);
extern fp_glTexCoord1s gladglTexCoord1s;
#define glTexCoord1s gladglTexCoord1s
typedef void (* fp_glTexCoord1sv)(const GLshort*);
extern fp_glTexCoord1sv gladglTexCoord1sv;
#define glTexCoord1sv gladglTexCoord1sv
typedef void (* fp_glTexCoord2d)(GLdouble, GLdouble);
extern fp_glTexCoord2d gladglTexCoord2d;
#define glTexCoord2d gladglTexCoord2d
typedef void (* fp_glTexCoord2dv)(const GLdouble*);
extern fp_glTexCoord2dv gladglTexCoord2dv;
#define glTexCoord2dv gladglTexCoord2dv
typedef void (* fp_glTexCoord2f)(GLfloat, GLfloat);
extern fp_glTexCoord2f gladglTexCoord2f;
#define glTexCoord2f gladglTexCoord2f
typedef void (* fp_glTexCoord2fv)(const GLfloat*);
extern fp_glTexCoord2fv gladglTexCoord2fv;
#define glTexCoord2fv gladglTexCoord2fv
typedef void (* fp_glTexCoord2i)(GLint, GLint);
extern fp_glTexCoord2i gladglTexCoord2i;
#define glTexCoord2i gladglTexCoord2i
typedef void (* fp_glTexCoord2iv)(const GLint*);
extern fp_glTexCoord2iv gladglTexCoord2iv;
#define glTexCoord2iv gladglTexCoord2iv
typedef void (* fp_glTexCoord2s)(GLshort, GLshort);
extern fp_glTexCoord2s gladglTexCoord2s;
#define glTexCoord2s gladglTexCoord2s
typedef void (* fp_glTexCoord2sv)(const GLshort*);
extern fp_glTexCoord2sv gladglTexCoord2sv;
#define glTexCoord2sv gladglTexCoord2sv
typedef void (* fp_glTexCoord3d)(GLdouble, GLdouble, GLdouble);
extern fp_glTexCoord3d gladglTexCoord3d;
#define glTexCoord3d gladglTexCoord3d
typedef void (* fp_glTexCoord3dv)(const GLdouble*);
extern fp_glTexCoord3dv gladglTexCoord3dv;
#define glTexCoord3dv gladglTexCoord3dv
typedef void (* fp_glTexCoord3f)(GLfloat, GLfloat, GLfloat);
extern fp_glTexCoord3f gladglTexCoord3f;
#define glTexCoord3f gladglTexCoord3f
typedef void (* fp_glTexCoord3fv)(const GLfloat*);
extern fp_glTexCoord3fv gladglTexCoord3fv;
#define glTexCoord3fv gladglTexCoord3fv
typedef void (* fp_glTexCoord3i)(GLint, GLint, GLint);
extern fp_glTexCoord3i gladglTexCoord3i;
#define glTexCoord3i gladglTexCoord3i
typedef void (* fp_glTexCoord3iv)(const GLint*);
extern fp_glTexCoord3iv gladglTexCoord3iv;
#define glTexCoord3iv gladglTexCoord3iv
typedef void (* fp_glTexCoord3s)(GLshort, GLshort, GLshort);
extern fp_glTexCoord3s gladglTexCoord3s;
#define glTexCoord3s gladglTexCoord3s
typedef void (* fp_glTexCoord3sv)(const GLshort*);
extern fp_glTexCoord3sv gladglTexCoord3sv;
#define glTexCoord3sv gladglTexCoord3sv
typedef void (* fp_glTexCoord4d)(GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glTexCoord4d gladglTexCoord4d;
#define glTexCoord4d gladglTexCoord4d
typedef void (* fp_glTexCoord4dv)(const GLdouble*);
extern fp_glTexCoord4dv gladglTexCoord4dv;
#define glTexCoord4dv gladglTexCoord4dv
typedef void (* fp_glTexCoord4f)(GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glTexCoord4f gladglTexCoord4f;
#define glTexCoord4f gladglTexCoord4f
typedef void (* fp_glTexCoord4fv)(const GLfloat*);
extern fp_glTexCoord4fv gladglTexCoord4fv;
#define glTexCoord4fv gladglTexCoord4fv
typedef void (* fp_glTexCoord4i)(GLint, GLint, GLint, GLint);
extern fp_glTexCoord4i gladglTexCoord4i;
#define glTexCoord4i gladglTexCoord4i
typedef void (* fp_glTexCoord4iv)(const GLint*);
extern fp_glTexCoord4iv gladglTexCoord4iv;
#define glTexCoord4iv gladglTexCoord4iv
typedef void (* fp_glTexCoord4s)(GLshort, GLshort, GLshort, GLshort);
extern fp_glTexCoord4s gladglTexCoord4s;
#define glTexCoord4s gladglTexCoord4s
typedef void (* fp_glTexCoord4sv)(const GLshort*);
extern fp_glTexCoord4sv gladglTexCoord4sv;
#define glTexCoord4sv gladglTexCoord4sv
typedef void (* fp_glVertex2d)(GLdouble, GLdouble);
extern fp_glVertex2d gladglVertex2d;
#define glVertex2d gladglVertex2d
typedef void (* fp_glVertex2dv)(const GLdouble*);
extern fp_glVertex2dv gladglVertex2dv;
#define glVertex2dv gladglVertex2dv
typedef void (* fp_glVertex2f)(GLfloat, GLfloat);
extern fp_glVertex2f gladglVertex2f;
#define glVertex2f gladglVertex2f
typedef void (* fp_glVertex2fv)(const GLfloat*);
extern fp_glVertex2fv gladglVertex2fv;
#define glVertex2fv gladglVertex2fv
typedef void (* fp_glVertex2i)(GLint, GLint);
extern fp_glVertex2i gladglVertex2i;
#define glVertex2i gladglVertex2i
typedef void (* fp_glVertex2iv)(const GLint*);
extern fp_glVertex2iv gladglVertex2iv;
#define glVertex2iv gladglVertex2iv
typedef void (* fp_glVertex2s)(GLshort, GLshort);
extern fp_glVertex2s gladglVertex2s;
#define glVertex2s gladglVertex2s
typedef void (* fp_glVertex2sv)(const GLshort*);
extern fp_glVertex2sv gladglVertex2sv;
#define glVertex2sv gladglVertex2sv
typedef void (* fp_glVertex3d)(GLdouble, GLdouble, GLdouble);
extern fp_glVertex3d gladglVertex3d;
#define glVertex3d gladglVertex3d
typedef void (* fp_glVertex3dv)(const GLdouble*);
extern fp_glVertex3dv gladglVertex3dv;
#define glVertex3dv gladglVertex3dv
typedef void (* fp_glVertex3f)(GLfloat, GLfloat, GLfloat);
extern fp_glVertex3f gladglVertex3f;
#define glVertex3f gladglVertex3f
typedef void (* fp_glVertex3fv)(const GLfloat*);
extern fp_glVertex3fv gladglVertex3fv;
#define glVertex3fv gladglVertex3fv
typedef void (* fp_glVertex3i)(GLint, GLint, GLint);
extern fp_glVertex3i gladglVertex3i;
#define glVertex3i gladglVertex3i
typedef void (* fp_glVertex3iv)(const GLint*);
extern fp_glVertex3iv gladglVertex3iv;
#define glVertex3iv gladglVertex3iv
typedef void (* fp_glVertex3s)(GLshort, GLshort, GLshort);
extern fp_glVertex3s gladglVertex3s;
#define glVertex3s gladglVertex3s
typedef void (* fp_glVertex3sv)(const GLshort*);
extern fp_glVertex3sv gladglVertex3sv;
#define glVertex3sv gladglVertex3sv
typedef void (* fp_glVertex4d)(GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glVertex4d gladglVertex4d;
#define glVertex4d gladglVertex4d
typedef void (* fp_glVertex4dv)(const GLdouble*);
extern fp_glVertex4dv gladglVertex4dv;
#define glVertex4dv gladglVertex4dv
typedef void (* fp_glVertex4f)(GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glVertex4f gladglVertex4f;
#define glVertex4f gladglVertex4f
typedef void (* fp_glVertex4fv)(const GLfloat*);
extern fp_glVertex4fv gladglVertex4fv;
#define glVertex4fv gladglVertex4fv
typedef void (* fp_glVertex4i)(GLint, GLint, GLint, GLint);
extern fp_glVertex4i gladglVertex4i;
#define glVertex4i gladglVertex4i
typedef void (* fp_glVertex4iv)(const GLint*);
extern fp_glVertex4iv gladglVertex4iv;
#define glVertex4iv gladglVertex4iv
typedef void (* fp_glVertex4s)(GLshort, GLshort, GLshort, GLshort);
extern fp_glVertex4s gladglVertex4s;
#define glVertex4s gladglVertex4s
typedef void (* fp_glVertex4sv)(const GLshort*);
extern fp_glVertex4sv gladglVertex4sv;
#define glVertex4sv gladglVertex4sv
typedef void (* fp_glClipPlane)(GLenum, const GLdouble*);
extern fp_glClipPlane gladglClipPlane;
#define glClipPlane gladglClipPlane
typedef void (* fp_glColorMaterial)(GLenum, GLenum);
extern fp_glColorMaterial gladglColorMaterial;
#define glColorMaterial gladglColorMaterial
typedef void (* fp_glFogf)(GLenum, GLfloat);
extern fp_glFogf gladglFogf;
#define glFogf gladglFogf
typedef void (* fp_glFogfv)(GLenum, const GLfloat*);
extern fp_glFogfv gladglFogfv;
#define glFogfv gladglFogfv
typedef void (* fp_glFogi)(GLenum, GLint);
extern fp_glFogi gladglFogi;
#define glFogi gladglFogi
typedef void (* fp_glFogiv)(GLenum, const GLint*);
extern fp_glFogiv gladglFogiv;
#define glFogiv gladglFogiv
typedef void (* fp_glLightf)(GLenum, GLenum, GLfloat);
extern fp_glLightf gladglLightf;
#define glLightf gladglLightf
typedef void (* fp_glLightfv)(GLenum, GLenum, const GLfloat*);
extern fp_glLightfv gladglLightfv;
#define glLightfv gladglLightfv
typedef void (* fp_glLighti)(GLenum, GLenum, GLint);
extern fp_glLighti gladglLighti;
#define glLighti gladglLighti
typedef void (* fp_glLightiv)(GLenum, GLenum, const GLint*);
extern fp_glLightiv gladglLightiv;
#define glLightiv gladglLightiv
typedef void (* fp_glLightModelf)(GLenum, GLfloat);
extern fp_glLightModelf gladglLightModelf;
#define glLightModelf gladglLightModelf
typedef void (* fp_glLightModelfv)(GLenum, const GLfloat*);
extern fp_glLightModelfv gladglLightModelfv;
#define glLightModelfv gladglLightModelfv
typedef void (* fp_glLightModeli)(GLenum, GLint);
extern fp_glLightModeli gladglLightModeli;
#define glLightModeli gladglLightModeli
typedef void (* fp_glLightModeliv)(GLenum, const GLint*);
extern fp_glLightModeliv gladglLightModeliv;
#define glLightModeliv gladglLightModeliv
typedef void (* fp_glLineStipple)(GLint, GLushort);
extern fp_glLineStipple gladglLineStipple;
#define glLineStipple gladglLineStipple
typedef void (* fp_glMaterialf)(GLenum, GLenum, GLfloat);
extern fp_glMaterialf gladglMaterialf;
#define glMaterialf gladglMaterialf
typedef void (* fp_glMaterialfv)(GLenum, GLenum, const GLfloat*);
extern fp_glMaterialfv gladglMaterialfv;
#define glMaterialfv gladglMaterialfv
typedef void (* fp_glMateriali)(GLenum, GLenum, GLint);
extern fp_glMateriali gladglMateriali;
#define glMateriali gladglMateriali
typedef void (* fp_glMaterialiv)(GLenum, GLenum, const GLint*);
extern fp_glMaterialiv gladglMaterialiv;
#define glMaterialiv gladglMaterialiv
typedef void (* fp_glPolygonStipple)(const GLubyte*);
extern fp_glPolygonStipple gladglPolygonStipple;
#define glPolygonStipple gladglPolygonStipple
typedef void (* fp_glShadeModel)(GLenum);
extern fp_glShadeModel gladglShadeModel;
#define glShadeModel gladglShadeModel
typedef void (* fp_glTexEnvf)(GLenum, GLenum, GLfloat);
extern fp_glTexEnvf gladglTexEnvf;
#define glTexEnvf gladglTexEnvf
typedef void (* fp_glTexEnvfv)(GLenum, GLenum, const GLfloat*);
extern fp_glTexEnvfv gladglTexEnvfv;
#define glTexEnvfv gladglTexEnvfv
typedef void (* fp_glTexEnvi)(GLenum, GLenum, GLint);
extern fp_glTexEnvi gladglTexEnvi;
#define glTexEnvi gladglTexEnvi
typedef void (* fp_glTexEnviv)(GLenum, GLenum, const GLint*);
extern fp_glTexEnviv gladglTexEnviv;
#define glTexEnviv gladglTexEnviv
typedef void (* fp_glTexGend)(GLenum, GLenum, GLdouble);
extern fp_glTexGend gladglTexGend;
#define glTexGend gladglTexGend
typedef void (* fp_glTexGendv)(GLenum, GLenum, const GLdouble*);
extern fp_glTexGendv gladglTexGendv;
#define glTexGendv gladglTexGendv
typedef void (* fp_glTexGenf)(GLenum, GLenum, GLfloat);
extern fp_glTexGenf gladglTexGenf;
#define glTexGenf gladglTexGenf
typedef void (* fp_glTexGenfv)(GLenum, GLenum, const GLfloat*);
extern fp_glTexGenfv gladglTexGenfv;
#define glTexGenfv gladglTexGenfv
typedef void (* fp_glTexGeni)(GLenum, GLenum, GLint);
extern fp_glTexGeni gladglTexGeni;
#define glTexGeni gladglTexGeni
typedef void (* fp_glTexGeniv)(GLenum, GLenum, const GLint*);
extern fp_glTexGeniv gladglTexGeniv;
#define glTexGeniv gladglTexGeniv
typedef void (* fp_glFeedbackBuffer)(GLsizei, GLenum, GLfloat*);
extern fp_glFeedbackBuffer gladglFeedbackBuffer;
#define glFeedbackBuffer gladglFeedbackBuffer
typedef void (* fp_glSelectBuffer)(GLsizei, GLuint*);
extern fp_glSelectBuffer gladglSelectBuffer;
#define glSelectBuffer gladglSelectBuffer
typedef GLint (* fp_glRenderMode)(GLenum);
extern fp_glRenderMode gladglRenderMode;
#define glRenderMode gladglRenderMode
typedef void (* fp_glInitNames)();
extern fp_glInitNames gladglInitNames;
#define glInitNames gladglInitNames
typedef void (* fp_glLoadName)(GLuint);
extern fp_glLoadName gladglLoadName;
#define glLoadName gladglLoadName
typedef void (* fp_glPassThrough)(GLfloat);
extern fp_glPassThrough gladglPassThrough;
#define glPassThrough gladglPassThrough
typedef void (* fp_glPopName)();
extern fp_glPopName gladglPopName;
#define glPopName gladglPopName
typedef void (* fp_glPushName)(GLuint);
extern fp_glPushName gladglPushName;
#define glPushName gladglPushName
typedef void (* fp_glClearAccum)(GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glClearAccum gladglClearAccum;
#define glClearAccum gladglClearAccum
typedef void (* fp_glClearIndex)(GLfloat);
extern fp_glClearIndex gladglClearIndex;
#define glClearIndex gladglClearIndex
typedef void (* fp_glIndexMask)(GLuint);
extern fp_glIndexMask gladglIndexMask;
#define glIndexMask gladglIndexMask
typedef void (* fp_glAccum)(GLenum, GLfloat);
extern fp_glAccum gladglAccum;
#define glAccum gladglAccum
typedef void (* fp_glPopAttrib)();
extern fp_glPopAttrib gladglPopAttrib;
#define glPopAttrib gladglPopAttrib
typedef void (* fp_glPushAttrib)(GLbitfield);
extern fp_glPushAttrib gladglPushAttrib;
#define glPushAttrib gladglPushAttrib
typedef void (* fp_glMap1d)(GLenum, GLdouble, GLdouble, GLint, GLint, const GLdouble*);
extern fp_glMap1d gladglMap1d;
#define glMap1d gladglMap1d
typedef void (* fp_glMap1f)(GLenum, GLfloat, GLfloat, GLint, GLint, const GLfloat*);
extern fp_glMap1f gladglMap1f;
#define glMap1f gladglMap1f
typedef void (* fp_glMap2d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, const GLdouble*);
extern fp_glMap2d gladglMap2d;
#define glMap2d gladglMap2d
typedef void (* fp_glMap2f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, const GLfloat*);
extern fp_glMap2f gladglMap2f;
#define glMap2f gladglMap2f
typedef void (* fp_glMapGrid1d)(GLint, GLdouble, GLdouble);
extern fp_glMapGrid1d gladglMapGrid1d;
#define glMapGrid1d gladglMapGrid1d
typedef void (* fp_glMapGrid1f)(GLint, GLfloat, GLfloat);
extern fp_glMapGrid1f gladglMapGrid1f;
#define glMapGrid1f gladglMapGrid1f
typedef void (* fp_glMapGrid2d)(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble);
extern fp_glMapGrid2d gladglMapGrid2d;
#define glMapGrid2d gladglMapGrid2d
typedef void (* fp_glMapGrid2f)(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat);
extern fp_glMapGrid2f gladglMapGrid2f;
#define glMapGrid2f gladglMapGrid2f
typedef void (* fp_glEvalCoord1d)(GLdouble);
extern fp_glEvalCoord1d gladglEvalCoord1d;
#define glEvalCoord1d gladglEvalCoord1d
typedef void (* fp_glEvalCoord1dv)(const GLdouble*);
extern fp_glEvalCoord1dv gladglEvalCoord1dv;
#define glEvalCoord1dv gladglEvalCoord1dv
typedef void (* fp_glEvalCoord1f)(GLfloat);
extern fp_glEvalCoord1f gladglEvalCoord1f;
#define glEvalCoord1f gladglEvalCoord1f
typedef void (* fp_glEvalCoord1fv)(const GLfloat*);
extern fp_glEvalCoord1fv gladglEvalCoord1fv;
#define glEvalCoord1fv gladglEvalCoord1fv
typedef void (* fp_glEvalCoord2d)(GLdouble, GLdouble);
extern fp_glEvalCoord2d gladglEvalCoord2d;
#define glEvalCoord2d gladglEvalCoord2d
typedef void (* fp_glEvalCoord2dv)(const GLdouble*);
extern fp_glEvalCoord2dv gladglEvalCoord2dv;
#define glEvalCoord2dv gladglEvalCoord2dv
typedef void (* fp_glEvalCoord2f)(GLfloat, GLfloat);
extern fp_glEvalCoord2f gladglEvalCoord2f;
#define glEvalCoord2f gladglEvalCoord2f
typedef void (* fp_glEvalCoord2fv)(const GLfloat*);
extern fp_glEvalCoord2fv gladglEvalCoord2fv;
#define glEvalCoord2fv gladglEvalCoord2fv
typedef void (* fp_glEvalMesh1)(GLenum, GLint, GLint);
extern fp_glEvalMesh1 gladglEvalMesh1;
#define glEvalMesh1 gladglEvalMesh1
typedef void (* fp_glEvalPoint1)(GLint);
extern fp_glEvalPoint1 gladglEvalPoint1;
#define glEvalPoint1 gladglEvalPoint1
typedef void (* fp_glEvalMesh2)(GLenum, GLint, GLint, GLint, GLint);
extern fp_glEvalMesh2 gladglEvalMesh2;
#define glEvalMesh2 gladglEvalMesh2
typedef void (* fp_glEvalPoint2)(GLint, GLint);
extern fp_glEvalPoint2 gladglEvalPoint2;
#define glEvalPoint2 gladglEvalPoint2
typedef void (* fp_glAlphaFunc)(GLenum, GLfloat);
extern fp_glAlphaFunc gladglAlphaFunc;
#define glAlphaFunc gladglAlphaFunc
typedef void (* fp_glPixelZoom)(GLfloat, GLfloat);
extern fp_glPixelZoom gladglPixelZoom;
#define glPixelZoom gladglPixelZoom
typedef void (* fp_glPixelTransferf)(GLenum, GLfloat);
extern fp_glPixelTransferf gladglPixelTransferf;
#define glPixelTransferf gladglPixelTransferf
typedef void (* fp_glPixelTransferi)(GLenum, GLint);
extern fp_glPixelTransferi gladglPixelTransferi;
#define glPixelTransferi gladglPixelTransferi
typedef void (* fp_glPixelMapfv)(GLenum, GLsizei, const GLfloat*);
extern fp_glPixelMapfv gladglPixelMapfv;
#define glPixelMapfv gladglPixelMapfv
typedef void (* fp_glPixelMapuiv)(GLenum, GLsizei, const GLuint*);
extern fp_glPixelMapuiv gladglPixelMapuiv;
#define glPixelMapuiv gladglPixelMapuiv
typedef void (* fp_glPixelMapusv)(GLenum, GLsizei, const GLushort*);
extern fp_glPixelMapusv gladglPixelMapusv;
#define glPixelMapusv gladglPixelMapusv
typedef void (* fp_glCopyPixels)(GLint, GLint, GLsizei, GLsizei, GLenum);
extern fp_glCopyPixels gladglCopyPixels;
#define glCopyPixels gladglCopyPixels
typedef void (* fp_glDrawPixels)(GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glDrawPixels gladglDrawPixels;
#define glDrawPixels gladglDrawPixels
typedef void (* fp_glGetClipPlane)(GLenum, GLdouble*);
extern fp_glGetClipPlane gladglGetClipPlane;
#define glGetClipPlane gladglGetClipPlane
typedef void (* fp_glGetLightfv)(GLenum, GLenum, GLfloat*);
extern fp_glGetLightfv gladglGetLightfv;
#define glGetLightfv gladglGetLightfv
typedef void (* fp_glGetLightiv)(GLenum, GLenum, GLint*);
extern fp_glGetLightiv gladglGetLightiv;
#define glGetLightiv gladglGetLightiv
typedef void (* fp_glGetMapdv)(GLenum, GLenum, GLdouble*);
extern fp_glGetMapdv gladglGetMapdv;
#define glGetMapdv gladglGetMapdv
typedef void (* fp_glGetMapfv)(GLenum, GLenum, GLfloat*);
extern fp_glGetMapfv gladglGetMapfv;
#define glGetMapfv gladglGetMapfv
typedef void (* fp_glGetMapiv)(GLenum, GLenum, GLint*);
extern fp_glGetMapiv gladglGetMapiv;
#define glGetMapiv gladglGetMapiv
typedef void (* fp_glGetMaterialfv)(GLenum, GLenum, GLfloat*);
extern fp_glGetMaterialfv gladglGetMaterialfv;
#define glGetMaterialfv gladglGetMaterialfv
typedef void (* fp_glGetMaterialiv)(GLenum, GLenum, GLint*);
extern fp_glGetMaterialiv gladglGetMaterialiv;
#define glGetMaterialiv gladglGetMaterialiv
typedef void (* fp_glGetPixelMapfv)(GLenum, GLfloat*);
extern fp_glGetPixelMapfv gladglGetPixelMapfv;
#define glGetPixelMapfv gladglGetPixelMapfv
typedef void (* fp_glGetPixelMapuiv)(GLenum, GLuint*);
extern fp_glGetPixelMapuiv gladglGetPixelMapuiv;
#define glGetPixelMapuiv gladglGetPixelMapuiv
typedef void (* fp_glGetPixelMapusv)(GLenum, GLushort*);
extern fp_glGetPixelMapusv gladglGetPixelMapusv;
#define glGetPixelMapusv gladglGetPixelMapusv
typedef void (* fp_glGetPolygonStipple)(GLubyte*);
extern fp_glGetPolygonStipple gladglGetPolygonStipple;
#define glGetPolygonStipple gladglGetPolygonStipple
typedef void (* fp_glGetTexEnvfv)(GLenum, GLenum, GLfloat*);
extern fp_glGetTexEnvfv gladglGetTexEnvfv;
#define glGetTexEnvfv gladglGetTexEnvfv
typedef void (* fp_glGetTexEnviv)(GLenum, GLenum, GLint*);
extern fp_glGetTexEnviv gladglGetTexEnviv;
#define glGetTexEnviv gladglGetTexEnviv
typedef void (* fp_glGetTexGendv)(GLenum, GLenum, GLdouble*);
extern fp_glGetTexGendv gladglGetTexGendv;
#define glGetTexGendv gladglGetTexGendv
typedef void (* fp_glGetTexGenfv)(GLenum, GLenum, GLfloat*);
extern fp_glGetTexGenfv gladglGetTexGenfv;
#define glGetTexGenfv gladglGetTexGenfv
typedef void (* fp_glGetTexGeniv)(GLenum, GLenum, GLint*);
extern fp_glGetTexGeniv gladglGetTexGeniv;
#define glGetTexGeniv gladglGetTexGeniv
typedef GLboolean (* fp_glIsList)(GLuint);
extern fp_glIsList gladglIsList;
#define glIsList gladglIsList
typedef void (* fp_glFrustum)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glFrustum gladglFrustum;
#define glFrustum gladglFrustum
typedef void (* fp_glLoadIdentity)();
extern fp_glLoadIdentity gladglLoadIdentity;
#define glLoadIdentity gladglLoadIdentity
typedef void (* fp_glLoadMatrixf)(const GLfloat*);
extern fp_glLoadMatrixf gladglLoadMatrixf;
#define glLoadMatrixf gladglLoadMatrixf
typedef void (* fp_glLoadMatrixd)(const GLdouble*);
extern fp_glLoadMatrixd gladglLoadMatrixd;
#define glLoadMatrixd gladglLoadMatrixd
typedef void (* fp_glMatrixMode)(GLenum);
extern fp_glMatrixMode gladglMatrixMode;
#define glMatrixMode gladglMatrixMode
typedef void (* fp_glMultMatrixf)(const GLfloat*);
extern fp_glMultMatrixf gladglMultMatrixf;
#define glMultMatrixf gladglMultMatrixf
typedef void (* fp_glMultMatrixd)(const GLdouble*);
extern fp_glMultMatrixd gladglMultMatrixd;
#define glMultMatrixd gladglMultMatrixd
typedef void (* fp_glOrtho)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glOrtho gladglOrtho;
#define glOrtho gladglOrtho
typedef void (* fp_glPopMatrix)();
extern fp_glPopMatrix gladglPopMatrix;
#define glPopMatrix gladglPopMatrix
typedef void (* fp_glPushMatrix)();
extern fp_glPushMatrix gladglPushMatrix;
#define glPushMatrix gladglPushMatrix
typedef void (* fp_glRotated)(GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glRotated gladglRotated;
#define glRotated gladglRotated
typedef void (* fp_glRotatef)(GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glRotatef gladglRotatef;
#define glRotatef gladglRotatef
typedef void (* fp_glScaled)(GLdouble, GLdouble, GLdouble);
extern fp_glScaled gladglScaled;
#define glScaled gladglScaled
typedef void (* fp_glScalef)(GLfloat, GLfloat, GLfloat);
extern fp_glScalef gladglScalef;
#define glScalef gladglScalef
typedef void (* fp_glTranslated)(GLdouble, GLdouble, GLdouble);
extern fp_glTranslated gladglTranslated;
#define glTranslated gladglTranslated
typedef void (* fp_glTranslatef)(GLfloat, GLfloat, GLfloat);
extern fp_glTranslatef gladglTranslatef;
#define glTranslatef gladglTranslatef
int GL_VERSION_1_1;
typedef void (* fp_glDrawArrays)(GLenum, GLint, GLsizei);
extern fp_glDrawArrays gladglDrawArrays;
#define glDrawArrays gladglDrawArrays
typedef void (* fp_glDrawElements)(GLenum, GLsizei, GLenum, const GLvoid*);
extern fp_glDrawElements gladglDrawElements;
#define glDrawElements gladglDrawElements
typedef void (* fp_glGetPointerv)(GLenum, GLvoid**);
extern fp_glGetPointerv gladglGetPointerv;
#define glGetPointerv gladglGetPointerv
typedef void (* fp_glPolygonOffset)(GLfloat, GLfloat);
extern fp_glPolygonOffset gladglPolygonOffset;
#define glPolygonOffset gladglPolygonOffset
typedef void (* fp_glCopyTexImage1D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
extern fp_glCopyTexImage1D gladglCopyTexImage1D;
#define glCopyTexImage1D gladglCopyTexImage1D
typedef void (* fp_glCopyTexImage2D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
extern fp_glCopyTexImage2D gladglCopyTexImage2D;
#define glCopyTexImage2D gladglCopyTexImage2D
typedef void (* fp_glCopyTexSubImage1D)(GLenum, GLint, GLint, GLint, GLint, GLsizei);
extern fp_glCopyTexSubImage1D gladglCopyTexSubImage1D;
#define glCopyTexSubImage1D gladglCopyTexSubImage1D
typedef void (* fp_glCopyTexSubImage2D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
extern fp_glCopyTexSubImage2D gladglCopyTexSubImage2D;
#define glCopyTexSubImage2D gladglCopyTexSubImage2D
typedef void (* fp_glTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glTexSubImage1D gladglTexSubImage1D;
#define glTexSubImage1D gladglTexSubImage1D
typedef void (* fp_glTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glTexSubImage2D gladglTexSubImage2D;
#define glTexSubImage2D gladglTexSubImage2D
typedef void (* fp_glBindTexture)(GLenum, GLuint);
extern fp_glBindTexture gladglBindTexture;
#define glBindTexture gladglBindTexture
typedef void (* fp_glDeleteTextures)(GLsizei, const GLuint*);
extern fp_glDeleteTextures gladglDeleteTextures;
#define glDeleteTextures gladglDeleteTextures
typedef void (* fp_glGenTextures)(GLsizei, GLuint*);
extern fp_glGenTextures gladglGenTextures;
#define glGenTextures gladglGenTextures
typedef GLboolean (* fp_glIsTexture)(GLuint);
extern fp_glIsTexture gladglIsTexture;
#define glIsTexture gladglIsTexture
typedef void (* fp_glArrayElement)(GLint);
extern fp_glArrayElement gladglArrayElement;
#define glArrayElement gladglArrayElement
typedef void (* fp_glColorPointer)(GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glColorPointer gladglColorPointer;
#define glColorPointer gladglColorPointer
typedef void (* fp_glDisableClientState)(GLenum);
extern fp_glDisableClientState gladglDisableClientState;
#define glDisableClientState gladglDisableClientState
typedef void (* fp_glEdgeFlagPointer)(GLsizei, const GLvoid*);
extern fp_glEdgeFlagPointer gladglEdgeFlagPointer;
#define glEdgeFlagPointer gladglEdgeFlagPointer
typedef void (* fp_glEnableClientState)(GLenum);
extern fp_glEnableClientState gladglEnableClientState;
#define glEnableClientState gladglEnableClientState
typedef void (* fp_glIndexPointer)(GLenum, GLsizei, const GLvoid*);
extern fp_glIndexPointer gladglIndexPointer;
#define glIndexPointer gladglIndexPointer
typedef void (* fp_glInterleavedArrays)(GLenum, GLsizei, const GLvoid*);
extern fp_glInterleavedArrays gladglInterleavedArrays;
#define glInterleavedArrays gladglInterleavedArrays
typedef void (* fp_glNormalPointer)(GLenum, GLsizei, const GLvoid*);
extern fp_glNormalPointer gladglNormalPointer;
#define glNormalPointer gladglNormalPointer
typedef void (* fp_glTexCoordPointer)(GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glTexCoordPointer gladglTexCoordPointer;
#define glTexCoordPointer gladglTexCoordPointer
typedef void (* fp_glVertexPointer)(GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glVertexPointer gladglVertexPointer;
#define glVertexPointer gladglVertexPointer
typedef GLboolean (* fp_glAreTexturesResident)(GLsizei, const GLuint*, GLboolean*);
extern fp_glAreTexturesResident gladglAreTexturesResident;
#define glAreTexturesResident gladglAreTexturesResident
typedef void (* fp_glPrioritizeTextures)(GLsizei, const GLuint*, const GLfloat*);
extern fp_glPrioritizeTextures gladglPrioritizeTextures;
#define glPrioritizeTextures gladglPrioritizeTextures
typedef void (* fp_glIndexub)(GLubyte);
extern fp_glIndexub gladglIndexub;
#define glIndexub gladglIndexub
typedef void (* fp_glIndexubv)(const GLubyte*);
extern fp_glIndexubv gladglIndexubv;
#define glIndexubv gladglIndexubv
typedef void (* fp_glPopClientAttrib)();
extern fp_glPopClientAttrib gladglPopClientAttrib;
#define glPopClientAttrib gladglPopClientAttrib
typedef void (* fp_glPushClientAttrib)(GLbitfield);
extern fp_glPushClientAttrib gladglPushClientAttrib;
#define glPushClientAttrib gladglPushClientAttrib
int GL_VERSION_1_2;
typedef void (* fp_glBlendColor)(GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glBlendColor gladglBlendColor;
#define glBlendColor gladglBlendColor
typedef void (* fp_glBlendEquation)(GLenum);
extern fp_glBlendEquation gladglBlendEquation;
#define glBlendEquation gladglBlendEquation
typedef void (* fp_glDrawRangeElements)(GLenum, GLuint, GLuint, GLsizei, GLenum, const GLvoid*);
extern fp_glDrawRangeElements gladglDrawRangeElements;
#define glDrawRangeElements gladglDrawRangeElements
typedef void (* fp_glTexImage3D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
extern fp_glTexImage3D gladglTexImage3D;
#define glTexImage3D gladglTexImage3D
typedef void (* fp_glTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glTexSubImage3D gladglTexSubImage3D;
#define glTexSubImage3D gladglTexSubImage3D
typedef void (* fp_glCopyTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
extern fp_glCopyTexSubImage3D gladglCopyTexSubImage3D;
#define glCopyTexSubImage3D gladglCopyTexSubImage3D
int GL_VERSION_1_3;
typedef void (* fp_glActiveTexture)(GLenum);
extern fp_glActiveTexture gladglActiveTexture;
#define glActiveTexture gladglActiveTexture
typedef void (* fp_glSampleCoverage)(GLfloat, GLboolean);
extern fp_glSampleCoverage gladglSampleCoverage;
#define glSampleCoverage gladglSampleCoverage
typedef void (* fp_glCompressedTexImage3D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid*);
extern fp_glCompressedTexImage3D gladglCompressedTexImage3D;
#define glCompressedTexImage3D gladglCompressedTexImage3D
typedef void (* fp_glCompressedTexImage2D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid*);
extern fp_glCompressedTexImage2D gladglCompressedTexImage2D;
#define glCompressedTexImage2D gladglCompressedTexImage2D
typedef void (* fp_glCompressedTexImage1D)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const GLvoid*);
extern fp_glCompressedTexImage1D gladglCompressedTexImage1D;
#define glCompressedTexImage1D gladglCompressedTexImage1D
typedef void (* fp_glCompressedTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid*);
extern fp_glCompressedTexSubImage3D gladglCompressedTexSubImage3D;
#define glCompressedTexSubImage3D gladglCompressedTexSubImage3D
typedef void (* fp_glCompressedTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid*);
extern fp_glCompressedTexSubImage2D gladglCompressedTexSubImage2D;
#define glCompressedTexSubImage2D gladglCompressedTexSubImage2D
typedef void (* fp_glCompressedTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid*);
extern fp_glCompressedTexSubImage1D gladglCompressedTexSubImage1D;
#define glCompressedTexSubImage1D gladglCompressedTexSubImage1D
typedef void (* fp_glGetCompressedTexImage)(GLenum, GLint, GLvoid*);
extern fp_glGetCompressedTexImage gladglGetCompressedTexImage;
#define glGetCompressedTexImage gladglGetCompressedTexImage
typedef void (* fp_glClientActiveTexture)(GLenum);
extern fp_glClientActiveTexture gladglClientActiveTexture;
#define glClientActiveTexture gladglClientActiveTexture
typedef void (* fp_glMultiTexCoord1d)(GLenum, GLdouble);
extern fp_glMultiTexCoord1d gladglMultiTexCoord1d;
#define glMultiTexCoord1d gladglMultiTexCoord1d
typedef void (* fp_glMultiTexCoord1dv)(GLenum, const GLdouble*);
extern fp_glMultiTexCoord1dv gladglMultiTexCoord1dv;
#define glMultiTexCoord1dv gladglMultiTexCoord1dv
typedef void (* fp_glMultiTexCoord1f)(GLenum, GLfloat);
extern fp_glMultiTexCoord1f gladglMultiTexCoord1f;
#define glMultiTexCoord1f gladglMultiTexCoord1f
typedef void (* fp_glMultiTexCoord1fv)(GLenum, const GLfloat*);
extern fp_glMultiTexCoord1fv gladglMultiTexCoord1fv;
#define glMultiTexCoord1fv gladglMultiTexCoord1fv
typedef void (* fp_glMultiTexCoord1i)(GLenum, GLint);
extern fp_glMultiTexCoord1i gladglMultiTexCoord1i;
#define glMultiTexCoord1i gladglMultiTexCoord1i
typedef void (* fp_glMultiTexCoord1iv)(GLenum, const GLint*);
extern fp_glMultiTexCoord1iv gladglMultiTexCoord1iv;
#define glMultiTexCoord1iv gladglMultiTexCoord1iv
typedef void (* fp_glMultiTexCoord1s)(GLenum, GLshort);
extern fp_glMultiTexCoord1s gladglMultiTexCoord1s;
#define glMultiTexCoord1s gladglMultiTexCoord1s
typedef void (* fp_glMultiTexCoord1sv)(GLenum, const GLshort*);
extern fp_glMultiTexCoord1sv gladglMultiTexCoord1sv;
#define glMultiTexCoord1sv gladglMultiTexCoord1sv
typedef void (* fp_glMultiTexCoord2d)(GLenum, GLdouble, GLdouble);
extern fp_glMultiTexCoord2d gladglMultiTexCoord2d;
#define glMultiTexCoord2d gladglMultiTexCoord2d
typedef void (* fp_glMultiTexCoord2dv)(GLenum, const GLdouble*);
extern fp_glMultiTexCoord2dv gladglMultiTexCoord2dv;
#define glMultiTexCoord2dv gladglMultiTexCoord2dv
typedef void (* fp_glMultiTexCoord2f)(GLenum, GLfloat, GLfloat);
extern fp_glMultiTexCoord2f gladglMultiTexCoord2f;
#define glMultiTexCoord2f gladglMultiTexCoord2f
typedef void (* fp_glMultiTexCoord2fv)(GLenum, const GLfloat*);
extern fp_glMultiTexCoord2fv gladglMultiTexCoord2fv;
#define glMultiTexCoord2fv gladglMultiTexCoord2fv
typedef void (* fp_glMultiTexCoord2i)(GLenum, GLint, GLint);
extern fp_glMultiTexCoord2i gladglMultiTexCoord2i;
#define glMultiTexCoord2i gladglMultiTexCoord2i
typedef void (* fp_glMultiTexCoord2iv)(GLenum, const GLint*);
extern fp_glMultiTexCoord2iv gladglMultiTexCoord2iv;
#define glMultiTexCoord2iv gladglMultiTexCoord2iv
typedef void (* fp_glMultiTexCoord2s)(GLenum, GLshort, GLshort);
extern fp_glMultiTexCoord2s gladglMultiTexCoord2s;
#define glMultiTexCoord2s gladglMultiTexCoord2s
typedef void (* fp_glMultiTexCoord2sv)(GLenum, const GLshort*);
extern fp_glMultiTexCoord2sv gladglMultiTexCoord2sv;
#define glMultiTexCoord2sv gladglMultiTexCoord2sv
typedef void (* fp_glMultiTexCoord3d)(GLenum, GLdouble, GLdouble, GLdouble);
extern fp_glMultiTexCoord3d gladglMultiTexCoord3d;
#define glMultiTexCoord3d gladglMultiTexCoord3d
typedef void (* fp_glMultiTexCoord3dv)(GLenum, const GLdouble*);
extern fp_glMultiTexCoord3dv gladglMultiTexCoord3dv;
#define glMultiTexCoord3dv gladglMultiTexCoord3dv
typedef void (* fp_glMultiTexCoord3f)(GLenum, GLfloat, GLfloat, GLfloat);
extern fp_glMultiTexCoord3f gladglMultiTexCoord3f;
#define glMultiTexCoord3f gladglMultiTexCoord3f
typedef void (* fp_glMultiTexCoord3fv)(GLenum, const GLfloat*);
extern fp_glMultiTexCoord3fv gladglMultiTexCoord3fv;
#define glMultiTexCoord3fv gladglMultiTexCoord3fv
typedef void (* fp_glMultiTexCoord3i)(GLenum, GLint, GLint, GLint);
extern fp_glMultiTexCoord3i gladglMultiTexCoord3i;
#define glMultiTexCoord3i gladglMultiTexCoord3i
typedef void (* fp_glMultiTexCoord3iv)(GLenum, const GLint*);
extern fp_glMultiTexCoord3iv gladglMultiTexCoord3iv;
#define glMultiTexCoord3iv gladglMultiTexCoord3iv
typedef void (* fp_glMultiTexCoord3s)(GLenum, GLshort, GLshort, GLshort);
extern fp_glMultiTexCoord3s gladglMultiTexCoord3s;
#define glMultiTexCoord3s gladglMultiTexCoord3s
typedef void (* fp_glMultiTexCoord3sv)(GLenum, const GLshort*);
extern fp_glMultiTexCoord3sv gladglMultiTexCoord3sv;
#define glMultiTexCoord3sv gladglMultiTexCoord3sv
typedef void (* fp_glMultiTexCoord4d)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glMultiTexCoord4d gladglMultiTexCoord4d;
#define glMultiTexCoord4d gladglMultiTexCoord4d
typedef void (* fp_glMultiTexCoord4dv)(GLenum, const GLdouble*);
extern fp_glMultiTexCoord4dv gladglMultiTexCoord4dv;
#define glMultiTexCoord4dv gladglMultiTexCoord4dv
typedef void (* fp_glMultiTexCoord4f)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glMultiTexCoord4f gladglMultiTexCoord4f;
#define glMultiTexCoord4f gladglMultiTexCoord4f
typedef void (* fp_glMultiTexCoord4fv)(GLenum, const GLfloat*);
extern fp_glMultiTexCoord4fv gladglMultiTexCoord4fv;
#define glMultiTexCoord4fv gladglMultiTexCoord4fv
typedef void (* fp_glMultiTexCoord4i)(GLenum, GLint, GLint, GLint, GLint);
extern fp_glMultiTexCoord4i gladglMultiTexCoord4i;
#define glMultiTexCoord4i gladglMultiTexCoord4i
typedef void (* fp_glMultiTexCoord4iv)(GLenum, const GLint*);
extern fp_glMultiTexCoord4iv gladglMultiTexCoord4iv;
#define glMultiTexCoord4iv gladglMultiTexCoord4iv
typedef void (* fp_glMultiTexCoord4s)(GLenum, GLshort, GLshort, GLshort, GLshort);
extern fp_glMultiTexCoord4s gladglMultiTexCoord4s;
#define glMultiTexCoord4s gladglMultiTexCoord4s
typedef void (* fp_glMultiTexCoord4sv)(GLenum, const GLshort*);
extern fp_glMultiTexCoord4sv gladglMultiTexCoord4sv;
#define glMultiTexCoord4sv gladglMultiTexCoord4sv
typedef void (* fp_glLoadTransposeMatrixf)(const GLfloat*);
extern fp_glLoadTransposeMatrixf gladglLoadTransposeMatrixf;
#define glLoadTransposeMatrixf gladglLoadTransposeMatrixf
typedef void (* fp_glLoadTransposeMatrixd)(const GLdouble*);
extern fp_glLoadTransposeMatrixd gladglLoadTransposeMatrixd;
#define glLoadTransposeMatrixd gladglLoadTransposeMatrixd
typedef void (* fp_glMultTransposeMatrixf)(const GLfloat*);
extern fp_glMultTransposeMatrixf gladglMultTransposeMatrixf;
#define glMultTransposeMatrixf gladglMultTransposeMatrixf
typedef void (* fp_glMultTransposeMatrixd)(const GLdouble*);
extern fp_glMultTransposeMatrixd gladglMultTransposeMatrixd;
#define glMultTransposeMatrixd gladglMultTransposeMatrixd
int GL_VERSION_1_4;
typedef void (* fp_glBlendFuncSeparate)(GLenum, GLenum, GLenum, GLenum);
extern fp_glBlendFuncSeparate gladglBlendFuncSeparate;
#define glBlendFuncSeparate gladglBlendFuncSeparate
typedef void (* fp_glMultiDrawArrays)(GLenum, const GLint*, const GLsizei*, GLsizei);
extern fp_glMultiDrawArrays gladglMultiDrawArrays;
#define glMultiDrawArrays gladglMultiDrawArrays
typedef void (* fp_glMultiDrawElements)(GLenum, const GLsizei*, GLenum, const GLvoid**, GLsizei);
extern fp_glMultiDrawElements gladglMultiDrawElements;
#define glMultiDrawElements gladglMultiDrawElements
typedef void (* fp_glPointParameterf)(GLenum, GLfloat);
extern fp_glPointParameterf gladglPointParameterf;
#define glPointParameterf gladglPointParameterf
typedef void (* fp_glPointParameterfv)(GLenum, const GLfloat*);
extern fp_glPointParameterfv gladglPointParameterfv;
#define glPointParameterfv gladglPointParameterfv
typedef void (* fp_glPointParameteri)(GLenum, GLint);
extern fp_glPointParameteri gladglPointParameteri;
#define glPointParameteri gladglPointParameteri
typedef void (* fp_glPointParameteriv)(GLenum, const GLint*);
extern fp_glPointParameteriv gladglPointParameteriv;
#define glPointParameteriv gladglPointParameteriv
typedef void (* fp_glFogCoordf)(GLfloat);
extern fp_glFogCoordf gladglFogCoordf;
#define glFogCoordf gladglFogCoordf
typedef void (* fp_glFogCoordfv)(const GLfloat*);
extern fp_glFogCoordfv gladglFogCoordfv;
#define glFogCoordfv gladglFogCoordfv
typedef void (* fp_glFogCoordd)(GLdouble);
extern fp_glFogCoordd gladglFogCoordd;
#define glFogCoordd gladglFogCoordd
typedef void (* fp_glFogCoorddv)(const GLdouble*);
extern fp_glFogCoorddv gladglFogCoorddv;
#define glFogCoorddv gladglFogCoorddv
typedef void (* fp_glFogCoordPointer)(GLenum, GLsizei, const GLvoid*);
extern fp_glFogCoordPointer gladglFogCoordPointer;
#define glFogCoordPointer gladglFogCoordPointer
typedef void (* fp_glSecondaryColor3b)(GLbyte, GLbyte, GLbyte);
extern fp_glSecondaryColor3b gladglSecondaryColor3b;
#define glSecondaryColor3b gladglSecondaryColor3b
typedef void (* fp_glSecondaryColor3bv)(const GLbyte*);
extern fp_glSecondaryColor3bv gladglSecondaryColor3bv;
#define glSecondaryColor3bv gladglSecondaryColor3bv
typedef void (* fp_glSecondaryColor3d)(GLdouble, GLdouble, GLdouble);
extern fp_glSecondaryColor3d gladglSecondaryColor3d;
#define glSecondaryColor3d gladglSecondaryColor3d
typedef void (* fp_glSecondaryColor3dv)(const GLdouble*);
extern fp_glSecondaryColor3dv gladglSecondaryColor3dv;
#define glSecondaryColor3dv gladglSecondaryColor3dv
typedef void (* fp_glSecondaryColor3f)(GLfloat, GLfloat, GLfloat);
extern fp_glSecondaryColor3f gladglSecondaryColor3f;
#define glSecondaryColor3f gladglSecondaryColor3f
typedef void (* fp_glSecondaryColor3fv)(const GLfloat*);
extern fp_glSecondaryColor3fv gladglSecondaryColor3fv;
#define glSecondaryColor3fv gladglSecondaryColor3fv
typedef void (* fp_glSecondaryColor3i)(GLint, GLint, GLint);
extern fp_glSecondaryColor3i gladglSecondaryColor3i;
#define glSecondaryColor3i gladglSecondaryColor3i
typedef void (* fp_glSecondaryColor3iv)(const GLint*);
extern fp_glSecondaryColor3iv gladglSecondaryColor3iv;
#define glSecondaryColor3iv gladglSecondaryColor3iv
typedef void (* fp_glSecondaryColor3s)(GLshort, GLshort, GLshort);
extern fp_glSecondaryColor3s gladglSecondaryColor3s;
#define glSecondaryColor3s gladglSecondaryColor3s
typedef void (* fp_glSecondaryColor3sv)(const GLshort*);
extern fp_glSecondaryColor3sv gladglSecondaryColor3sv;
#define glSecondaryColor3sv gladglSecondaryColor3sv
typedef void (* fp_glSecondaryColor3ub)(GLubyte, GLubyte, GLubyte);
extern fp_glSecondaryColor3ub gladglSecondaryColor3ub;
#define glSecondaryColor3ub gladglSecondaryColor3ub
typedef void (* fp_glSecondaryColor3ubv)(const GLubyte*);
extern fp_glSecondaryColor3ubv gladglSecondaryColor3ubv;
#define glSecondaryColor3ubv gladglSecondaryColor3ubv
typedef void (* fp_glSecondaryColor3ui)(GLuint, GLuint, GLuint);
extern fp_glSecondaryColor3ui gladglSecondaryColor3ui;
#define glSecondaryColor3ui gladglSecondaryColor3ui
typedef void (* fp_glSecondaryColor3uiv)(const GLuint*);
extern fp_glSecondaryColor3uiv gladglSecondaryColor3uiv;
#define glSecondaryColor3uiv gladglSecondaryColor3uiv
typedef void (* fp_glSecondaryColor3us)(GLushort, GLushort, GLushort);
extern fp_glSecondaryColor3us gladglSecondaryColor3us;
#define glSecondaryColor3us gladglSecondaryColor3us
typedef void (* fp_glSecondaryColor3usv)(const GLushort*);
extern fp_glSecondaryColor3usv gladglSecondaryColor3usv;
#define glSecondaryColor3usv gladglSecondaryColor3usv
typedef void (* fp_glSecondaryColorPointer)(GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glSecondaryColorPointer gladglSecondaryColorPointer;
#define glSecondaryColorPointer gladglSecondaryColorPointer
typedef void (* fp_glWindowPos2d)(GLdouble, GLdouble);
extern fp_glWindowPos2d gladglWindowPos2d;
#define glWindowPos2d gladglWindowPos2d
typedef void (* fp_glWindowPos2dv)(const GLdouble*);
extern fp_glWindowPos2dv gladglWindowPos2dv;
#define glWindowPos2dv gladglWindowPos2dv
typedef void (* fp_glWindowPos2f)(GLfloat, GLfloat);
extern fp_glWindowPos2f gladglWindowPos2f;
#define glWindowPos2f gladglWindowPos2f
typedef void (* fp_glWindowPos2fv)(const GLfloat*);
extern fp_glWindowPos2fv gladglWindowPos2fv;
#define glWindowPos2fv gladglWindowPos2fv
typedef void (* fp_glWindowPos2i)(GLint, GLint);
extern fp_glWindowPos2i gladglWindowPos2i;
#define glWindowPos2i gladglWindowPos2i
typedef void (* fp_glWindowPos2iv)(const GLint*);
extern fp_glWindowPos2iv gladglWindowPos2iv;
#define glWindowPos2iv gladglWindowPos2iv
typedef void (* fp_glWindowPos2s)(GLshort, GLshort);
extern fp_glWindowPos2s gladglWindowPos2s;
#define glWindowPos2s gladglWindowPos2s
typedef void (* fp_glWindowPos2sv)(const GLshort*);
extern fp_glWindowPos2sv gladglWindowPos2sv;
#define glWindowPos2sv gladglWindowPos2sv
typedef void (* fp_glWindowPos3d)(GLdouble, GLdouble, GLdouble);
extern fp_glWindowPos3d gladglWindowPos3d;
#define glWindowPos3d gladglWindowPos3d
typedef void (* fp_glWindowPos3dv)(const GLdouble*);
extern fp_glWindowPos3dv gladglWindowPos3dv;
#define glWindowPos3dv gladglWindowPos3dv
typedef void (* fp_glWindowPos3f)(GLfloat, GLfloat, GLfloat);
extern fp_glWindowPos3f gladglWindowPos3f;
#define glWindowPos3f gladglWindowPos3f
typedef void (* fp_glWindowPos3fv)(const GLfloat*);
extern fp_glWindowPos3fv gladglWindowPos3fv;
#define glWindowPos3fv gladglWindowPos3fv
typedef void (* fp_glWindowPos3i)(GLint, GLint, GLint);
extern fp_glWindowPos3i gladglWindowPos3i;
#define glWindowPos3i gladglWindowPos3i
typedef void (* fp_glWindowPos3iv)(const GLint*);
extern fp_glWindowPos3iv gladglWindowPos3iv;
#define glWindowPos3iv gladglWindowPos3iv
typedef void (* fp_glWindowPos3s)(GLshort, GLshort, GLshort);
extern fp_glWindowPos3s gladglWindowPos3s;
#define glWindowPos3s gladglWindowPos3s
typedef void (* fp_glWindowPos3sv)(const GLshort*);
extern fp_glWindowPos3sv gladglWindowPos3sv;
#define glWindowPos3sv gladglWindowPos3sv
int GL_VERSION_1_5;
typedef void (* fp_glGenQueries)(GLsizei, GLuint*);
extern fp_glGenQueries gladglGenQueries;
#define glGenQueries gladglGenQueries
typedef void (* fp_glDeleteQueries)(GLsizei, const GLuint*);
extern fp_glDeleteQueries gladglDeleteQueries;
#define glDeleteQueries gladglDeleteQueries
typedef GLboolean (* fp_glIsQuery)(GLuint);
extern fp_glIsQuery gladglIsQuery;
#define glIsQuery gladglIsQuery
typedef void (* fp_glBeginQuery)(GLenum, GLuint);
extern fp_glBeginQuery gladglBeginQuery;
#define glBeginQuery gladglBeginQuery
typedef void (* fp_glEndQuery)(GLenum);
extern fp_glEndQuery gladglEndQuery;
#define glEndQuery gladglEndQuery
typedef void (* fp_glGetQueryiv)(GLenum, GLenum, GLint*);
extern fp_glGetQueryiv gladglGetQueryiv;
#define glGetQueryiv gladglGetQueryiv
typedef void (* fp_glGetQueryObjectiv)(GLuint, GLenum, GLint*);
extern fp_glGetQueryObjectiv gladglGetQueryObjectiv;
#define glGetQueryObjectiv gladglGetQueryObjectiv
typedef void (* fp_glGetQueryObjectuiv)(GLuint, GLenum, GLuint*);
extern fp_glGetQueryObjectuiv gladglGetQueryObjectuiv;
#define glGetQueryObjectuiv gladglGetQueryObjectuiv
typedef void (* fp_glBindBuffer)(GLenum, GLuint);
extern fp_glBindBuffer gladglBindBuffer;
#define glBindBuffer gladglBindBuffer
typedef void (* fp_glDeleteBuffers)(GLsizei, const GLuint*);
extern fp_glDeleteBuffers gladglDeleteBuffers;
#define glDeleteBuffers gladglDeleteBuffers
typedef void (* fp_glGenBuffers)(GLsizei, GLuint*);
extern fp_glGenBuffers gladglGenBuffers;
#define glGenBuffers gladglGenBuffers
typedef GLboolean (* fp_glIsBuffer)(GLuint);
extern fp_glIsBuffer gladglIsBuffer;
#define glIsBuffer gladglIsBuffer
typedef void (* fp_glBufferData)(GLenum, GLsizeiptr, const GLvoid*, GLenum);
extern fp_glBufferData gladglBufferData;
#define glBufferData gladglBufferData
typedef void (* fp_glBufferSubData)(GLenum, GLintptr, GLsizeiptr, const GLvoid*);
extern fp_glBufferSubData gladglBufferSubData;
#define glBufferSubData gladglBufferSubData
typedef void (* fp_glGetBufferSubData)(GLenum, GLintptr, GLsizeiptr, GLvoid*);
extern fp_glGetBufferSubData gladglGetBufferSubData;
#define glGetBufferSubData gladglGetBufferSubData
typedef void* (* fp_glMapBuffer)(GLenum, GLenum);
extern fp_glMapBuffer gladglMapBuffer;
#define glMapBuffer gladglMapBuffer
typedef GLboolean (* fp_glUnmapBuffer)(GLenum);
extern fp_glUnmapBuffer gladglUnmapBuffer;
#define glUnmapBuffer gladglUnmapBuffer
typedef void (* fp_glGetBufferParameteriv)(GLenum, GLenum, GLint*);
extern fp_glGetBufferParameteriv gladglGetBufferParameteriv;
#define glGetBufferParameteriv gladglGetBufferParameteriv
typedef void (* fp_glGetBufferPointerv)(GLenum, GLenum, GLvoid**);
extern fp_glGetBufferPointerv gladglGetBufferPointerv;
#define glGetBufferPointerv gladglGetBufferPointerv
int GL_VERSION_2_0;
typedef void (* fp_glBlendEquationSeparate)(GLenum, GLenum);
extern fp_glBlendEquationSeparate gladglBlendEquationSeparate;
#define glBlendEquationSeparate gladglBlendEquationSeparate
typedef void (* fp_glDrawBuffers)(GLsizei, const GLenum*);
extern fp_glDrawBuffers gladglDrawBuffers;
#define glDrawBuffers gladglDrawBuffers
typedef void (* fp_glStencilOpSeparate)(GLenum, GLenum, GLenum, GLenum);
extern fp_glStencilOpSeparate gladglStencilOpSeparate;
#define glStencilOpSeparate gladglStencilOpSeparate
typedef void (* fp_glStencilFuncSeparate)(GLenum, GLenum, GLint, GLuint);
extern fp_glStencilFuncSeparate gladglStencilFuncSeparate;
#define glStencilFuncSeparate gladglStencilFuncSeparate
typedef void (* fp_glStencilMaskSeparate)(GLenum, GLuint);
extern fp_glStencilMaskSeparate gladglStencilMaskSeparate;
#define glStencilMaskSeparate gladglStencilMaskSeparate
typedef void (* fp_glAttachShader)(GLuint, GLuint);
extern fp_glAttachShader gladglAttachShader;
#define glAttachShader gladglAttachShader
typedef void (* fp_glBindAttribLocation)(GLuint, GLuint, const GLchar*);
extern fp_glBindAttribLocation gladglBindAttribLocation;
#define glBindAttribLocation gladglBindAttribLocation
typedef void (* fp_glCompileShader)(GLuint);
extern fp_glCompileShader gladglCompileShader;
#define glCompileShader gladglCompileShader
typedef GLuint (* fp_glCreateProgram)();
extern fp_glCreateProgram gladglCreateProgram;
#define glCreateProgram gladglCreateProgram
typedef GLuint (* fp_glCreateShader)(GLenum);
extern fp_glCreateShader gladglCreateShader;
#define glCreateShader gladglCreateShader
typedef void (* fp_glDeleteProgram)(GLuint);
extern fp_glDeleteProgram gladglDeleteProgram;
#define glDeleteProgram gladglDeleteProgram
typedef void (* fp_glDeleteShader)(GLuint);
extern fp_glDeleteShader gladglDeleteShader;
#define glDeleteShader gladglDeleteShader
typedef void (* fp_glDetachShader)(GLuint, GLuint);
extern fp_glDetachShader gladglDetachShader;
#define glDetachShader gladglDetachShader
typedef void (* fp_glDisableVertexAttribArray)(GLuint);
extern fp_glDisableVertexAttribArray gladglDisableVertexAttribArray;
#define glDisableVertexAttribArray gladglDisableVertexAttribArray
typedef void (* fp_glEnableVertexAttribArray)(GLuint);
extern fp_glEnableVertexAttribArray gladglEnableVertexAttribArray;
#define glEnableVertexAttribArray gladglEnableVertexAttribArray
typedef void (* fp_glGetActiveAttrib)(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
extern fp_glGetActiveAttrib gladglGetActiveAttrib;
#define glGetActiveAttrib gladglGetActiveAttrib
typedef void (* fp_glGetActiveUniform)(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
extern fp_glGetActiveUniform gladglGetActiveUniform;
#define glGetActiveUniform gladglGetActiveUniform
typedef void (* fp_glGetAttachedShaders)(GLuint, GLsizei, GLsizei*, GLuint*);
extern fp_glGetAttachedShaders gladglGetAttachedShaders;
#define glGetAttachedShaders gladglGetAttachedShaders
typedef GLint (* fp_glGetAttribLocation)(GLuint, const GLchar*);
extern fp_glGetAttribLocation gladglGetAttribLocation;
#define glGetAttribLocation gladglGetAttribLocation
typedef void (* fp_glGetProgramiv)(GLuint, GLenum, GLint*);
extern fp_glGetProgramiv gladglGetProgramiv;
#define glGetProgramiv gladglGetProgramiv
typedef void (* fp_glGetProgramInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetProgramInfoLog gladglGetProgramInfoLog;
#define glGetProgramInfoLog gladglGetProgramInfoLog
typedef void (* fp_glGetShaderiv)(GLuint, GLenum, GLint*);
extern fp_glGetShaderiv gladglGetShaderiv;
#define glGetShaderiv gladglGetShaderiv
typedef void (* fp_glGetShaderInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetShaderInfoLog gladglGetShaderInfoLog;
#define glGetShaderInfoLog gladglGetShaderInfoLog
typedef void (* fp_glGetShaderSource)(GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetShaderSource gladglGetShaderSource;
#define glGetShaderSource gladglGetShaderSource
typedef GLint (* fp_glGetUniformLocation)(GLuint, const GLchar*);
extern fp_glGetUniformLocation gladglGetUniformLocation;
#define glGetUniformLocation gladglGetUniformLocation
typedef void (* fp_glGetUniformfv)(GLuint, GLint, GLfloat*);
extern fp_glGetUniformfv gladglGetUniformfv;
#define glGetUniformfv gladglGetUniformfv
typedef void (* fp_glGetUniformiv)(GLuint, GLint, GLint*);
extern fp_glGetUniformiv gladglGetUniformiv;
#define glGetUniformiv gladglGetUniformiv
typedef void (* fp_glGetVertexAttribdv)(GLuint, GLenum, GLdouble*);
extern fp_glGetVertexAttribdv gladglGetVertexAttribdv;
#define glGetVertexAttribdv gladglGetVertexAttribdv
typedef void (* fp_glGetVertexAttribfv)(GLuint, GLenum, GLfloat*);
extern fp_glGetVertexAttribfv gladglGetVertexAttribfv;
#define glGetVertexAttribfv gladglGetVertexAttribfv
typedef void (* fp_glGetVertexAttribiv)(GLuint, GLenum, GLint*);
extern fp_glGetVertexAttribiv gladglGetVertexAttribiv;
#define glGetVertexAttribiv gladglGetVertexAttribiv
typedef void (* fp_glGetVertexAttribPointerv)(GLuint, GLenum, GLvoid**);
extern fp_glGetVertexAttribPointerv gladglGetVertexAttribPointerv;
#define glGetVertexAttribPointerv gladglGetVertexAttribPointerv
typedef GLboolean (* fp_glIsProgram)(GLuint);
extern fp_glIsProgram gladglIsProgram;
#define glIsProgram gladglIsProgram
typedef GLboolean (* fp_glIsShader)(GLuint);
extern fp_glIsShader gladglIsShader;
#define glIsShader gladglIsShader
typedef void (* fp_glLinkProgram)(GLuint);
extern fp_glLinkProgram gladglLinkProgram;
#define glLinkProgram gladglLinkProgram
typedef void (* fp_glShaderSource)(GLuint, GLsizei, const GLchar**, const GLint*);
extern fp_glShaderSource gladglShaderSource;
#define glShaderSource gladglShaderSource
typedef void (* fp_glUseProgram)(GLuint);
extern fp_glUseProgram gladglUseProgram;
#define glUseProgram gladglUseProgram
typedef void (* fp_glUniform1f)(GLint, GLfloat);
extern fp_glUniform1f gladglUniform1f;
#define glUniform1f gladglUniform1f
typedef void (* fp_glUniform2f)(GLint, GLfloat, GLfloat);
extern fp_glUniform2f gladglUniform2f;
#define glUniform2f gladglUniform2f
typedef void (* fp_glUniform3f)(GLint, GLfloat, GLfloat, GLfloat);
extern fp_glUniform3f gladglUniform3f;
#define glUniform3f gladglUniform3f
typedef void (* fp_glUniform4f)(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glUniform4f gladglUniform4f;
#define glUniform4f gladglUniform4f
typedef void (* fp_glUniform1i)(GLint, GLint);
extern fp_glUniform1i gladglUniform1i;
#define glUniform1i gladglUniform1i
typedef void (* fp_glUniform2i)(GLint, GLint, GLint);
extern fp_glUniform2i gladglUniform2i;
#define glUniform2i gladglUniform2i
typedef void (* fp_glUniform3i)(GLint, GLint, GLint, GLint);
extern fp_glUniform3i gladglUniform3i;
#define glUniform3i gladglUniform3i
typedef void (* fp_glUniform4i)(GLint, GLint, GLint, GLint, GLint);
extern fp_glUniform4i gladglUniform4i;
#define glUniform4i gladglUniform4i
typedef void (* fp_glUniform1fv)(GLint, GLsizei, const GLfloat*);
extern fp_glUniform1fv gladglUniform1fv;
#define glUniform1fv gladglUniform1fv
typedef void (* fp_glUniform2fv)(GLint, GLsizei, const GLfloat*);
extern fp_glUniform2fv gladglUniform2fv;
#define glUniform2fv gladglUniform2fv
typedef void (* fp_glUniform3fv)(GLint, GLsizei, const GLfloat*);
extern fp_glUniform3fv gladglUniform3fv;
#define glUniform3fv gladglUniform3fv
typedef void (* fp_glUniform4fv)(GLint, GLsizei, const GLfloat*);
extern fp_glUniform4fv gladglUniform4fv;
#define glUniform4fv gladglUniform4fv
typedef void (* fp_glUniform1iv)(GLint, GLsizei, const GLint*);
extern fp_glUniform1iv gladglUniform1iv;
#define glUniform1iv gladglUniform1iv
typedef void (* fp_glUniform2iv)(GLint, GLsizei, const GLint*);
extern fp_glUniform2iv gladglUniform2iv;
#define glUniform2iv gladglUniform2iv
typedef void (* fp_glUniform3iv)(GLint, GLsizei, const GLint*);
extern fp_glUniform3iv gladglUniform3iv;
#define glUniform3iv gladglUniform3iv
typedef void (* fp_glUniform4iv)(GLint, GLsizei, const GLint*);
extern fp_glUniform4iv gladglUniform4iv;
#define glUniform4iv gladglUniform4iv
typedef void (* fp_glUniformMatrix2fv)(GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glUniformMatrix2fv gladglUniformMatrix2fv;
#define glUniformMatrix2fv gladglUniformMatrix2fv
typedef void (* fp_glUniformMatrix3fv)(GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glUniformMatrix3fv gladglUniformMatrix3fv;
#define glUniformMatrix3fv gladglUniformMatrix3fv
typedef void (* fp_glUniformMatrix4fv)(GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glUniformMatrix4fv gladglUniformMatrix4fv;
#define glUniformMatrix4fv gladglUniformMatrix4fv
typedef void (* fp_glValidateProgram)(GLuint);
extern fp_glValidateProgram gladglValidateProgram;
#define glValidateProgram gladglValidateProgram
typedef void (* fp_glVertexAttrib1d)(GLuint, GLdouble);
extern fp_glVertexAttrib1d gladglVertexAttrib1d;
#define glVertexAttrib1d gladglVertexAttrib1d
typedef void (* fp_glVertexAttrib1dv)(GLuint, const GLdouble*);
extern fp_glVertexAttrib1dv gladglVertexAttrib1dv;
#define glVertexAttrib1dv gladglVertexAttrib1dv
typedef void (* fp_glVertexAttrib1f)(GLuint, GLfloat);
extern fp_glVertexAttrib1f gladglVertexAttrib1f;
#define glVertexAttrib1f gladglVertexAttrib1f
typedef void (* fp_glVertexAttrib1fv)(GLuint, const GLfloat*);
extern fp_glVertexAttrib1fv gladglVertexAttrib1fv;
#define glVertexAttrib1fv gladglVertexAttrib1fv
typedef void (* fp_glVertexAttrib1s)(GLuint, GLshort);
extern fp_glVertexAttrib1s gladglVertexAttrib1s;
#define glVertexAttrib1s gladglVertexAttrib1s
typedef void (* fp_glVertexAttrib1sv)(GLuint, const GLshort*);
extern fp_glVertexAttrib1sv gladglVertexAttrib1sv;
#define glVertexAttrib1sv gladglVertexAttrib1sv
typedef void (* fp_glVertexAttrib2d)(GLuint, GLdouble, GLdouble);
extern fp_glVertexAttrib2d gladglVertexAttrib2d;
#define glVertexAttrib2d gladglVertexAttrib2d
typedef void (* fp_glVertexAttrib2dv)(GLuint, const GLdouble*);
extern fp_glVertexAttrib2dv gladglVertexAttrib2dv;
#define glVertexAttrib2dv gladglVertexAttrib2dv
typedef void (* fp_glVertexAttrib2f)(GLuint, GLfloat, GLfloat);
extern fp_glVertexAttrib2f gladglVertexAttrib2f;
#define glVertexAttrib2f gladglVertexAttrib2f
typedef void (* fp_glVertexAttrib2fv)(GLuint, const GLfloat*);
extern fp_glVertexAttrib2fv gladglVertexAttrib2fv;
#define glVertexAttrib2fv gladglVertexAttrib2fv
typedef void (* fp_glVertexAttrib2s)(GLuint, GLshort, GLshort);
extern fp_glVertexAttrib2s gladglVertexAttrib2s;
#define glVertexAttrib2s gladglVertexAttrib2s
typedef void (* fp_glVertexAttrib2sv)(GLuint, const GLshort*);
extern fp_glVertexAttrib2sv gladglVertexAttrib2sv;
#define glVertexAttrib2sv gladglVertexAttrib2sv
typedef void (* fp_glVertexAttrib3d)(GLuint, GLdouble, GLdouble, GLdouble);
extern fp_glVertexAttrib3d gladglVertexAttrib3d;
#define glVertexAttrib3d gladglVertexAttrib3d
typedef void (* fp_glVertexAttrib3dv)(GLuint, const GLdouble*);
extern fp_glVertexAttrib3dv gladglVertexAttrib3dv;
#define glVertexAttrib3dv gladglVertexAttrib3dv
typedef void (* fp_glVertexAttrib3f)(GLuint, GLfloat, GLfloat, GLfloat);
extern fp_glVertexAttrib3f gladglVertexAttrib3f;
#define glVertexAttrib3f gladglVertexAttrib3f
typedef void (* fp_glVertexAttrib3fv)(GLuint, const GLfloat*);
extern fp_glVertexAttrib3fv gladglVertexAttrib3fv;
#define glVertexAttrib3fv gladglVertexAttrib3fv
typedef void (* fp_glVertexAttrib3s)(GLuint, GLshort, GLshort, GLshort);
extern fp_glVertexAttrib3s gladglVertexAttrib3s;
#define glVertexAttrib3s gladglVertexAttrib3s
typedef void (* fp_glVertexAttrib3sv)(GLuint, const GLshort*);
extern fp_glVertexAttrib3sv gladglVertexAttrib3sv;
#define glVertexAttrib3sv gladglVertexAttrib3sv
typedef void (* fp_glVertexAttrib4Nbv)(GLuint, const GLbyte*);
extern fp_glVertexAttrib4Nbv gladglVertexAttrib4Nbv;
#define glVertexAttrib4Nbv gladglVertexAttrib4Nbv
typedef void (* fp_glVertexAttrib4Niv)(GLuint, const GLint*);
extern fp_glVertexAttrib4Niv gladglVertexAttrib4Niv;
#define glVertexAttrib4Niv gladglVertexAttrib4Niv
typedef void (* fp_glVertexAttrib4Nsv)(GLuint, const GLshort*);
extern fp_glVertexAttrib4Nsv gladglVertexAttrib4Nsv;
#define glVertexAttrib4Nsv gladglVertexAttrib4Nsv
typedef void (* fp_glVertexAttrib4Nub)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
extern fp_glVertexAttrib4Nub gladglVertexAttrib4Nub;
#define glVertexAttrib4Nub gladglVertexAttrib4Nub
typedef void (* fp_glVertexAttrib4Nubv)(GLuint, const GLubyte*);
extern fp_glVertexAttrib4Nubv gladglVertexAttrib4Nubv;
#define glVertexAttrib4Nubv gladglVertexAttrib4Nubv
typedef void (* fp_glVertexAttrib4Nuiv)(GLuint, const GLuint*);
extern fp_glVertexAttrib4Nuiv gladglVertexAttrib4Nuiv;
#define glVertexAttrib4Nuiv gladglVertexAttrib4Nuiv
typedef void (* fp_glVertexAttrib4Nusv)(GLuint, const GLushort*);
extern fp_glVertexAttrib4Nusv gladglVertexAttrib4Nusv;
#define glVertexAttrib4Nusv gladglVertexAttrib4Nusv
typedef void (* fp_glVertexAttrib4bv)(GLuint, const GLbyte*);
extern fp_glVertexAttrib4bv gladglVertexAttrib4bv;
#define glVertexAttrib4bv gladglVertexAttrib4bv
typedef void (* fp_glVertexAttrib4d)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glVertexAttrib4d gladglVertexAttrib4d;
#define glVertexAttrib4d gladglVertexAttrib4d
typedef void (* fp_glVertexAttrib4dv)(GLuint, const GLdouble*);
extern fp_glVertexAttrib4dv gladglVertexAttrib4dv;
#define glVertexAttrib4dv gladglVertexAttrib4dv
typedef void (* fp_glVertexAttrib4f)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glVertexAttrib4f gladglVertexAttrib4f;
#define glVertexAttrib4f gladglVertexAttrib4f
typedef void (* fp_glVertexAttrib4fv)(GLuint, const GLfloat*);
extern fp_glVertexAttrib4fv gladglVertexAttrib4fv;
#define glVertexAttrib4fv gladglVertexAttrib4fv
typedef void (* fp_glVertexAttrib4iv)(GLuint, const GLint*);
extern fp_glVertexAttrib4iv gladglVertexAttrib4iv;
#define glVertexAttrib4iv gladglVertexAttrib4iv
typedef void (* fp_glVertexAttrib4s)(GLuint, GLshort, GLshort, GLshort, GLshort);
extern fp_glVertexAttrib4s gladglVertexAttrib4s;
#define glVertexAttrib4s gladglVertexAttrib4s
typedef void (* fp_glVertexAttrib4sv)(GLuint, const GLshort*);
extern fp_glVertexAttrib4sv gladglVertexAttrib4sv;
#define glVertexAttrib4sv gladglVertexAttrib4sv
typedef void (* fp_glVertexAttrib4ubv)(GLuint, const GLubyte*);
extern fp_glVertexAttrib4ubv gladglVertexAttrib4ubv;
#define glVertexAttrib4ubv gladglVertexAttrib4ubv
typedef void (* fp_glVertexAttrib4uiv)(GLuint, const GLuint*);
extern fp_glVertexAttrib4uiv gladglVertexAttrib4uiv;
#define glVertexAttrib4uiv gladglVertexAttrib4uiv
typedef void (* fp_glVertexAttrib4usv)(GLuint, const GLushort*);
extern fp_glVertexAttrib4usv gladglVertexAttrib4usv;
#define glVertexAttrib4usv gladglVertexAttrib4usv
typedef void (* fp_glVertexAttribPointer)(GLuint, GLint, GLenum, GLboolean, GLsizei, const GLvoid*);
extern fp_glVertexAttribPointer gladglVertexAttribPointer;
#define glVertexAttribPointer gladglVertexAttribPointer
int GL_VERSION_2_1;
typedef void (* fp_glUniformMatrix2x3fv)(GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glUniformMatrix2x3fv gladglUniformMatrix2x3fv;
#define glUniformMatrix2x3fv gladglUniformMatrix2x3fv
typedef void (* fp_glUniformMatrix3x2fv)(GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glUniformMatrix3x2fv gladglUniformMatrix3x2fv;
#define glUniformMatrix3x2fv gladglUniformMatrix3x2fv
typedef void (* fp_glUniformMatrix2x4fv)(GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glUniformMatrix2x4fv gladglUniformMatrix2x4fv;
#define glUniformMatrix2x4fv gladglUniformMatrix2x4fv
typedef void (* fp_glUniformMatrix4x2fv)(GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glUniformMatrix4x2fv gladglUniformMatrix4x2fv;
#define glUniformMatrix4x2fv gladglUniformMatrix4x2fv
typedef void (* fp_glUniformMatrix3x4fv)(GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glUniformMatrix3x4fv gladglUniformMatrix3x4fv;
#define glUniformMatrix3x4fv gladglUniformMatrix3x4fv
typedef void (* fp_glUniformMatrix4x3fv)(GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glUniformMatrix4x3fv gladglUniformMatrix4x3fv;
#define glUniformMatrix4x3fv gladglUniformMatrix4x3fv
int GL_VERSION_3_0;
typedef void (* fp_glColorMaski)(GLuint, GLboolean, GLboolean, GLboolean, GLboolean);
extern fp_glColorMaski gladglColorMaski;
#define glColorMaski gladglColorMaski
typedef void (* fp_glGetBooleani_v)(GLenum, GLuint, GLboolean*);
extern fp_glGetBooleani_v gladglGetBooleani_v;
#define glGetBooleani_v gladglGetBooleani_v
typedef void (* fp_glGetIntegeri_v)(GLenum, GLuint, GLint*);
extern fp_glGetIntegeri_v gladglGetIntegeri_v;
#define glGetIntegeri_v gladglGetIntegeri_v
typedef void (* fp_glEnablei)(GLenum, GLuint);
extern fp_glEnablei gladglEnablei;
#define glEnablei gladglEnablei
typedef void (* fp_glDisablei)(GLenum, GLuint);
extern fp_glDisablei gladglDisablei;
#define glDisablei gladglDisablei
typedef GLboolean (* fp_glIsEnabledi)(GLenum, GLuint);
extern fp_glIsEnabledi gladglIsEnabledi;
#define glIsEnabledi gladglIsEnabledi
typedef void (* fp_glBeginTransformFeedback)(GLenum);
extern fp_glBeginTransformFeedback gladglBeginTransformFeedback;
#define glBeginTransformFeedback gladglBeginTransformFeedback
typedef void (* fp_glEndTransformFeedback)();
extern fp_glEndTransformFeedback gladglEndTransformFeedback;
#define glEndTransformFeedback gladglEndTransformFeedback
typedef void (* fp_glBindBufferRange)(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr);
extern fp_glBindBufferRange gladglBindBufferRange;
#define glBindBufferRange gladglBindBufferRange
typedef void (* fp_glBindBufferBase)(GLenum, GLuint, GLuint);
extern fp_glBindBufferBase gladglBindBufferBase;
#define glBindBufferBase gladglBindBufferBase
typedef void (* fp_glTransformFeedbackVaryings)(GLuint, GLsizei, const GLchar**, GLenum);
extern fp_glTransformFeedbackVaryings gladglTransformFeedbackVaryings;
#define glTransformFeedbackVaryings gladglTransformFeedbackVaryings
typedef void (* fp_glGetTransformFeedbackVarying)(GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*);
extern fp_glGetTransformFeedbackVarying gladglGetTransformFeedbackVarying;
#define glGetTransformFeedbackVarying gladglGetTransformFeedbackVarying
typedef void (* fp_glClampColor)(GLenum, GLenum);
extern fp_glClampColor gladglClampColor;
#define glClampColor gladglClampColor
typedef void (* fp_glBeginConditionalRender)(GLuint, GLenum);
extern fp_glBeginConditionalRender gladglBeginConditionalRender;
#define glBeginConditionalRender gladglBeginConditionalRender
typedef void (* fp_glEndConditionalRender)();
extern fp_glEndConditionalRender gladglEndConditionalRender;
#define glEndConditionalRender gladglEndConditionalRender
typedef void (* fp_glVertexAttribIPointer)(GLuint, GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glVertexAttribIPointer gladglVertexAttribIPointer;
#define glVertexAttribIPointer gladglVertexAttribIPointer
typedef void (* fp_glGetVertexAttribIiv)(GLuint, GLenum, GLint*);
extern fp_glGetVertexAttribIiv gladglGetVertexAttribIiv;
#define glGetVertexAttribIiv gladglGetVertexAttribIiv
typedef void (* fp_glGetVertexAttribIuiv)(GLuint, GLenum, GLuint*);
extern fp_glGetVertexAttribIuiv gladglGetVertexAttribIuiv;
#define glGetVertexAttribIuiv gladglGetVertexAttribIuiv
typedef void (* fp_glVertexAttribI1i)(GLuint, GLint);
extern fp_glVertexAttribI1i gladglVertexAttribI1i;
#define glVertexAttribI1i gladglVertexAttribI1i
typedef void (* fp_glVertexAttribI2i)(GLuint, GLint, GLint);
extern fp_glVertexAttribI2i gladglVertexAttribI2i;
#define glVertexAttribI2i gladglVertexAttribI2i
typedef void (* fp_glVertexAttribI3i)(GLuint, GLint, GLint, GLint);
extern fp_glVertexAttribI3i gladglVertexAttribI3i;
#define glVertexAttribI3i gladglVertexAttribI3i
typedef void (* fp_glVertexAttribI4i)(GLuint, GLint, GLint, GLint, GLint);
extern fp_glVertexAttribI4i gladglVertexAttribI4i;
#define glVertexAttribI4i gladglVertexAttribI4i
typedef void (* fp_glVertexAttribI1ui)(GLuint, GLuint);
extern fp_glVertexAttribI1ui gladglVertexAttribI1ui;
#define glVertexAttribI1ui gladglVertexAttribI1ui
typedef void (* fp_glVertexAttribI2ui)(GLuint, GLuint, GLuint);
extern fp_glVertexAttribI2ui gladglVertexAttribI2ui;
#define glVertexAttribI2ui gladglVertexAttribI2ui
typedef void (* fp_glVertexAttribI3ui)(GLuint, GLuint, GLuint, GLuint);
extern fp_glVertexAttribI3ui gladglVertexAttribI3ui;
#define glVertexAttribI3ui gladglVertexAttribI3ui
typedef void (* fp_glVertexAttribI4ui)(GLuint, GLuint, GLuint, GLuint, GLuint);
extern fp_glVertexAttribI4ui gladglVertexAttribI4ui;
#define glVertexAttribI4ui gladglVertexAttribI4ui
typedef void (* fp_glVertexAttribI1iv)(GLuint, const GLint*);
extern fp_glVertexAttribI1iv gladglVertexAttribI1iv;
#define glVertexAttribI1iv gladglVertexAttribI1iv
typedef void (* fp_glVertexAttribI2iv)(GLuint, const GLint*);
extern fp_glVertexAttribI2iv gladglVertexAttribI2iv;
#define glVertexAttribI2iv gladglVertexAttribI2iv
typedef void (* fp_glVertexAttribI3iv)(GLuint, const GLint*);
extern fp_glVertexAttribI3iv gladglVertexAttribI3iv;
#define glVertexAttribI3iv gladglVertexAttribI3iv
typedef void (* fp_glVertexAttribI4iv)(GLuint, const GLint*);
extern fp_glVertexAttribI4iv gladglVertexAttribI4iv;
#define glVertexAttribI4iv gladglVertexAttribI4iv
typedef void (* fp_glVertexAttribI1uiv)(GLuint, const GLuint*);
extern fp_glVertexAttribI1uiv gladglVertexAttribI1uiv;
#define glVertexAttribI1uiv gladglVertexAttribI1uiv
typedef void (* fp_glVertexAttribI2uiv)(GLuint, const GLuint*);
extern fp_glVertexAttribI2uiv gladglVertexAttribI2uiv;
#define glVertexAttribI2uiv gladglVertexAttribI2uiv
typedef void (* fp_glVertexAttribI3uiv)(GLuint, const GLuint*);
extern fp_glVertexAttribI3uiv gladglVertexAttribI3uiv;
#define glVertexAttribI3uiv gladglVertexAttribI3uiv
typedef void (* fp_glVertexAttribI4uiv)(GLuint, const GLuint*);
extern fp_glVertexAttribI4uiv gladglVertexAttribI4uiv;
#define glVertexAttribI4uiv gladglVertexAttribI4uiv
typedef void (* fp_glVertexAttribI4bv)(GLuint, const GLbyte*);
extern fp_glVertexAttribI4bv gladglVertexAttribI4bv;
#define glVertexAttribI4bv gladglVertexAttribI4bv
typedef void (* fp_glVertexAttribI4sv)(GLuint, const GLshort*);
extern fp_glVertexAttribI4sv gladglVertexAttribI4sv;
#define glVertexAttribI4sv gladglVertexAttribI4sv
typedef void (* fp_glVertexAttribI4ubv)(GLuint, const GLubyte*);
extern fp_glVertexAttribI4ubv gladglVertexAttribI4ubv;
#define glVertexAttribI4ubv gladglVertexAttribI4ubv
typedef void (* fp_glVertexAttribI4usv)(GLuint, const GLushort*);
extern fp_glVertexAttribI4usv gladglVertexAttribI4usv;
#define glVertexAttribI4usv gladglVertexAttribI4usv
typedef void (* fp_glGetUniformuiv)(GLuint, GLint, GLuint*);
extern fp_glGetUniformuiv gladglGetUniformuiv;
#define glGetUniformuiv gladglGetUniformuiv
typedef void (* fp_glBindFragDataLocation)(GLuint, GLuint, const GLchar*);
extern fp_glBindFragDataLocation gladglBindFragDataLocation;
#define glBindFragDataLocation gladglBindFragDataLocation
typedef GLint (* fp_glGetFragDataLocation)(GLuint, const GLchar*);
extern fp_glGetFragDataLocation gladglGetFragDataLocation;
#define glGetFragDataLocation gladglGetFragDataLocation
typedef void (* fp_glUniform1ui)(GLint, GLuint);
extern fp_glUniform1ui gladglUniform1ui;
#define glUniform1ui gladglUniform1ui
typedef void (* fp_glUniform2ui)(GLint, GLuint, GLuint);
extern fp_glUniform2ui gladglUniform2ui;
#define glUniform2ui gladglUniform2ui
typedef void (* fp_glUniform3ui)(GLint, GLuint, GLuint, GLuint);
extern fp_glUniform3ui gladglUniform3ui;
#define glUniform3ui gladglUniform3ui
typedef void (* fp_glUniform4ui)(GLint, GLuint, GLuint, GLuint, GLuint);
extern fp_glUniform4ui gladglUniform4ui;
#define glUniform4ui gladglUniform4ui
typedef void (* fp_glUniform1uiv)(GLint, GLsizei, const GLuint*);
extern fp_glUniform1uiv gladglUniform1uiv;
#define glUniform1uiv gladglUniform1uiv
typedef void (* fp_glUniform2uiv)(GLint, GLsizei, const GLuint*);
extern fp_glUniform2uiv gladglUniform2uiv;
#define glUniform2uiv gladglUniform2uiv
typedef void (* fp_glUniform3uiv)(GLint, GLsizei, const GLuint*);
extern fp_glUniform3uiv gladglUniform3uiv;
#define glUniform3uiv gladglUniform3uiv
typedef void (* fp_glUniform4uiv)(GLint, GLsizei, const GLuint*);
extern fp_glUniform4uiv gladglUniform4uiv;
#define glUniform4uiv gladglUniform4uiv
typedef void (* fp_glTexParameterIiv)(GLenum, GLenum, const GLint*);
extern fp_glTexParameterIiv gladglTexParameterIiv;
#define glTexParameterIiv gladglTexParameterIiv
typedef void (* fp_glTexParameterIuiv)(GLenum, GLenum, const GLuint*);
extern fp_glTexParameterIuiv gladglTexParameterIuiv;
#define glTexParameterIuiv gladglTexParameterIuiv
typedef void (* fp_glGetTexParameterIiv)(GLenum, GLenum, GLint*);
extern fp_glGetTexParameterIiv gladglGetTexParameterIiv;
#define glGetTexParameterIiv gladglGetTexParameterIiv
typedef void (* fp_glGetTexParameterIuiv)(GLenum, GLenum, GLuint*);
extern fp_glGetTexParameterIuiv gladglGetTexParameterIuiv;
#define glGetTexParameterIuiv gladglGetTexParameterIuiv
typedef void (* fp_glClearBufferiv)(GLenum, GLint, const GLint*);
extern fp_glClearBufferiv gladglClearBufferiv;
#define glClearBufferiv gladglClearBufferiv
typedef void (* fp_glClearBufferuiv)(GLenum, GLint, const GLuint*);
extern fp_glClearBufferuiv gladglClearBufferuiv;
#define glClearBufferuiv gladglClearBufferuiv
typedef void (* fp_glClearBufferfv)(GLenum, GLint, const GLfloat*);
extern fp_glClearBufferfv gladglClearBufferfv;
#define glClearBufferfv gladglClearBufferfv
typedef void (* fp_glClearBufferfi)(GLenum, GLint, GLfloat, GLint);
extern fp_glClearBufferfi gladglClearBufferfi;
#define glClearBufferfi gladglClearBufferfi
typedef const GLubyte* (* fp_glGetStringi)(GLenum, GLuint);
extern fp_glGetStringi gladglGetStringi;
#define glGetStringi gladglGetStringi
typedef GLboolean (* fp_glIsRenderbuffer)(GLuint);
extern fp_glIsRenderbuffer gladglIsRenderbuffer;
#define glIsRenderbuffer gladglIsRenderbuffer
typedef void (* fp_glBindRenderbuffer)(GLenum, GLuint);
extern fp_glBindRenderbuffer gladglBindRenderbuffer;
#define glBindRenderbuffer gladglBindRenderbuffer
typedef void (* fp_glDeleteRenderbuffers)(GLsizei, const GLuint*);
extern fp_glDeleteRenderbuffers gladglDeleteRenderbuffers;
#define glDeleteRenderbuffers gladglDeleteRenderbuffers
typedef void (* fp_glGenRenderbuffers)(GLsizei, GLuint*);
extern fp_glGenRenderbuffers gladglGenRenderbuffers;
#define glGenRenderbuffers gladglGenRenderbuffers
typedef void (* fp_glRenderbufferStorage)(GLenum, GLenum, GLsizei, GLsizei);
extern fp_glRenderbufferStorage gladglRenderbufferStorage;
#define glRenderbufferStorage gladglRenderbufferStorage
typedef void (* fp_glGetRenderbufferParameteriv)(GLenum, GLenum, GLint*);
extern fp_glGetRenderbufferParameteriv gladglGetRenderbufferParameteriv;
#define glGetRenderbufferParameteriv gladglGetRenderbufferParameteriv
typedef GLboolean (* fp_glIsFramebuffer)(GLuint);
extern fp_glIsFramebuffer gladglIsFramebuffer;
#define glIsFramebuffer gladglIsFramebuffer
typedef void (* fp_glBindFramebuffer)(GLenum, GLuint);
extern fp_glBindFramebuffer gladglBindFramebuffer;
#define glBindFramebuffer gladglBindFramebuffer
typedef void (* fp_glDeleteFramebuffers)(GLsizei, const GLuint*);
extern fp_glDeleteFramebuffers gladglDeleteFramebuffers;
#define glDeleteFramebuffers gladglDeleteFramebuffers
typedef void (* fp_glGenFramebuffers)(GLsizei, GLuint*);
extern fp_glGenFramebuffers gladglGenFramebuffers;
#define glGenFramebuffers gladglGenFramebuffers
typedef GLenum (* fp_glCheckFramebufferStatus)(GLenum);
extern fp_glCheckFramebufferStatus gladglCheckFramebufferStatus;
#define glCheckFramebufferStatus gladglCheckFramebufferStatus
typedef void (* fp_glFramebufferTexture1D)(GLenum, GLenum, GLenum, GLuint, GLint);
extern fp_glFramebufferTexture1D gladglFramebufferTexture1D;
#define glFramebufferTexture1D gladglFramebufferTexture1D
typedef void (* fp_glFramebufferTexture2D)(GLenum, GLenum, GLenum, GLuint, GLint);
extern fp_glFramebufferTexture2D gladglFramebufferTexture2D;
#define glFramebufferTexture2D gladglFramebufferTexture2D
typedef void (* fp_glFramebufferTexture3D)(GLenum, GLenum, GLenum, GLuint, GLint, GLint);
extern fp_glFramebufferTexture3D gladglFramebufferTexture3D;
#define glFramebufferTexture3D gladglFramebufferTexture3D
typedef void (* fp_glFramebufferRenderbuffer)(GLenum, GLenum, GLenum, GLuint);
extern fp_glFramebufferRenderbuffer gladglFramebufferRenderbuffer;
#define glFramebufferRenderbuffer gladglFramebufferRenderbuffer
typedef void (* fp_glGetFramebufferAttachmentParameteriv)(GLenum, GLenum, GLenum, GLint*);
extern fp_glGetFramebufferAttachmentParameteriv gladglGetFramebufferAttachmentParameteriv;
#define glGetFramebufferAttachmentParameteriv gladglGetFramebufferAttachmentParameteriv
typedef void (* fp_glGenerateMipmap)(GLenum);
extern fp_glGenerateMipmap gladglGenerateMipmap;
#define glGenerateMipmap gladglGenerateMipmap
typedef void (* fp_glBlitFramebuffer)(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
extern fp_glBlitFramebuffer gladglBlitFramebuffer;
#define glBlitFramebuffer gladglBlitFramebuffer
typedef void (* fp_glRenderbufferStorageMultisample)(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
extern fp_glRenderbufferStorageMultisample gladglRenderbufferStorageMultisample;
#define glRenderbufferStorageMultisample gladglRenderbufferStorageMultisample
typedef void (* fp_glFramebufferTextureLayer)(GLenum, GLenum, GLuint, GLint, GLint);
extern fp_glFramebufferTextureLayer gladglFramebufferTextureLayer;
#define glFramebufferTextureLayer gladglFramebufferTextureLayer
typedef void* (* fp_glMapBufferRange)(GLenum, GLintptr, GLsizeiptr, GLbitfield);
extern fp_glMapBufferRange gladglMapBufferRange;
#define glMapBufferRange gladglMapBufferRange
typedef void (* fp_glFlushMappedBufferRange)(GLenum, GLintptr, GLsizeiptr);
extern fp_glFlushMappedBufferRange gladglFlushMappedBufferRange;
#define glFlushMappedBufferRange gladglFlushMappedBufferRange
typedef void (* fp_glBindVertexArray)(GLuint);
extern fp_glBindVertexArray gladglBindVertexArray;
#define glBindVertexArray gladglBindVertexArray
typedef void (* fp_glDeleteVertexArrays)(GLsizei, const GLuint*);
extern fp_glDeleteVertexArrays gladglDeleteVertexArrays;
#define glDeleteVertexArrays gladglDeleteVertexArrays
typedef void (* fp_glGenVertexArrays)(GLsizei, GLuint*);
extern fp_glGenVertexArrays gladglGenVertexArrays;
#define glGenVertexArrays gladglGenVertexArrays
typedef GLboolean (* fp_glIsVertexArray)(GLuint);
extern fp_glIsVertexArray gladglIsVertexArray;
#define glIsVertexArray gladglIsVertexArray
int GL_VERSION_3_1;
typedef void (* fp_glDrawArraysInstanced)(GLenum, GLint, GLsizei, GLsizei);
extern fp_glDrawArraysInstanced gladglDrawArraysInstanced;
#define glDrawArraysInstanced gladglDrawArraysInstanced
typedef void (* fp_glDrawElementsInstanced)(GLenum, GLsizei, GLenum, const GLvoid*, GLsizei);
extern fp_glDrawElementsInstanced gladglDrawElementsInstanced;
#define glDrawElementsInstanced gladglDrawElementsInstanced
typedef void (* fp_glTexBuffer)(GLenum, GLenum, GLuint);
extern fp_glTexBuffer gladglTexBuffer;
#define glTexBuffer gladglTexBuffer
typedef void (* fp_glPrimitiveRestartIndex)(GLuint);
extern fp_glPrimitiveRestartIndex gladglPrimitiveRestartIndex;
#define glPrimitiveRestartIndex gladglPrimitiveRestartIndex
typedef void (* fp_glCopyBufferSubData)(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr);
extern fp_glCopyBufferSubData gladglCopyBufferSubData;
#define glCopyBufferSubData gladglCopyBufferSubData
typedef void (* fp_glGetUniformIndices)(GLuint, GLsizei, const GLchar**, GLuint*);
extern fp_glGetUniformIndices gladglGetUniformIndices;
#define glGetUniformIndices gladglGetUniformIndices
typedef void (* fp_glGetActiveUniformsiv)(GLuint, GLsizei, const GLuint*, GLenum, GLint*);
extern fp_glGetActiveUniformsiv gladglGetActiveUniformsiv;
#define glGetActiveUniformsiv gladglGetActiveUniformsiv
typedef void (* fp_glGetActiveUniformName)(GLuint, GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetActiveUniformName gladglGetActiveUniformName;
#define glGetActiveUniformName gladglGetActiveUniformName
typedef GLuint (* fp_glGetUniformBlockIndex)(GLuint, const GLchar*);
extern fp_glGetUniformBlockIndex gladglGetUniformBlockIndex;
#define glGetUniformBlockIndex gladglGetUniformBlockIndex
typedef void (* fp_glGetActiveUniformBlockiv)(GLuint, GLuint, GLenum, GLint*);
extern fp_glGetActiveUniformBlockiv gladglGetActiveUniformBlockiv;
#define glGetActiveUniformBlockiv gladglGetActiveUniformBlockiv
typedef void (* fp_glGetActiveUniformBlockName)(GLuint, GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetActiveUniformBlockName gladglGetActiveUniformBlockName;
#define glGetActiveUniformBlockName gladglGetActiveUniformBlockName
typedef void (* fp_glUniformBlockBinding)(GLuint, GLuint, GLuint);
extern fp_glUniformBlockBinding gladglUniformBlockBinding;
#define glUniformBlockBinding gladglUniformBlockBinding
int GL_VERSION_3_2;
typedef void (* fp_glDrawElementsBaseVertex)(GLenum, GLsizei, GLenum, const GLvoid*, GLint);
extern fp_glDrawElementsBaseVertex gladglDrawElementsBaseVertex;
#define glDrawElementsBaseVertex gladglDrawElementsBaseVertex
typedef void (* fp_glDrawRangeElementsBaseVertex)(GLenum, GLuint, GLuint, GLsizei, GLenum, const GLvoid*, GLint);
extern fp_glDrawRangeElementsBaseVertex gladglDrawRangeElementsBaseVertex;
#define glDrawRangeElementsBaseVertex gladglDrawRangeElementsBaseVertex
typedef void (* fp_glDrawElementsInstancedBaseVertex)(GLenum, GLsizei, GLenum, const GLvoid*, GLsizei, GLint);
extern fp_glDrawElementsInstancedBaseVertex gladglDrawElementsInstancedBaseVertex;
#define glDrawElementsInstancedBaseVertex gladglDrawElementsInstancedBaseVertex
typedef void (* fp_glMultiDrawElementsBaseVertex)(GLenum, const GLsizei*, GLenum, const GLvoid**, GLsizei, const GLint*);
extern fp_glMultiDrawElementsBaseVertex gladglMultiDrawElementsBaseVertex;
#define glMultiDrawElementsBaseVertex gladglMultiDrawElementsBaseVertex
typedef void (* fp_glProvokingVertex)(GLenum);
extern fp_glProvokingVertex gladglProvokingVertex;
#define glProvokingVertex gladglProvokingVertex
typedef GLsync (* fp_glFenceSync)(GLenum, GLbitfield);
extern fp_glFenceSync gladglFenceSync;
#define glFenceSync gladglFenceSync
typedef GLboolean (* fp_glIsSync)(GLsync);
extern fp_glIsSync gladglIsSync;
#define glIsSync gladglIsSync
typedef void (* fp_glDeleteSync)(GLsync);
extern fp_glDeleteSync gladglDeleteSync;
#define glDeleteSync gladglDeleteSync
typedef GLenum (* fp_glClientWaitSync)(GLsync, GLbitfield, GLuint64);
extern fp_glClientWaitSync gladglClientWaitSync;
#define glClientWaitSync gladglClientWaitSync
typedef void (* fp_glWaitSync)(GLsync, GLbitfield, GLuint64);
extern fp_glWaitSync gladglWaitSync;
#define glWaitSync gladglWaitSync
typedef void (* fp_glGetInteger64v)(GLenum, GLint64*);
extern fp_glGetInteger64v gladglGetInteger64v;
#define glGetInteger64v gladglGetInteger64v
typedef void (* fp_glGetSynciv)(GLsync, GLenum, GLsizei, GLsizei*, GLint*);
extern fp_glGetSynciv gladglGetSynciv;
#define glGetSynciv gladglGetSynciv
typedef void (* fp_glGetInteger64i_v)(GLenum, GLuint, GLint64*);
extern fp_glGetInteger64i_v gladglGetInteger64i_v;
#define glGetInteger64i_v gladglGetInteger64i_v
typedef void (* fp_glGetBufferParameteri64v)(GLenum, GLenum, GLint64*);
extern fp_glGetBufferParameteri64v gladglGetBufferParameteri64v;
#define glGetBufferParameteri64v gladglGetBufferParameteri64v
typedef void (* fp_glFramebufferTexture)(GLenum, GLenum, GLuint, GLint);
extern fp_glFramebufferTexture gladglFramebufferTexture;
#define glFramebufferTexture gladglFramebufferTexture
typedef void (* fp_glTexImage2DMultisample)(GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean);
extern fp_glTexImage2DMultisample gladglTexImage2DMultisample;
#define glTexImage2DMultisample gladglTexImage2DMultisample
typedef void (* fp_glTexImage3DMultisample)(GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean);
extern fp_glTexImage3DMultisample gladglTexImage3DMultisample;
#define glTexImage3DMultisample gladglTexImage3DMultisample
typedef void (* fp_glGetMultisamplefv)(GLenum, GLuint, GLfloat*);
extern fp_glGetMultisamplefv gladglGetMultisamplefv;
#define glGetMultisamplefv gladglGetMultisamplefv
typedef void (* fp_glSampleMaski)(GLuint, GLbitfield);
extern fp_glSampleMaski gladglSampleMaski;
#define glSampleMaski gladglSampleMaski
int GL_VERSION_3_3;
typedef void (* fp_glBindFragDataLocationIndexed)(GLuint, GLuint, GLuint, const GLchar*);
extern fp_glBindFragDataLocationIndexed gladglBindFragDataLocationIndexed;
#define glBindFragDataLocationIndexed gladglBindFragDataLocationIndexed
typedef GLint (* fp_glGetFragDataIndex)(GLuint, const GLchar*);
extern fp_glGetFragDataIndex gladglGetFragDataIndex;
#define glGetFragDataIndex gladglGetFragDataIndex
typedef void (* fp_glGenSamplers)(GLsizei, GLuint*);
extern fp_glGenSamplers gladglGenSamplers;
#define glGenSamplers gladglGenSamplers
typedef void (* fp_glDeleteSamplers)(GLsizei, const GLuint*);
extern fp_glDeleteSamplers gladglDeleteSamplers;
#define glDeleteSamplers gladglDeleteSamplers
typedef GLboolean (* fp_glIsSampler)(GLuint);
extern fp_glIsSampler gladglIsSampler;
#define glIsSampler gladglIsSampler
typedef void (* fp_glBindSampler)(GLuint, GLuint);
extern fp_glBindSampler gladglBindSampler;
#define glBindSampler gladglBindSampler
typedef void (* fp_glSamplerParameteri)(GLuint, GLenum, GLint);
extern fp_glSamplerParameteri gladglSamplerParameteri;
#define glSamplerParameteri gladglSamplerParameteri
typedef void (* fp_glSamplerParameteriv)(GLuint, GLenum, const GLint*);
extern fp_glSamplerParameteriv gladglSamplerParameteriv;
#define glSamplerParameteriv gladglSamplerParameteriv
typedef void (* fp_glSamplerParameterf)(GLuint, GLenum, GLfloat);
extern fp_glSamplerParameterf gladglSamplerParameterf;
#define glSamplerParameterf gladglSamplerParameterf
typedef void (* fp_glSamplerParameterfv)(GLuint, GLenum, const GLfloat*);
extern fp_glSamplerParameterfv gladglSamplerParameterfv;
#define glSamplerParameterfv gladglSamplerParameterfv
typedef void (* fp_glSamplerParameterIiv)(GLuint, GLenum, const GLint*);
extern fp_glSamplerParameterIiv gladglSamplerParameterIiv;
#define glSamplerParameterIiv gladglSamplerParameterIiv
typedef void (* fp_glSamplerParameterIuiv)(GLuint, GLenum, const GLuint*);
extern fp_glSamplerParameterIuiv gladglSamplerParameterIuiv;
#define glSamplerParameterIuiv gladglSamplerParameterIuiv
typedef void (* fp_glGetSamplerParameteriv)(GLuint, GLenum, GLint*);
extern fp_glGetSamplerParameteriv gladglGetSamplerParameteriv;
#define glGetSamplerParameteriv gladglGetSamplerParameteriv
typedef void (* fp_glGetSamplerParameterIiv)(GLuint, GLenum, GLint*);
extern fp_glGetSamplerParameterIiv gladglGetSamplerParameterIiv;
#define glGetSamplerParameterIiv gladglGetSamplerParameterIiv
typedef void (* fp_glGetSamplerParameterfv)(GLuint, GLenum, GLfloat*);
extern fp_glGetSamplerParameterfv gladglGetSamplerParameterfv;
#define glGetSamplerParameterfv gladglGetSamplerParameterfv
typedef void (* fp_glGetSamplerParameterIuiv)(GLuint, GLenum, GLuint*);
extern fp_glGetSamplerParameterIuiv gladglGetSamplerParameterIuiv;
#define glGetSamplerParameterIuiv gladglGetSamplerParameterIuiv
typedef void (* fp_glQueryCounter)(GLuint, GLenum);
extern fp_glQueryCounter gladglQueryCounter;
#define glQueryCounter gladglQueryCounter
typedef void (* fp_glGetQueryObjecti64v)(GLuint, GLenum, GLint64*);
extern fp_glGetQueryObjecti64v gladglGetQueryObjecti64v;
#define glGetQueryObjecti64v gladglGetQueryObjecti64v
typedef void (* fp_glGetQueryObjectui64v)(GLuint, GLenum, GLuint64*);
extern fp_glGetQueryObjectui64v gladglGetQueryObjectui64v;
#define glGetQueryObjectui64v gladglGetQueryObjectui64v
typedef void (* fp_glVertexAttribDivisor)(GLuint, GLuint);
extern fp_glVertexAttribDivisor gladglVertexAttribDivisor;
#define glVertexAttribDivisor gladglVertexAttribDivisor
typedef void (* fp_glVertexAttribP1ui)(GLuint, GLenum, GLboolean, GLuint);
extern fp_glVertexAttribP1ui gladglVertexAttribP1ui;
#define glVertexAttribP1ui gladglVertexAttribP1ui
typedef void (* fp_glVertexAttribP1uiv)(GLuint, GLenum, GLboolean, const GLuint*);
extern fp_glVertexAttribP1uiv gladglVertexAttribP1uiv;
#define glVertexAttribP1uiv gladglVertexAttribP1uiv
typedef void (* fp_glVertexAttribP2ui)(GLuint, GLenum, GLboolean, GLuint);
extern fp_glVertexAttribP2ui gladglVertexAttribP2ui;
#define glVertexAttribP2ui gladglVertexAttribP2ui
typedef void (* fp_glVertexAttribP2uiv)(GLuint, GLenum, GLboolean, const GLuint*);
extern fp_glVertexAttribP2uiv gladglVertexAttribP2uiv;
#define glVertexAttribP2uiv gladglVertexAttribP2uiv
typedef void (* fp_glVertexAttribP3ui)(GLuint, GLenum, GLboolean, GLuint);
extern fp_glVertexAttribP3ui gladglVertexAttribP3ui;
#define glVertexAttribP3ui gladglVertexAttribP3ui
typedef void (* fp_glVertexAttribP3uiv)(GLuint, GLenum, GLboolean, const GLuint*);
extern fp_glVertexAttribP3uiv gladglVertexAttribP3uiv;
#define glVertexAttribP3uiv gladglVertexAttribP3uiv
typedef void (* fp_glVertexAttribP4ui)(GLuint, GLenum, GLboolean, GLuint);
extern fp_glVertexAttribP4ui gladglVertexAttribP4ui;
#define glVertexAttribP4ui gladglVertexAttribP4ui
typedef void (* fp_glVertexAttribP4uiv)(GLuint, GLenum, GLboolean, const GLuint*);
extern fp_glVertexAttribP4uiv gladglVertexAttribP4uiv;
#define glVertexAttribP4uiv gladglVertexAttribP4uiv
typedef void (* fp_glVertexP2ui)(GLenum, GLuint);
extern fp_glVertexP2ui gladglVertexP2ui;
#define glVertexP2ui gladglVertexP2ui
typedef void (* fp_glVertexP2uiv)(GLenum, const GLuint*);
extern fp_glVertexP2uiv gladglVertexP2uiv;
#define glVertexP2uiv gladglVertexP2uiv
typedef void (* fp_glVertexP3ui)(GLenum, GLuint);
extern fp_glVertexP3ui gladglVertexP3ui;
#define glVertexP3ui gladglVertexP3ui
typedef void (* fp_glVertexP3uiv)(GLenum, const GLuint*);
extern fp_glVertexP3uiv gladglVertexP3uiv;
#define glVertexP3uiv gladglVertexP3uiv
typedef void (* fp_glVertexP4ui)(GLenum, GLuint);
extern fp_glVertexP4ui gladglVertexP4ui;
#define glVertexP4ui gladglVertexP4ui
typedef void (* fp_glVertexP4uiv)(GLenum, const GLuint*);
extern fp_glVertexP4uiv gladglVertexP4uiv;
#define glVertexP4uiv gladglVertexP4uiv
typedef void (* fp_glTexCoordP1ui)(GLenum, GLuint);
extern fp_glTexCoordP1ui gladglTexCoordP1ui;
#define glTexCoordP1ui gladglTexCoordP1ui
typedef void (* fp_glTexCoordP1uiv)(GLenum, const GLuint*);
extern fp_glTexCoordP1uiv gladglTexCoordP1uiv;
#define glTexCoordP1uiv gladglTexCoordP1uiv
typedef void (* fp_glTexCoordP2ui)(GLenum, GLuint);
extern fp_glTexCoordP2ui gladglTexCoordP2ui;
#define glTexCoordP2ui gladglTexCoordP2ui
typedef void (* fp_glTexCoordP2uiv)(GLenum, const GLuint*);
extern fp_glTexCoordP2uiv gladglTexCoordP2uiv;
#define glTexCoordP2uiv gladglTexCoordP2uiv
typedef void (* fp_glTexCoordP3ui)(GLenum, GLuint);
extern fp_glTexCoordP3ui gladglTexCoordP3ui;
#define glTexCoordP3ui gladglTexCoordP3ui
typedef void (* fp_glTexCoordP3uiv)(GLenum, const GLuint*);
extern fp_glTexCoordP3uiv gladglTexCoordP3uiv;
#define glTexCoordP3uiv gladglTexCoordP3uiv
typedef void (* fp_glTexCoordP4ui)(GLenum, GLuint);
extern fp_glTexCoordP4ui gladglTexCoordP4ui;
#define glTexCoordP4ui gladglTexCoordP4ui
typedef void (* fp_glTexCoordP4uiv)(GLenum, const GLuint*);
extern fp_glTexCoordP4uiv gladglTexCoordP4uiv;
#define glTexCoordP4uiv gladglTexCoordP4uiv
typedef void (* fp_glMultiTexCoordP1ui)(GLenum, GLenum, GLuint);
extern fp_glMultiTexCoordP1ui gladglMultiTexCoordP1ui;
#define glMultiTexCoordP1ui gladglMultiTexCoordP1ui
typedef void (* fp_glMultiTexCoordP1uiv)(GLenum, GLenum, const GLuint*);
extern fp_glMultiTexCoordP1uiv gladglMultiTexCoordP1uiv;
#define glMultiTexCoordP1uiv gladglMultiTexCoordP1uiv
typedef void (* fp_glMultiTexCoordP2ui)(GLenum, GLenum, GLuint);
extern fp_glMultiTexCoordP2ui gladglMultiTexCoordP2ui;
#define glMultiTexCoordP2ui gladglMultiTexCoordP2ui
typedef void (* fp_glMultiTexCoordP2uiv)(GLenum, GLenum, const GLuint*);
extern fp_glMultiTexCoordP2uiv gladglMultiTexCoordP2uiv;
#define glMultiTexCoordP2uiv gladglMultiTexCoordP2uiv
typedef void (* fp_glMultiTexCoordP3ui)(GLenum, GLenum, GLuint);
extern fp_glMultiTexCoordP3ui gladglMultiTexCoordP3ui;
#define glMultiTexCoordP3ui gladglMultiTexCoordP3ui
typedef void (* fp_glMultiTexCoordP3uiv)(GLenum, GLenum, const GLuint*);
extern fp_glMultiTexCoordP3uiv gladglMultiTexCoordP3uiv;
#define glMultiTexCoordP3uiv gladglMultiTexCoordP3uiv
typedef void (* fp_glMultiTexCoordP4ui)(GLenum, GLenum, GLuint);
extern fp_glMultiTexCoordP4ui gladglMultiTexCoordP4ui;
#define glMultiTexCoordP4ui gladglMultiTexCoordP4ui
typedef void (* fp_glMultiTexCoordP4uiv)(GLenum, GLenum, const GLuint*);
extern fp_glMultiTexCoordP4uiv gladglMultiTexCoordP4uiv;
#define glMultiTexCoordP4uiv gladglMultiTexCoordP4uiv
typedef void (* fp_glNormalP3ui)(GLenum, GLuint);
extern fp_glNormalP3ui gladglNormalP3ui;
#define glNormalP3ui gladglNormalP3ui
typedef void (* fp_glNormalP3uiv)(GLenum, const GLuint*);
extern fp_glNormalP3uiv gladglNormalP3uiv;
#define glNormalP3uiv gladglNormalP3uiv
typedef void (* fp_glColorP3ui)(GLenum, GLuint);
extern fp_glColorP3ui gladglColorP3ui;
#define glColorP3ui gladglColorP3ui
typedef void (* fp_glColorP3uiv)(GLenum, const GLuint*);
extern fp_glColorP3uiv gladglColorP3uiv;
#define glColorP3uiv gladglColorP3uiv
typedef void (* fp_glColorP4ui)(GLenum, GLuint);
extern fp_glColorP4ui gladglColorP4ui;
#define glColorP4ui gladglColorP4ui
typedef void (* fp_glColorP4uiv)(GLenum, const GLuint*);
extern fp_glColorP4uiv gladglColorP4uiv;
#define glColorP4uiv gladglColorP4uiv
typedef void (* fp_glSecondaryColorP3ui)(GLenum, GLuint);
extern fp_glSecondaryColorP3ui gladglSecondaryColorP3ui;
#define glSecondaryColorP3ui gladglSecondaryColorP3ui
typedef void (* fp_glSecondaryColorP3uiv)(GLenum, const GLuint*);
extern fp_glSecondaryColorP3uiv gladglSecondaryColorP3uiv;
#define glSecondaryColorP3uiv gladglSecondaryColorP3uiv
int GL_VERSION_4_0;
typedef void (* fp_glMinSampleShading)(GLfloat);
extern fp_glMinSampleShading gladglMinSampleShading;
#define glMinSampleShading gladglMinSampleShading
typedef void (* fp_glBlendEquationi)(GLuint, GLenum);
extern fp_glBlendEquationi gladglBlendEquationi;
#define glBlendEquationi gladglBlendEquationi
typedef void (* fp_glBlendEquationSeparatei)(GLuint, GLenum, GLenum);
extern fp_glBlendEquationSeparatei gladglBlendEquationSeparatei;
#define glBlendEquationSeparatei gladglBlendEquationSeparatei
typedef void (* fp_glBlendFunci)(GLuint, GLenum, GLenum);
extern fp_glBlendFunci gladglBlendFunci;
#define glBlendFunci gladglBlendFunci
typedef void (* fp_glBlendFuncSeparatei)(GLuint, GLenum, GLenum, GLenum, GLenum);
extern fp_glBlendFuncSeparatei gladglBlendFuncSeparatei;
#define glBlendFuncSeparatei gladglBlendFuncSeparatei
typedef void (* fp_glDrawArraysIndirect)(GLenum, const GLvoid*);
extern fp_glDrawArraysIndirect gladglDrawArraysIndirect;
#define glDrawArraysIndirect gladglDrawArraysIndirect
typedef void (* fp_glDrawElementsIndirect)(GLenum, GLenum, const GLvoid*);
extern fp_glDrawElementsIndirect gladglDrawElementsIndirect;
#define glDrawElementsIndirect gladglDrawElementsIndirect
typedef void (* fp_glUniform1d)(GLint, GLdouble);
extern fp_glUniform1d gladglUniform1d;
#define glUniform1d gladglUniform1d
typedef void (* fp_glUniform2d)(GLint, GLdouble, GLdouble);
extern fp_glUniform2d gladglUniform2d;
#define glUniform2d gladglUniform2d
typedef void (* fp_glUniform3d)(GLint, GLdouble, GLdouble, GLdouble);
extern fp_glUniform3d gladglUniform3d;
#define glUniform3d gladglUniform3d
typedef void (* fp_glUniform4d)(GLint, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glUniform4d gladglUniform4d;
#define glUniform4d gladglUniform4d
typedef void (* fp_glUniform1dv)(GLint, GLsizei, const GLdouble*);
extern fp_glUniform1dv gladglUniform1dv;
#define glUniform1dv gladglUniform1dv
typedef void (* fp_glUniform2dv)(GLint, GLsizei, const GLdouble*);
extern fp_glUniform2dv gladglUniform2dv;
#define glUniform2dv gladglUniform2dv
typedef void (* fp_glUniform3dv)(GLint, GLsizei, const GLdouble*);
extern fp_glUniform3dv gladglUniform3dv;
#define glUniform3dv gladglUniform3dv
typedef void (* fp_glUniform4dv)(GLint, GLsizei, const GLdouble*);
extern fp_glUniform4dv gladglUniform4dv;
#define glUniform4dv gladglUniform4dv
typedef void (* fp_glUniformMatrix2dv)(GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glUniformMatrix2dv gladglUniformMatrix2dv;
#define glUniformMatrix2dv gladglUniformMatrix2dv
typedef void (* fp_glUniformMatrix3dv)(GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glUniformMatrix3dv gladglUniformMatrix3dv;
#define glUniformMatrix3dv gladglUniformMatrix3dv
typedef void (* fp_glUniformMatrix4dv)(GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glUniformMatrix4dv gladglUniformMatrix4dv;
#define glUniformMatrix4dv gladglUniformMatrix4dv
typedef void (* fp_glUniformMatrix2x3dv)(GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glUniformMatrix2x3dv gladglUniformMatrix2x3dv;
#define glUniformMatrix2x3dv gladglUniformMatrix2x3dv
typedef void (* fp_glUniformMatrix2x4dv)(GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glUniformMatrix2x4dv gladglUniformMatrix2x4dv;
#define glUniformMatrix2x4dv gladglUniformMatrix2x4dv
typedef void (* fp_glUniformMatrix3x2dv)(GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glUniformMatrix3x2dv gladglUniformMatrix3x2dv;
#define glUniformMatrix3x2dv gladglUniformMatrix3x2dv
typedef void (* fp_glUniformMatrix3x4dv)(GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glUniformMatrix3x4dv gladglUniformMatrix3x4dv;
#define glUniformMatrix3x4dv gladglUniformMatrix3x4dv
typedef void (* fp_glUniformMatrix4x2dv)(GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glUniformMatrix4x2dv gladglUniformMatrix4x2dv;
#define glUniformMatrix4x2dv gladglUniformMatrix4x2dv
typedef void (* fp_glUniformMatrix4x3dv)(GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glUniformMatrix4x3dv gladglUniformMatrix4x3dv;
#define glUniformMatrix4x3dv gladglUniformMatrix4x3dv
typedef void (* fp_glGetUniformdv)(GLuint, GLint, GLdouble*);
extern fp_glGetUniformdv gladglGetUniformdv;
#define glGetUniformdv gladglGetUniformdv
typedef GLint (* fp_glGetSubroutineUniformLocation)(GLuint, GLenum, const GLchar*);
extern fp_glGetSubroutineUniformLocation gladglGetSubroutineUniformLocation;
#define glGetSubroutineUniformLocation gladglGetSubroutineUniformLocation
typedef GLuint (* fp_glGetSubroutineIndex)(GLuint, GLenum, const GLchar*);
extern fp_glGetSubroutineIndex gladglGetSubroutineIndex;
#define glGetSubroutineIndex gladglGetSubroutineIndex
typedef void (* fp_glGetActiveSubroutineUniformiv)(GLuint, GLenum, GLuint, GLenum, GLint*);
extern fp_glGetActiveSubroutineUniformiv gladglGetActiveSubroutineUniformiv;
#define glGetActiveSubroutineUniformiv gladglGetActiveSubroutineUniformiv
typedef void (* fp_glGetActiveSubroutineUniformName)(GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetActiveSubroutineUniformName gladglGetActiveSubroutineUniformName;
#define glGetActiveSubroutineUniformName gladglGetActiveSubroutineUniformName
typedef void (* fp_glGetActiveSubroutineName)(GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetActiveSubroutineName gladglGetActiveSubroutineName;
#define glGetActiveSubroutineName gladglGetActiveSubroutineName
typedef void (* fp_glUniformSubroutinesuiv)(GLenum, GLsizei, const GLuint*);
extern fp_glUniformSubroutinesuiv gladglUniformSubroutinesuiv;
#define glUniformSubroutinesuiv gladglUniformSubroutinesuiv
typedef void (* fp_glGetUniformSubroutineuiv)(GLenum, GLint, GLuint*);
extern fp_glGetUniformSubroutineuiv gladglGetUniformSubroutineuiv;
#define glGetUniformSubroutineuiv gladglGetUniformSubroutineuiv
typedef void (* fp_glGetProgramStageiv)(GLuint, GLenum, GLenum, GLint*);
extern fp_glGetProgramStageiv gladglGetProgramStageiv;
#define glGetProgramStageiv gladglGetProgramStageiv
typedef void (* fp_glPatchParameteri)(GLenum, GLint);
extern fp_glPatchParameteri gladglPatchParameteri;
#define glPatchParameteri gladglPatchParameteri
typedef void (* fp_glPatchParameterfv)(GLenum, const GLfloat*);
extern fp_glPatchParameterfv gladglPatchParameterfv;
#define glPatchParameterfv gladglPatchParameterfv
typedef void (* fp_glBindTransformFeedback)(GLenum, GLuint);
extern fp_glBindTransformFeedback gladglBindTransformFeedback;
#define glBindTransformFeedback gladglBindTransformFeedback
typedef void (* fp_glDeleteTransformFeedbacks)(GLsizei, const GLuint*);
extern fp_glDeleteTransformFeedbacks gladglDeleteTransformFeedbacks;
#define glDeleteTransformFeedbacks gladglDeleteTransformFeedbacks
typedef void (* fp_glGenTransformFeedbacks)(GLsizei, GLuint*);
extern fp_glGenTransformFeedbacks gladglGenTransformFeedbacks;
#define glGenTransformFeedbacks gladglGenTransformFeedbacks
typedef GLboolean (* fp_glIsTransformFeedback)(GLuint);
extern fp_glIsTransformFeedback gladglIsTransformFeedback;
#define glIsTransformFeedback gladglIsTransformFeedback
typedef void (* fp_glPauseTransformFeedback)();
extern fp_glPauseTransformFeedback gladglPauseTransformFeedback;
#define glPauseTransformFeedback gladglPauseTransformFeedback
typedef void (* fp_glResumeTransformFeedback)();
extern fp_glResumeTransformFeedback gladglResumeTransformFeedback;
#define glResumeTransformFeedback gladglResumeTransformFeedback
typedef void (* fp_glDrawTransformFeedback)(GLenum, GLuint);
extern fp_glDrawTransformFeedback gladglDrawTransformFeedback;
#define glDrawTransformFeedback gladglDrawTransformFeedback
typedef void (* fp_glDrawTransformFeedbackStream)(GLenum, GLuint, GLuint);
extern fp_glDrawTransformFeedbackStream gladglDrawTransformFeedbackStream;
#define glDrawTransformFeedbackStream gladglDrawTransformFeedbackStream
typedef void (* fp_glBeginQueryIndexed)(GLenum, GLuint, GLuint);
extern fp_glBeginQueryIndexed gladglBeginQueryIndexed;
#define glBeginQueryIndexed gladglBeginQueryIndexed
typedef void (* fp_glEndQueryIndexed)(GLenum, GLuint);
extern fp_glEndQueryIndexed gladglEndQueryIndexed;
#define glEndQueryIndexed gladglEndQueryIndexed
typedef void (* fp_glGetQueryIndexediv)(GLenum, GLuint, GLenum, GLint*);
extern fp_glGetQueryIndexediv gladglGetQueryIndexediv;
#define glGetQueryIndexediv gladglGetQueryIndexediv
int GL_VERSION_4_1;
typedef void (* fp_glReleaseShaderCompiler)();
extern fp_glReleaseShaderCompiler gladglReleaseShaderCompiler;
#define glReleaseShaderCompiler gladglReleaseShaderCompiler
typedef void (* fp_glShaderBinary)(GLsizei, const GLuint*, GLenum, const GLvoid*, GLsizei);
extern fp_glShaderBinary gladglShaderBinary;
#define glShaderBinary gladglShaderBinary
typedef void (* fp_glGetShaderPrecisionFormat)(GLenum, GLenum, GLint*, GLint*);
extern fp_glGetShaderPrecisionFormat gladglGetShaderPrecisionFormat;
#define glGetShaderPrecisionFormat gladglGetShaderPrecisionFormat
typedef void (* fp_glDepthRangef)(GLfloat, GLfloat);
extern fp_glDepthRangef gladglDepthRangef;
#define glDepthRangef gladglDepthRangef
typedef void (* fp_glClearDepthf)(GLfloat);
extern fp_glClearDepthf gladglClearDepthf;
#define glClearDepthf gladglClearDepthf
typedef void (* fp_glGetProgramBinary)(GLuint, GLsizei, GLsizei*, GLenum*, GLvoid*);
extern fp_glGetProgramBinary gladglGetProgramBinary;
#define glGetProgramBinary gladglGetProgramBinary
typedef void (* fp_glProgramBinary)(GLuint, GLenum, const GLvoid*, GLsizei);
extern fp_glProgramBinary gladglProgramBinary;
#define glProgramBinary gladglProgramBinary
typedef void (* fp_glProgramParameteri)(GLuint, GLenum, GLint);
extern fp_glProgramParameteri gladglProgramParameteri;
#define glProgramParameteri gladglProgramParameteri
typedef void (* fp_glUseProgramStages)(GLuint, GLbitfield, GLuint);
extern fp_glUseProgramStages gladglUseProgramStages;
#define glUseProgramStages gladglUseProgramStages
typedef void (* fp_glActiveShaderProgram)(GLuint, GLuint);
extern fp_glActiveShaderProgram gladglActiveShaderProgram;
#define glActiveShaderProgram gladglActiveShaderProgram
typedef GLuint (* fp_glCreateShaderProgramv)(GLenum, GLsizei, const GLchar**);
extern fp_glCreateShaderProgramv gladglCreateShaderProgramv;
#define glCreateShaderProgramv gladglCreateShaderProgramv
typedef void (* fp_glBindProgramPipeline)(GLuint);
extern fp_glBindProgramPipeline gladglBindProgramPipeline;
#define glBindProgramPipeline gladglBindProgramPipeline
typedef void (* fp_glDeleteProgramPipelines)(GLsizei, const GLuint*);
extern fp_glDeleteProgramPipelines gladglDeleteProgramPipelines;
#define glDeleteProgramPipelines gladglDeleteProgramPipelines
typedef void (* fp_glGenProgramPipelines)(GLsizei, GLuint*);
extern fp_glGenProgramPipelines gladglGenProgramPipelines;
#define glGenProgramPipelines gladglGenProgramPipelines
typedef GLboolean (* fp_glIsProgramPipeline)(GLuint);
extern fp_glIsProgramPipeline gladglIsProgramPipeline;
#define glIsProgramPipeline gladglIsProgramPipeline
typedef void (* fp_glGetProgramPipelineiv)(GLuint, GLenum, GLint*);
extern fp_glGetProgramPipelineiv gladglGetProgramPipelineiv;
#define glGetProgramPipelineiv gladglGetProgramPipelineiv
typedef void (* fp_glProgramUniform1i)(GLuint, GLint, GLint);
extern fp_glProgramUniform1i gladglProgramUniform1i;
#define glProgramUniform1i gladglProgramUniform1i
typedef void (* fp_glProgramUniform1iv)(GLuint, GLint, GLsizei, const GLint*);
extern fp_glProgramUniform1iv gladglProgramUniform1iv;
#define glProgramUniform1iv gladglProgramUniform1iv
typedef void (* fp_glProgramUniform1f)(GLuint, GLint, GLfloat);
extern fp_glProgramUniform1f gladglProgramUniform1f;
#define glProgramUniform1f gladglProgramUniform1f
typedef void (* fp_glProgramUniform1fv)(GLuint, GLint, GLsizei, const GLfloat*);
extern fp_glProgramUniform1fv gladglProgramUniform1fv;
#define glProgramUniform1fv gladglProgramUniform1fv
typedef void (* fp_glProgramUniform1d)(GLuint, GLint, GLdouble);
extern fp_glProgramUniform1d gladglProgramUniform1d;
#define glProgramUniform1d gladglProgramUniform1d
typedef void (* fp_glProgramUniform1dv)(GLuint, GLint, GLsizei, const GLdouble*);
extern fp_glProgramUniform1dv gladglProgramUniform1dv;
#define glProgramUniform1dv gladglProgramUniform1dv
typedef void (* fp_glProgramUniform1ui)(GLuint, GLint, GLuint);
extern fp_glProgramUniform1ui gladglProgramUniform1ui;
#define glProgramUniform1ui gladglProgramUniform1ui
typedef void (* fp_glProgramUniform1uiv)(GLuint, GLint, GLsizei, const GLuint*);
extern fp_glProgramUniform1uiv gladglProgramUniform1uiv;
#define glProgramUniform1uiv gladglProgramUniform1uiv
typedef void (* fp_glProgramUniform2i)(GLuint, GLint, GLint, GLint);
extern fp_glProgramUniform2i gladglProgramUniform2i;
#define glProgramUniform2i gladglProgramUniform2i
typedef void (* fp_glProgramUniform2iv)(GLuint, GLint, GLsizei, const GLint*);
extern fp_glProgramUniform2iv gladglProgramUniform2iv;
#define glProgramUniform2iv gladglProgramUniform2iv
typedef void (* fp_glProgramUniform2f)(GLuint, GLint, GLfloat, GLfloat);
extern fp_glProgramUniform2f gladglProgramUniform2f;
#define glProgramUniform2f gladglProgramUniform2f
typedef void (* fp_glProgramUniform2fv)(GLuint, GLint, GLsizei, const GLfloat*);
extern fp_glProgramUniform2fv gladglProgramUniform2fv;
#define glProgramUniform2fv gladglProgramUniform2fv
typedef void (* fp_glProgramUniform2d)(GLuint, GLint, GLdouble, GLdouble);
extern fp_glProgramUniform2d gladglProgramUniform2d;
#define glProgramUniform2d gladglProgramUniform2d
typedef void (* fp_glProgramUniform2dv)(GLuint, GLint, GLsizei, const GLdouble*);
extern fp_glProgramUniform2dv gladglProgramUniform2dv;
#define glProgramUniform2dv gladglProgramUniform2dv
typedef void (* fp_glProgramUniform2ui)(GLuint, GLint, GLuint, GLuint);
extern fp_glProgramUniform2ui gladglProgramUniform2ui;
#define glProgramUniform2ui gladglProgramUniform2ui
typedef void (* fp_glProgramUniform2uiv)(GLuint, GLint, GLsizei, const GLuint*);
extern fp_glProgramUniform2uiv gladglProgramUniform2uiv;
#define glProgramUniform2uiv gladglProgramUniform2uiv
typedef void (* fp_glProgramUniform3i)(GLuint, GLint, GLint, GLint, GLint);
extern fp_glProgramUniform3i gladglProgramUniform3i;
#define glProgramUniform3i gladglProgramUniform3i
typedef void (* fp_glProgramUniform3iv)(GLuint, GLint, GLsizei, const GLint*);
extern fp_glProgramUniform3iv gladglProgramUniform3iv;
#define glProgramUniform3iv gladglProgramUniform3iv
typedef void (* fp_glProgramUniform3f)(GLuint, GLint, GLfloat, GLfloat, GLfloat);
extern fp_glProgramUniform3f gladglProgramUniform3f;
#define glProgramUniform3f gladglProgramUniform3f
typedef void (* fp_glProgramUniform3fv)(GLuint, GLint, GLsizei, const GLfloat*);
extern fp_glProgramUniform3fv gladglProgramUniform3fv;
#define glProgramUniform3fv gladglProgramUniform3fv
typedef void (* fp_glProgramUniform3d)(GLuint, GLint, GLdouble, GLdouble, GLdouble);
extern fp_glProgramUniform3d gladglProgramUniform3d;
#define glProgramUniform3d gladglProgramUniform3d
typedef void (* fp_glProgramUniform3dv)(GLuint, GLint, GLsizei, const GLdouble*);
extern fp_glProgramUniform3dv gladglProgramUniform3dv;
#define glProgramUniform3dv gladglProgramUniform3dv
typedef void (* fp_glProgramUniform3ui)(GLuint, GLint, GLuint, GLuint, GLuint);
extern fp_glProgramUniform3ui gladglProgramUniform3ui;
#define glProgramUniform3ui gladglProgramUniform3ui
typedef void (* fp_glProgramUniform3uiv)(GLuint, GLint, GLsizei, const GLuint*);
extern fp_glProgramUniform3uiv gladglProgramUniform3uiv;
#define glProgramUniform3uiv gladglProgramUniform3uiv
typedef void (* fp_glProgramUniform4i)(GLuint, GLint, GLint, GLint, GLint, GLint);
extern fp_glProgramUniform4i gladglProgramUniform4i;
#define glProgramUniform4i gladglProgramUniform4i
typedef void (* fp_glProgramUniform4iv)(GLuint, GLint, GLsizei, const GLint*);
extern fp_glProgramUniform4iv gladglProgramUniform4iv;
#define glProgramUniform4iv gladglProgramUniform4iv
typedef void (* fp_glProgramUniform4f)(GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glProgramUniform4f gladglProgramUniform4f;
#define glProgramUniform4f gladglProgramUniform4f
typedef void (* fp_glProgramUniform4fv)(GLuint, GLint, GLsizei, const GLfloat*);
extern fp_glProgramUniform4fv gladglProgramUniform4fv;
#define glProgramUniform4fv gladglProgramUniform4fv
typedef void (* fp_glProgramUniform4d)(GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glProgramUniform4d gladglProgramUniform4d;
#define glProgramUniform4d gladglProgramUniform4d
typedef void (* fp_glProgramUniform4dv)(GLuint, GLint, GLsizei, const GLdouble*);
extern fp_glProgramUniform4dv gladglProgramUniform4dv;
#define glProgramUniform4dv gladglProgramUniform4dv
typedef void (* fp_glProgramUniform4ui)(GLuint, GLint, GLuint, GLuint, GLuint, GLuint);
extern fp_glProgramUniform4ui gladglProgramUniform4ui;
#define glProgramUniform4ui gladglProgramUniform4ui
typedef void (* fp_glProgramUniform4uiv)(GLuint, GLint, GLsizei, const GLuint*);
extern fp_glProgramUniform4uiv gladglProgramUniform4uiv;
#define glProgramUniform4uiv gladglProgramUniform4uiv
typedef void (* fp_glProgramUniformMatrix2fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix2fv gladglProgramUniformMatrix2fv;
#define glProgramUniformMatrix2fv gladglProgramUniformMatrix2fv
typedef void (* fp_glProgramUniformMatrix3fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix3fv gladglProgramUniformMatrix3fv;
#define glProgramUniformMatrix3fv gladglProgramUniformMatrix3fv
typedef void (* fp_glProgramUniformMatrix4fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix4fv gladglProgramUniformMatrix4fv;
#define glProgramUniformMatrix4fv gladglProgramUniformMatrix4fv
typedef void (* fp_glProgramUniformMatrix2dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix2dv gladglProgramUniformMatrix2dv;
#define glProgramUniformMatrix2dv gladglProgramUniformMatrix2dv
typedef void (* fp_glProgramUniformMatrix3dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix3dv gladglProgramUniformMatrix3dv;
#define glProgramUniformMatrix3dv gladglProgramUniformMatrix3dv
typedef void (* fp_glProgramUniformMatrix4dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix4dv gladglProgramUniformMatrix4dv;
#define glProgramUniformMatrix4dv gladglProgramUniformMatrix4dv
typedef void (* fp_glProgramUniformMatrix2x3fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix2x3fv gladglProgramUniformMatrix2x3fv;
#define glProgramUniformMatrix2x3fv gladglProgramUniformMatrix2x3fv
typedef void (* fp_glProgramUniformMatrix3x2fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix3x2fv gladglProgramUniformMatrix3x2fv;
#define glProgramUniformMatrix3x2fv gladglProgramUniformMatrix3x2fv
typedef void (* fp_glProgramUniformMatrix2x4fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix2x4fv gladglProgramUniformMatrix2x4fv;
#define glProgramUniformMatrix2x4fv gladglProgramUniformMatrix2x4fv
typedef void (* fp_glProgramUniformMatrix4x2fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix4x2fv gladglProgramUniformMatrix4x2fv;
#define glProgramUniformMatrix4x2fv gladglProgramUniformMatrix4x2fv
typedef void (* fp_glProgramUniformMatrix3x4fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix3x4fv gladglProgramUniformMatrix3x4fv;
#define glProgramUniformMatrix3x4fv gladglProgramUniformMatrix3x4fv
typedef void (* fp_glProgramUniformMatrix4x3fv)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix4x3fv gladglProgramUniformMatrix4x3fv;
#define glProgramUniformMatrix4x3fv gladglProgramUniformMatrix4x3fv
typedef void (* fp_glProgramUniformMatrix2x3dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix2x3dv gladglProgramUniformMatrix2x3dv;
#define glProgramUniformMatrix2x3dv gladglProgramUniformMatrix2x3dv
typedef void (* fp_glProgramUniformMatrix3x2dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix3x2dv gladglProgramUniformMatrix3x2dv;
#define glProgramUniformMatrix3x2dv gladglProgramUniformMatrix3x2dv
typedef void (* fp_glProgramUniformMatrix2x4dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix2x4dv gladglProgramUniformMatrix2x4dv;
#define glProgramUniformMatrix2x4dv gladglProgramUniformMatrix2x4dv
typedef void (* fp_glProgramUniformMatrix4x2dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix4x2dv gladglProgramUniformMatrix4x2dv;
#define glProgramUniformMatrix4x2dv gladglProgramUniformMatrix4x2dv
typedef void (* fp_glProgramUniformMatrix3x4dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix3x4dv gladglProgramUniformMatrix3x4dv;
#define glProgramUniformMatrix3x4dv gladglProgramUniformMatrix3x4dv
typedef void (* fp_glProgramUniformMatrix4x3dv)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix4x3dv gladglProgramUniformMatrix4x3dv;
#define glProgramUniformMatrix4x3dv gladglProgramUniformMatrix4x3dv
typedef void (* fp_glValidateProgramPipeline)(GLuint);
extern fp_glValidateProgramPipeline gladglValidateProgramPipeline;
#define glValidateProgramPipeline gladglValidateProgramPipeline
typedef void (* fp_glGetProgramPipelineInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetProgramPipelineInfoLog gladglGetProgramPipelineInfoLog;
#define glGetProgramPipelineInfoLog gladglGetProgramPipelineInfoLog
typedef void (* fp_glVertexAttribL1d)(GLuint, GLdouble);
extern fp_glVertexAttribL1d gladglVertexAttribL1d;
#define glVertexAttribL1d gladglVertexAttribL1d
typedef void (* fp_glVertexAttribL2d)(GLuint, GLdouble, GLdouble);
extern fp_glVertexAttribL2d gladglVertexAttribL2d;
#define glVertexAttribL2d gladglVertexAttribL2d
typedef void (* fp_glVertexAttribL3d)(GLuint, GLdouble, GLdouble, GLdouble);
extern fp_glVertexAttribL3d gladglVertexAttribL3d;
#define glVertexAttribL3d gladglVertexAttribL3d
typedef void (* fp_glVertexAttribL4d)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glVertexAttribL4d gladglVertexAttribL4d;
#define glVertexAttribL4d gladglVertexAttribL4d
typedef void (* fp_glVertexAttribL1dv)(GLuint, const GLdouble*);
extern fp_glVertexAttribL1dv gladglVertexAttribL1dv;
#define glVertexAttribL1dv gladglVertexAttribL1dv
typedef void (* fp_glVertexAttribL2dv)(GLuint, const GLdouble*);
extern fp_glVertexAttribL2dv gladglVertexAttribL2dv;
#define glVertexAttribL2dv gladglVertexAttribL2dv
typedef void (* fp_glVertexAttribL3dv)(GLuint, const GLdouble*);
extern fp_glVertexAttribL3dv gladglVertexAttribL3dv;
#define glVertexAttribL3dv gladglVertexAttribL3dv
typedef void (* fp_glVertexAttribL4dv)(GLuint, const GLdouble*);
extern fp_glVertexAttribL4dv gladglVertexAttribL4dv;
#define glVertexAttribL4dv gladglVertexAttribL4dv
typedef void (* fp_glVertexAttribLPointer)(GLuint, GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glVertexAttribLPointer gladglVertexAttribLPointer;
#define glVertexAttribLPointer gladglVertexAttribLPointer
typedef void (* fp_glGetVertexAttribLdv)(GLuint, GLenum, GLdouble*);
extern fp_glGetVertexAttribLdv gladglGetVertexAttribLdv;
#define glGetVertexAttribLdv gladglGetVertexAttribLdv
typedef void (* fp_glViewportArrayv)(GLuint, GLsizei, const GLfloat*);
extern fp_glViewportArrayv gladglViewportArrayv;
#define glViewportArrayv gladglViewportArrayv
typedef void (* fp_glViewportIndexedf)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glViewportIndexedf gladglViewportIndexedf;
#define glViewportIndexedf gladglViewportIndexedf
typedef void (* fp_glViewportIndexedfv)(GLuint, const GLfloat*);
extern fp_glViewportIndexedfv gladglViewportIndexedfv;
#define glViewportIndexedfv gladglViewportIndexedfv
typedef void (* fp_glScissorArrayv)(GLuint, GLsizei, const GLint*);
extern fp_glScissorArrayv gladglScissorArrayv;
#define glScissorArrayv gladglScissorArrayv
typedef void (* fp_glScissorIndexed)(GLuint, GLint, GLint, GLsizei, GLsizei);
extern fp_glScissorIndexed gladglScissorIndexed;
#define glScissorIndexed gladglScissorIndexed
typedef void (* fp_glScissorIndexedv)(GLuint, const GLint*);
extern fp_glScissorIndexedv gladglScissorIndexedv;
#define glScissorIndexedv gladglScissorIndexedv
typedef void (* fp_glDepthRangeArrayv)(GLuint, GLsizei, const GLdouble*);
extern fp_glDepthRangeArrayv gladglDepthRangeArrayv;
#define glDepthRangeArrayv gladglDepthRangeArrayv
typedef void (* fp_glDepthRangeIndexed)(GLuint, GLdouble, GLdouble);
extern fp_glDepthRangeIndexed gladglDepthRangeIndexed;
#define glDepthRangeIndexed gladglDepthRangeIndexed
typedef void (* fp_glGetFloati_v)(GLenum, GLuint, GLfloat*);
extern fp_glGetFloati_v gladglGetFloati_v;
#define glGetFloati_v gladglGetFloati_v
typedef void (* fp_glGetDoublei_v)(GLenum, GLuint, GLdouble*);
extern fp_glGetDoublei_v gladglGetDoublei_v;
#define glGetDoublei_v gladglGetDoublei_v
int GL_VERSION_4_2;
typedef void (* fp_glDrawArraysInstancedBaseInstance)(GLenum, GLint, GLsizei, GLsizei, GLuint);
extern fp_glDrawArraysInstancedBaseInstance gladglDrawArraysInstancedBaseInstance;
#define glDrawArraysInstancedBaseInstance gladglDrawArraysInstancedBaseInstance
typedef void (* fp_glDrawElementsInstancedBaseInstance)(GLenum, GLsizei, GLenum, const void*, GLsizei, GLuint);
extern fp_glDrawElementsInstancedBaseInstance gladglDrawElementsInstancedBaseInstance;
#define glDrawElementsInstancedBaseInstance gladglDrawElementsInstancedBaseInstance
typedef void (* fp_glDrawElementsInstancedBaseVertexBaseInstance)(GLenum, GLsizei, GLenum, const void*, GLsizei, GLint, GLuint);
extern fp_glDrawElementsInstancedBaseVertexBaseInstance gladglDrawElementsInstancedBaseVertexBaseInstance;
#define glDrawElementsInstancedBaseVertexBaseInstance gladglDrawElementsInstancedBaseVertexBaseInstance
typedef void (* fp_glGetInternalformati64v)(GLenum, GLenum, GLenum, GLsizei, GLint64*);
extern fp_glGetInternalformati64v gladglGetInternalformati64v;
#define glGetInternalformati64v gladglGetInternalformati64v
typedef void (* fp_glGetActiveAtomicCounterBufferiv)(GLuint, GLuint, GLenum, GLint*);
extern fp_glGetActiveAtomicCounterBufferiv gladglGetActiveAtomicCounterBufferiv;
#define glGetActiveAtomicCounterBufferiv gladglGetActiveAtomicCounterBufferiv
typedef void (* fp_glBindImageTexture)(GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum);
extern fp_glBindImageTexture gladglBindImageTexture;
#define glBindImageTexture gladglBindImageTexture
typedef void (* fp_glMemoryBarrier)(GLbitfield);
extern fp_glMemoryBarrier gladglMemoryBarrier;
#define glMemoryBarrier gladglMemoryBarrier
typedef void (* fp_glTexStorage1D)(GLenum, GLsizei, GLenum, GLsizei);
extern fp_glTexStorage1D gladglTexStorage1D;
#define glTexStorage1D gladglTexStorage1D
typedef void (* fp_glTexStorage2D)(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
extern fp_glTexStorage2D gladglTexStorage2D;
#define glTexStorage2D gladglTexStorage2D
typedef void (* fp_glTexStorage3D)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei);
extern fp_glTexStorage3D gladglTexStorage3D;
#define glTexStorage3D gladglTexStorage3D
typedef void (* fp_glDrawTransformFeedbackInstanced)(GLenum, GLuint, GLsizei);
extern fp_glDrawTransformFeedbackInstanced gladglDrawTransformFeedbackInstanced;
#define glDrawTransformFeedbackInstanced gladglDrawTransformFeedbackInstanced
typedef void (* fp_glDrawTransformFeedbackStreamInstanced)(GLenum, GLuint, GLuint, GLsizei);
extern fp_glDrawTransformFeedbackStreamInstanced gladglDrawTransformFeedbackStreamInstanced;
#define glDrawTransformFeedbackStreamInstanced gladglDrawTransformFeedbackStreamInstanced
int GL_VERSION_4_3;
typedef void (* fp_glClearBufferData)(GLenum, GLenum, GLenum, GLenum, const void*);
extern fp_glClearBufferData gladglClearBufferData;
#define glClearBufferData gladglClearBufferData
typedef void (* fp_glClearBufferSubData)(GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, const void*);
extern fp_glClearBufferSubData gladglClearBufferSubData;
#define glClearBufferSubData gladglClearBufferSubData
typedef void (* fp_glDispatchCompute)(GLuint, GLuint, GLuint);
extern fp_glDispatchCompute gladglDispatchCompute;
#define glDispatchCompute gladglDispatchCompute
typedef void (* fp_glDispatchComputeIndirect)(GLintptr);
extern fp_glDispatchComputeIndirect gladglDispatchComputeIndirect;
#define glDispatchComputeIndirect gladglDispatchComputeIndirect
typedef void (* fp_glCopyImageSubData)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei);
extern fp_glCopyImageSubData gladglCopyImageSubData;
#define glCopyImageSubData gladglCopyImageSubData
typedef void (* fp_glFramebufferParameteri)(GLenum, GLenum, GLint);
extern fp_glFramebufferParameteri gladglFramebufferParameteri;
#define glFramebufferParameteri gladglFramebufferParameteri
typedef void (* fp_glGetFramebufferParameteriv)(GLenum, GLenum, GLint*);
extern fp_glGetFramebufferParameteriv gladglGetFramebufferParameteriv;
#define glGetFramebufferParameteriv gladglGetFramebufferParameteriv
typedef void (* fp_glInvalidateTexSubImage)(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei);
extern fp_glInvalidateTexSubImage gladglInvalidateTexSubImage;
#define glInvalidateTexSubImage gladglInvalidateTexSubImage
typedef void (* fp_glInvalidateTexImage)(GLuint, GLint);
extern fp_glInvalidateTexImage gladglInvalidateTexImage;
#define glInvalidateTexImage gladglInvalidateTexImage
typedef void (* fp_glInvalidateBufferSubData)(GLuint, GLintptr, GLsizeiptr);
extern fp_glInvalidateBufferSubData gladglInvalidateBufferSubData;
#define glInvalidateBufferSubData gladglInvalidateBufferSubData
typedef void (* fp_glInvalidateBufferData)(GLuint);
extern fp_glInvalidateBufferData gladglInvalidateBufferData;
#define glInvalidateBufferData gladglInvalidateBufferData
typedef void (* fp_glInvalidateFramebuffer)(GLenum, GLsizei, const GLenum*);
extern fp_glInvalidateFramebuffer gladglInvalidateFramebuffer;
#define glInvalidateFramebuffer gladglInvalidateFramebuffer
typedef void (* fp_glInvalidateSubFramebuffer)(GLenum, GLsizei, const GLenum*, GLint, GLint, GLsizei, GLsizei);
extern fp_glInvalidateSubFramebuffer gladglInvalidateSubFramebuffer;
#define glInvalidateSubFramebuffer gladglInvalidateSubFramebuffer
typedef void (* fp_glMultiDrawArraysIndirect)(GLenum, const void*, GLsizei, GLsizei);
extern fp_glMultiDrawArraysIndirect gladglMultiDrawArraysIndirect;
#define glMultiDrawArraysIndirect gladglMultiDrawArraysIndirect
typedef void (* fp_glMultiDrawElementsIndirect)(GLenum, GLenum, const void*, GLsizei, GLsizei);
extern fp_glMultiDrawElementsIndirect gladglMultiDrawElementsIndirect;
#define glMultiDrawElementsIndirect gladglMultiDrawElementsIndirect
typedef void (* fp_glGetProgramInterfaceiv)(GLuint, GLenum, GLenum, GLint*);
extern fp_glGetProgramInterfaceiv gladglGetProgramInterfaceiv;
#define glGetProgramInterfaceiv gladglGetProgramInterfaceiv
typedef GLuint (* fp_glGetProgramResourceIndex)(GLuint, GLenum, const GLchar*);
extern fp_glGetProgramResourceIndex gladglGetProgramResourceIndex;
#define glGetProgramResourceIndex gladglGetProgramResourceIndex
typedef void (* fp_glGetProgramResourceName)(GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetProgramResourceName gladglGetProgramResourceName;
#define glGetProgramResourceName gladglGetProgramResourceName
typedef void (* fp_glGetProgramResourceiv)(GLuint, GLenum, GLuint, GLsizei, const GLenum*, GLsizei, GLsizei*, GLint*);
extern fp_glGetProgramResourceiv gladglGetProgramResourceiv;
#define glGetProgramResourceiv gladglGetProgramResourceiv
typedef GLint (* fp_glGetProgramResourceLocation)(GLuint, GLenum, const GLchar*);
extern fp_glGetProgramResourceLocation gladglGetProgramResourceLocation;
#define glGetProgramResourceLocation gladglGetProgramResourceLocation
typedef GLint (* fp_glGetProgramResourceLocationIndex)(GLuint, GLenum, const GLchar*);
extern fp_glGetProgramResourceLocationIndex gladglGetProgramResourceLocationIndex;
#define glGetProgramResourceLocationIndex gladglGetProgramResourceLocationIndex
typedef void (* fp_glShaderStorageBlockBinding)(GLuint, GLuint, GLuint);
extern fp_glShaderStorageBlockBinding gladglShaderStorageBlockBinding;
#define glShaderStorageBlockBinding gladglShaderStorageBlockBinding
typedef void (* fp_glTexBufferRange)(GLenum, GLenum, GLuint, GLintptr, GLsizeiptr);
extern fp_glTexBufferRange gladglTexBufferRange;
#define glTexBufferRange gladglTexBufferRange
typedef void (* fp_glTexStorage2DMultisample)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean);
extern fp_glTexStorage2DMultisample gladglTexStorage2DMultisample;
#define glTexStorage2DMultisample gladglTexStorage2DMultisample
typedef void (* fp_glTexStorage3DMultisample)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean);
extern fp_glTexStorage3DMultisample gladglTexStorage3DMultisample;
#define glTexStorage3DMultisample gladglTexStorage3DMultisample
typedef void (* fp_glTextureView)(GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint);
extern fp_glTextureView gladglTextureView;
#define glTextureView gladglTextureView
typedef void (* fp_glBindVertexBuffer)(GLuint, GLuint, GLintptr, GLsizei);
extern fp_glBindVertexBuffer gladglBindVertexBuffer;
#define glBindVertexBuffer gladglBindVertexBuffer
typedef void (* fp_glVertexAttribFormat)(GLuint, GLint, GLenum, GLboolean, GLuint);
extern fp_glVertexAttribFormat gladglVertexAttribFormat;
#define glVertexAttribFormat gladglVertexAttribFormat
typedef void (* fp_glVertexAttribIFormat)(GLuint, GLint, GLenum, GLuint);
extern fp_glVertexAttribIFormat gladglVertexAttribIFormat;
#define glVertexAttribIFormat gladglVertexAttribIFormat
typedef void (* fp_glVertexAttribLFormat)(GLuint, GLint, GLenum, GLuint);
extern fp_glVertexAttribLFormat gladglVertexAttribLFormat;
#define glVertexAttribLFormat gladglVertexAttribLFormat
typedef void (* fp_glVertexAttribBinding)(GLuint, GLuint);
extern fp_glVertexAttribBinding gladglVertexAttribBinding;
#define glVertexAttribBinding gladglVertexAttribBinding
typedef void (* fp_glVertexBindingDivisor)(GLuint, GLuint);
extern fp_glVertexBindingDivisor gladglVertexBindingDivisor;
#define glVertexBindingDivisor gladglVertexBindingDivisor
typedef void (* fp_glDebugMessageControl)(GLenum, GLenum, GLenum, GLsizei, const GLuint*, GLboolean);
extern fp_glDebugMessageControl gladglDebugMessageControl;
#define glDebugMessageControl gladglDebugMessageControl
typedef void (* fp_glDebugMessageInsert)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*);
extern fp_glDebugMessageInsert gladglDebugMessageInsert;
#define glDebugMessageInsert gladglDebugMessageInsert
typedef void (* fp_glDebugMessageCallback)(GLDEBUGPROC, const void*);
extern fp_glDebugMessageCallback gladglDebugMessageCallback;
#define glDebugMessageCallback gladglDebugMessageCallback
typedef GLuint (* fp_glGetDebugMessageLog)(GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*);
extern fp_glGetDebugMessageLog gladglGetDebugMessageLog;
#define glGetDebugMessageLog gladglGetDebugMessageLog
typedef void (* fp_glPushDebugGroup)(GLenum, GLuint, GLsizei, const GLchar*);
extern fp_glPushDebugGroup gladglPushDebugGroup;
#define glPushDebugGroup gladglPushDebugGroup
typedef void (* fp_glPopDebugGroup)();
extern fp_glPopDebugGroup gladglPopDebugGroup;
#define glPopDebugGroup gladglPopDebugGroup
typedef void (* fp_glObjectLabel)(GLenum, GLuint, GLsizei, const GLchar*);
extern fp_glObjectLabel gladglObjectLabel;
#define glObjectLabel gladglObjectLabel
typedef void (* fp_glGetObjectLabel)(GLenum, GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetObjectLabel gladglGetObjectLabel;
#define glGetObjectLabel gladglGetObjectLabel
typedef void (* fp_glObjectPtrLabel)(const void*, GLsizei, const GLchar*);
extern fp_glObjectPtrLabel gladglObjectPtrLabel;
#define glObjectPtrLabel gladglObjectPtrLabel
typedef void (* fp_glGetObjectPtrLabel)(const void*, GLsizei, GLsizei*, GLchar*);
extern fp_glGetObjectPtrLabel gladglGetObjectPtrLabel;
#define glGetObjectPtrLabel gladglGetObjectPtrLabel
int GL_VERSION_4_4;
typedef void (* fp_glBufferStorage)(GLenum, GLsizeiptr, const void*, GLbitfield);
extern fp_glBufferStorage gladglBufferStorage;
#define glBufferStorage gladglBufferStorage
typedef void (* fp_glClearTexImage)(GLuint, GLint, GLenum, GLenum, const void*);
extern fp_glClearTexImage gladglClearTexImage;
#define glClearTexImage gladglClearTexImage
typedef void (* fp_glClearTexSubImage)(GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const void*);
extern fp_glClearTexSubImage gladglClearTexSubImage;
#define glClearTexSubImage gladglClearTexSubImage
typedef void (* fp_glBindBuffersBase)(GLenum, GLuint, GLsizei, const GLuint*);
extern fp_glBindBuffersBase gladglBindBuffersBase;
#define glBindBuffersBase gladglBindBuffersBase
typedef void (* fp_glBindBuffersRange)(GLenum, GLuint, GLsizei, const GLuint*, const GLintptr*, const GLsizeiptr*);
extern fp_glBindBuffersRange gladglBindBuffersRange;
#define glBindBuffersRange gladglBindBuffersRange
typedef void (* fp_glBindTextures)(GLuint, GLsizei, const GLuint*);
extern fp_glBindTextures gladglBindTextures;
#define glBindTextures gladglBindTextures
typedef void (* fp_glBindSamplers)(GLuint, GLsizei, const GLuint*);
extern fp_glBindSamplers gladglBindSamplers;
#define glBindSamplers gladglBindSamplers
typedef void (* fp_glBindImageTextures)(GLuint, GLsizei, const GLuint*);
extern fp_glBindImageTextures gladglBindImageTextures;
#define glBindImageTextures gladglBindImageTextures
typedef void (* fp_glBindVertexBuffers)(GLuint, GLsizei, const GLuint*, const GLintptr*, const GLsizei*);
extern fp_glBindVertexBuffers gladglBindVertexBuffers;
#define glBindVertexBuffers gladglBindVertexBuffers
int GL_SGIX_pixel_tiles;
#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX 0x813E
#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX 0x813F
#define GL_PIXEL_TILE_WIDTH_SGIX 0x8140
#define GL_PIXEL_TILE_HEIGHT_SGIX 0x8141
#define GL_PIXEL_TILE_GRID_WIDTH_SGIX 0x8142
#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX 0x8143
#define GL_PIXEL_TILE_GRID_DEPTH_SGIX 0x8144
#define GL_PIXEL_TILE_CACHE_SIZE_SGIX 0x8145
int GL_NV_point_sprite;
#define GL_POINT_SPRITE_NV 0x8861
#define GL_COORD_REPLACE_NV 0x8862
#define GL_POINT_SPRITE_R_MODE_NV 0x8863
typedef void (* fp_glPointParameteriNV)(GLenum, GLint);
extern fp_glPointParameteriNV gladglPointParameteriNV;
#define glPointParameteriNV gladglPointParameteriNV
typedef void (* fp_glPointParameterivNV)(GLenum, const GLint*);
extern fp_glPointParameterivNV gladglPointParameterivNV;
#define glPointParameterivNV gladglPointParameterivNV
int GL_APPLE_element_array;
#define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
typedef void (* fp_glElementPointerAPPLE)(GLenum, const GLvoid*);
extern fp_glElementPointerAPPLE gladglElementPointerAPPLE;
#define glElementPointerAPPLE gladglElementPointerAPPLE
typedef void (* fp_glDrawElementArrayAPPLE)(GLenum, GLint, GLsizei);
extern fp_glDrawElementArrayAPPLE gladglDrawElementArrayAPPLE;
#define glDrawElementArrayAPPLE gladglDrawElementArrayAPPLE
typedef void (* fp_glDrawRangeElementArrayAPPLE)(GLenum, GLuint, GLuint, GLint, GLsizei);
extern fp_glDrawRangeElementArrayAPPLE gladglDrawRangeElementArrayAPPLE;
#define glDrawRangeElementArrayAPPLE gladglDrawRangeElementArrayAPPLE
typedef void (* fp_glMultiDrawElementArrayAPPLE)(GLenum, const GLint*, const GLsizei*, GLsizei);
extern fp_glMultiDrawElementArrayAPPLE gladglMultiDrawElementArrayAPPLE;
#define glMultiDrawElementArrayAPPLE gladglMultiDrawElementArrayAPPLE
typedef void (* fp_glMultiDrawRangeElementArrayAPPLE)(GLenum, GLuint, GLuint, const GLint*, const GLsizei*, GLsizei);
extern fp_glMultiDrawRangeElementArrayAPPLE gladglMultiDrawRangeElementArrayAPPLE;
#define glMultiDrawRangeElementArrayAPPLE gladglMultiDrawRangeElementArrayAPPLE
int GL_AMD_multi_draw_indirect;
typedef void (* fp_glMultiDrawArraysIndirectAMD)(GLenum, const GLvoid*, GLsizei, GLsizei);
extern fp_glMultiDrawArraysIndirectAMD gladglMultiDrawArraysIndirectAMD;
#define glMultiDrawArraysIndirectAMD gladglMultiDrawArraysIndirectAMD
typedef void (* fp_glMultiDrawElementsIndirectAMD)(GLenum, GLenum, const GLvoid*, GLsizei, GLsizei);
extern fp_glMultiDrawElementsIndirectAMD gladglMultiDrawElementsIndirectAMD;
#define glMultiDrawElementsIndirectAMD gladglMultiDrawElementsIndirectAMD
int GL_EXT_blend_subtract;
#define GL_FUNC_SUBTRACT_EXT 0x800A
#define GL_FUNC_REVERSE_SUBTRACT_EXT 0x800B
int GL_SGIX_tag_sample_buffer;
typedef void (* fp_glTagSampleBufferSGIX)();
extern fp_glTagSampleBufferSGIX gladglTagSampleBufferSGIX;
#define glTagSampleBufferSGIX gladglTagSampleBufferSGIX
int GL_IBM_texture_mirrored_repeat;
#define GL_MIRRORED_REPEAT_IBM 0x8370
int GL_APPLE_transform_hint;
#define GL_TRANSFORM_HINT_APPLE 0x85B1
int GL_ATI_separate_stencil;
#define GL_STENCIL_BACK_FUNC_ATI 0x8800
#define GL_STENCIL_BACK_FAIL_ATI 0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI 0x8803
typedef void (* fp_glStencilOpSeparateATI)(GLenum, GLenum, GLenum, GLenum);
extern fp_glStencilOpSeparateATI gladglStencilOpSeparateATI;
#define glStencilOpSeparateATI gladglStencilOpSeparateATI
typedef void (* fp_glStencilFuncSeparateATI)(GLenum, GLenum, GLint, GLuint);
extern fp_glStencilFuncSeparateATI gladglStencilFuncSeparateATI;
#define glStencilFuncSeparateATI gladglStencilFuncSeparateATI
int GL_NV_vertex_program2_option;
#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV 0x88F4
#define GL_MAX_PROGRAM_CALL_DEPTH_NV 0x88F5
int GL_EXT_texture_buffer_object;
#define GL_TEXTURE_BUFFER_EXT 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT 0x8C2B
#define GL_TEXTURE_BINDING_BUFFER_EXT 0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT 0x8C2D
#define GL_TEXTURE_BUFFER_FORMAT_EXT 0x8C2E
typedef void (* fp_glTexBufferEXT)(GLenum, GLenum, GLuint);
extern fp_glTexBufferEXT gladglTexBufferEXT;
#define glTexBufferEXT gladglTexBufferEXT
int GL_ARB_vertex_blend;
#define GL_MAX_VERTEX_UNITS_ARB 0x86A4
#define GL_ACTIVE_VERTEX_UNITS_ARB 0x86A5
#define GL_WEIGHT_SUM_UNITY_ARB 0x86A6
#define GL_VERTEX_BLEND_ARB 0x86A7
#define GL_CURRENT_WEIGHT_ARB 0x86A8
#define GL_WEIGHT_ARRAY_TYPE_ARB 0x86A9
#define GL_WEIGHT_ARRAY_STRIDE_ARB 0x86AA
#define GL_WEIGHT_ARRAY_SIZE_ARB 0x86AB
#define GL_WEIGHT_ARRAY_POINTER_ARB 0x86AC
#define GL_WEIGHT_ARRAY_ARB 0x86AD
#define GL_MODELVIEW0_ARB 0x1700
#define GL_MODELVIEW1_ARB 0x850A
#define GL_MODELVIEW2_ARB 0x8722
#define GL_MODELVIEW3_ARB 0x8723
#define GL_MODELVIEW4_ARB 0x8724
#define GL_MODELVIEW5_ARB 0x8725
#define GL_MODELVIEW6_ARB 0x8726
#define GL_MODELVIEW7_ARB 0x8727
#define GL_MODELVIEW8_ARB 0x8728
#define GL_MODELVIEW9_ARB 0x8729
#define GL_MODELVIEW10_ARB 0x872A
#define GL_MODELVIEW11_ARB 0x872B
#define GL_MODELVIEW12_ARB 0x872C
#define GL_MODELVIEW13_ARB 0x872D
#define GL_MODELVIEW14_ARB 0x872E
#define GL_MODELVIEW15_ARB 0x872F
#define GL_MODELVIEW16_ARB 0x8730
#define GL_MODELVIEW17_ARB 0x8731
#define GL_MODELVIEW18_ARB 0x8732
#define GL_MODELVIEW19_ARB 0x8733
#define GL_MODELVIEW20_ARB 0x8734
#define GL_MODELVIEW21_ARB 0x8735
#define GL_MODELVIEW22_ARB 0x8736
#define GL_MODELVIEW23_ARB 0x8737
#define GL_MODELVIEW24_ARB 0x8738
#define GL_MODELVIEW25_ARB 0x8739
#define GL_MODELVIEW26_ARB 0x873A
#define GL_MODELVIEW27_ARB 0x873B
#define GL_MODELVIEW28_ARB 0x873C
#define GL_MODELVIEW29_ARB 0x873D
#define GL_MODELVIEW30_ARB 0x873E
#define GL_MODELVIEW31_ARB 0x873F
typedef void (* fp_glWeightbvARB)(GLint, const GLbyte*);
extern fp_glWeightbvARB gladglWeightbvARB;
#define glWeightbvARB gladglWeightbvARB
typedef void (* fp_glWeightsvARB)(GLint, const GLshort*);
extern fp_glWeightsvARB gladglWeightsvARB;
#define glWeightsvARB gladglWeightsvARB
typedef void (* fp_glWeightivARB)(GLint, const GLint*);
extern fp_glWeightivARB gladglWeightivARB;
#define glWeightivARB gladglWeightivARB
typedef void (* fp_glWeightfvARB)(GLint, const GLfloat*);
extern fp_glWeightfvARB gladglWeightfvARB;
#define glWeightfvARB gladglWeightfvARB
typedef void (* fp_glWeightdvARB)(GLint, const GLdouble*);
extern fp_glWeightdvARB gladglWeightdvARB;
#define glWeightdvARB gladglWeightdvARB
typedef void (* fp_glWeightubvARB)(GLint, const GLubyte*);
extern fp_glWeightubvARB gladglWeightubvARB;
#define glWeightubvARB gladglWeightubvARB
typedef void (* fp_glWeightusvARB)(GLint, const GLushort*);
extern fp_glWeightusvARB gladglWeightusvARB;
#define glWeightusvARB gladglWeightusvARB
typedef void (* fp_glWeightuivARB)(GLint, const GLuint*);
extern fp_glWeightuivARB gladglWeightuivARB;
#define glWeightuivARB gladglWeightuivARB
typedef void (* fp_glWeightPointerARB)(GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glWeightPointerARB gladglWeightPointerARB;
#define glWeightPointerARB gladglWeightPointerARB
typedef void (* fp_glVertexBlendARB)(GLint);
extern fp_glVertexBlendARB gladglVertexBlendARB;
#define glVertexBlendARB gladglVertexBlendARB
int GL_NV_vertex_program2;
int GL_ARB_program_interface_query;
int GL_EXT_misc_attribute;
int GL_NV_multisample_coverage;
#define GL_SAMPLES_ARB 0x80A9
#define GL_COLOR_SAMPLES_NV 0x8E20
int GL_ARB_shading_language_packing;
int GL_EXT_texture_cube_map;
#define GL_NORMAL_MAP_EXT 0x8511
#define GL_REFLECTION_MAP_EXT 0x8512
#define GL_TEXTURE_CUBE_MAP_EXT 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP_EXT 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP_EXT 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT 0x851C
int GL_ARB_texture_stencil8;
int GL_EXT_index_func;
#define GL_INDEX_TEST_EXT 0x81B5
#define GL_INDEX_TEST_FUNC_EXT 0x81B6
#define GL_INDEX_TEST_REF_EXT 0x81B7
typedef void (* fp_glIndexFuncEXT)(GLenum, GLclampf);
extern fp_glIndexFuncEXT gladglIndexFuncEXT;
#define glIndexFuncEXT gladglIndexFuncEXT
int GL_OES_compressed_paletted_texture;
#define GL_PALETTE4_RGB8_OES 0x8B90
#define GL_PALETTE4_RGBA8_OES 0x8B91
#define GL_PALETTE4_R5_G6_B5_OES 0x8B92
#define GL_PALETTE4_RGBA4_OES 0x8B93
#define GL_PALETTE4_RGB5_A1_OES 0x8B94
#define GL_PALETTE8_RGB8_OES 0x8B95
#define GL_PALETTE8_RGBA8_OES 0x8B96
#define GL_PALETTE8_R5_G6_B5_OES 0x8B97
#define GL_PALETTE8_RGBA4_OES 0x8B98
#define GL_PALETTE8_RGB5_A1_OES 0x8B99
int GL_NV_depth_clamp;
#define GL_DEPTH_CLAMP_NV 0x864F
int GL_NV_shader_buffer_load;
#define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#define GL_GPU_ADDRESS_NV 0x8F34
#define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
typedef void (* fp_glMakeBufferResidentNV)(GLenum, GLenum);
extern fp_glMakeBufferResidentNV gladglMakeBufferResidentNV;
#define glMakeBufferResidentNV gladglMakeBufferResidentNV
typedef void (* fp_glMakeBufferNonResidentNV)(GLenum);
extern fp_glMakeBufferNonResidentNV gladglMakeBufferNonResidentNV;
#define glMakeBufferNonResidentNV gladglMakeBufferNonResidentNV
typedef GLboolean (* fp_glIsBufferResidentNV)(GLenum);
extern fp_glIsBufferResidentNV gladglIsBufferResidentNV;
#define glIsBufferResidentNV gladglIsBufferResidentNV
typedef void (* fp_glMakeNamedBufferResidentNV)(GLuint, GLenum);
extern fp_glMakeNamedBufferResidentNV gladglMakeNamedBufferResidentNV;
#define glMakeNamedBufferResidentNV gladglMakeNamedBufferResidentNV
typedef void (* fp_glMakeNamedBufferNonResidentNV)(GLuint);
extern fp_glMakeNamedBufferNonResidentNV gladglMakeNamedBufferNonResidentNV;
#define glMakeNamedBufferNonResidentNV gladglMakeNamedBufferNonResidentNV
typedef GLboolean (* fp_glIsNamedBufferResidentNV)(GLuint);
extern fp_glIsNamedBufferResidentNV gladglIsNamedBufferResidentNV;
#define glIsNamedBufferResidentNV gladglIsNamedBufferResidentNV
typedef void (* fp_glGetBufferParameterui64vNV)(GLenum, GLenum, GLuint64EXT*);
extern fp_glGetBufferParameterui64vNV gladglGetBufferParameterui64vNV;
#define glGetBufferParameterui64vNV gladglGetBufferParameterui64vNV
typedef void (* fp_glGetNamedBufferParameterui64vNV)(GLuint, GLenum, GLuint64EXT*);
extern fp_glGetNamedBufferParameterui64vNV gladglGetNamedBufferParameterui64vNV;
#define glGetNamedBufferParameterui64vNV gladglGetNamedBufferParameterui64vNV
typedef void (* fp_glGetIntegerui64vNV)(GLenum, GLuint64EXT*);
extern fp_glGetIntegerui64vNV gladglGetIntegerui64vNV;
#define glGetIntegerui64vNV gladglGetIntegerui64vNV
typedef void (* fp_glUniformui64NV)(GLint, GLuint64EXT);
extern fp_glUniformui64NV gladglUniformui64NV;
#define glUniformui64NV gladglUniformui64NV
typedef void (* fp_glUniformui64vNV)(GLint, GLsizei, const GLuint64EXT*);
extern fp_glUniformui64vNV gladglUniformui64vNV;
#define glUniformui64vNV gladglUniformui64vNV
typedef void (* fp_glGetUniformui64vNV)(GLuint, GLint, GLuint64EXT*);
extern fp_glGetUniformui64vNV gladglGetUniformui64vNV;
#define glGetUniformui64vNV gladglGetUniformui64vNV
typedef void (* fp_glProgramUniformui64NV)(GLuint, GLint, GLuint64EXT);
extern fp_glProgramUniformui64NV gladglProgramUniformui64NV;
#define glProgramUniformui64NV gladglProgramUniformui64NV
typedef void (* fp_glProgramUniformui64vNV)(GLuint, GLint, GLsizei, const GLuint64EXT*);
extern fp_glProgramUniformui64vNV gladglProgramUniformui64vNV;
#define glProgramUniformui64vNV gladglProgramUniformui64vNV
int GL_EXT_color_subtable;
typedef void (* fp_glColorSubTableEXT)(GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glColorSubTableEXT gladglColorSubTableEXT;
#define glColorSubTableEXT gladglColorSubTableEXT
typedef void (* fp_glCopyColorSubTableEXT)(GLenum, GLsizei, GLint, GLint, GLsizei);
extern fp_glCopyColorSubTableEXT gladglCopyColorSubTableEXT;
#define glCopyColorSubTableEXT gladglCopyColorSubTableEXT
int GL_SUNX_constant_data;
#define GL_UNPACK_CONSTANT_DATA_SUNX 0x81D5
#define GL_TEXTURE_CONSTANT_DATA_SUNX 0x81D6
typedef void (* fp_glFinishTextureSUNX)();
extern fp_glFinishTextureSUNX gladglFinishTextureSUNX;
#define glFinishTextureSUNX gladglFinishTextureSUNX
int GL_EXT_multi_draw_arrays;
typedef void (* fp_glMultiDrawArraysEXT)(GLenum, const GLint*, const GLsizei*, GLsizei);
extern fp_glMultiDrawArraysEXT gladglMultiDrawArraysEXT;
#define glMultiDrawArraysEXT gladglMultiDrawArraysEXT
typedef void (* fp_glMultiDrawElementsEXT)(GLenum, const GLsizei*, GLenum, const GLvoid**, GLsizei);
extern fp_glMultiDrawElementsEXT gladglMultiDrawElementsEXT;
#define glMultiDrawElementsEXT gladglMultiDrawElementsEXT
int GL_ARB_shader_atomic_counters;
int GL_ARB_arrays_of_arrays;
int GL_NV_conditional_render;
#define GL_QUERY_WAIT_NV 0x8E13
#define GL_QUERY_NO_WAIT_NV 0x8E14
#define GL_QUERY_BY_REGION_WAIT_NV 0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT_NV 0x8E16
typedef void (* fp_glBeginConditionalRenderNV)(GLuint, GLenum);
extern fp_glBeginConditionalRenderNV gladglBeginConditionalRenderNV;
#define glBeginConditionalRenderNV gladglBeginConditionalRenderNV
typedef void (* fp_glEndConditionalRenderNV)();
extern fp_glEndConditionalRenderNV gladglEndConditionalRenderNV;
#define glEndConditionalRenderNV gladglEndConditionalRenderNV
int GL_EXT_texture_env_combine;
#define GL_COMBINE_EXT 0x8570
#define GL_COMBINE_RGB_EXT 0x8571
#define GL_COMBINE_ALPHA_EXT 0x8572
#define GL_RGB_SCALE_EXT 0x8573
#define GL_ADD_SIGNED_EXT 0x8574
#define GL_INTERPOLATE_EXT 0x8575
#define GL_CONSTANT_EXT 0x8576
#define GL_PRIMARY_COLOR_EXT 0x8577
#define GL_PREVIOUS_EXT 0x8578
#define GL_SOURCE0_RGB_EXT 0x8580
#define GL_SOURCE1_RGB_EXT 0x8581
#define GL_SOURCE2_RGB_EXT 0x8582
#define GL_SOURCE0_ALPHA_EXT 0x8588
#define GL_SOURCE1_ALPHA_EXT 0x8589
#define GL_SOURCE2_ALPHA_EXT 0x858A
#define GL_OPERAND0_RGB_EXT 0x8590
#define GL_OPERAND1_RGB_EXT 0x8591
#define GL_OPERAND2_RGB_EXT 0x8592
#define GL_OPERAND0_ALPHA_EXT 0x8598
#define GL_OPERAND1_ALPHA_EXT 0x8599
#define GL_OPERAND2_ALPHA_EXT 0x859A
int GL_NV_fog_distance;
#define GL_FOG_DISTANCE_MODE_NV 0x855A
#define GL_EYE_RADIAL_NV 0x855B
#define GL_EYE_PLANE_ABSOLUTE_NV 0x855C
int GL_SGIX_async_histogram;
#define GL_ASYNC_HISTOGRAM_SGIX 0x832C
#define GL_MAX_ASYNC_HISTOGRAM_SGIX 0x832D
int GL_MESA_resize_buffers;
typedef void (* fp_glResizeBuffersMESA)();
extern fp_glResizeBuffersMESA gladglResizeBuffersMESA;
#define glResizeBuffersMESA gladglResizeBuffersMESA
int GL_NV_light_max_exponent;
#define GL_MAX_SHININESS_NV 0x8504
#define GL_MAX_SPOT_EXPONENT_NV 0x8505
int GL_NV_texture_env_combine4;
#define GL_COMBINE4_NV 0x8503
#define GL_SOURCE3_RGB_NV 0x8583
#define GL_SOURCE3_ALPHA_NV 0x858B
#define GL_OPERAND3_RGB_NV 0x8593
#define GL_OPERAND3_ALPHA_NV 0x859B
int GL_ARB_texture_view;
int GL_ARB_texture_env_combine;
#define GL_COMBINE_ARB 0x8570
#define GL_COMBINE_RGB_ARB 0x8571
#define GL_COMBINE_ALPHA_ARB 0x8572
#define GL_SOURCE0_RGB_ARB 0x8580
#define GL_SOURCE1_RGB_ARB 0x8581
#define GL_SOURCE2_RGB_ARB 0x8582
#define GL_SOURCE0_ALPHA_ARB 0x8588
#define GL_SOURCE1_ALPHA_ARB 0x8589
#define GL_SOURCE2_ALPHA_ARB 0x858A
#define GL_OPERAND0_RGB_ARB 0x8590
#define GL_OPERAND1_RGB_ARB 0x8591
#define GL_OPERAND2_RGB_ARB 0x8592
#define GL_OPERAND0_ALPHA_ARB 0x8598
#define GL_OPERAND1_ALPHA_ARB 0x8599
#define GL_OPERAND2_ALPHA_ARB 0x859A
#define GL_RGB_SCALE_ARB 0x8573
#define GL_ADD_SIGNED_ARB 0x8574
#define GL_INTERPOLATE_ARB 0x8575
#define GL_SUBTRACT_ARB 0x84E7
#define GL_CONSTANT_ARB 0x8576
#define GL_PRIMARY_COLOR_ARB 0x8577
#define GL_PREVIOUS_ARB 0x8578
int GL_ARB_map_buffer_range;
int GL_EXT_convolution;
#define GL_CONVOLUTION_1D_EXT 0x8010
#define GL_CONVOLUTION_2D_EXT 0x8011
#define GL_SEPARABLE_2D_EXT 0x8012
#define GL_CONVOLUTION_BORDER_MODE_EXT 0x8013
#define GL_CONVOLUTION_FILTER_SCALE_EXT 0x8014
#define GL_CONVOLUTION_FILTER_BIAS_EXT 0x8015
#define GL_REDUCE_EXT 0x8016
#define GL_CONVOLUTION_FORMAT_EXT 0x8017
#define GL_CONVOLUTION_WIDTH_EXT 0x8018
#define GL_CONVOLUTION_HEIGHT_EXT 0x8019
#define GL_MAX_CONVOLUTION_WIDTH_EXT 0x801A
#define GL_MAX_CONVOLUTION_HEIGHT_EXT 0x801B
#define GL_POST_CONVOLUTION_RED_SCALE_EXT 0x801C
#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT 0x801D
#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT 0x801E
#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT 0x801F
#define GL_POST_CONVOLUTION_RED_BIAS_EXT 0x8020
#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT 0x8021
#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT 0x8022
#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT 0x8023
typedef void (* fp_glConvolutionFilter1DEXT)(GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glConvolutionFilter1DEXT gladglConvolutionFilter1DEXT;
#define glConvolutionFilter1DEXT gladglConvolutionFilter1DEXT
typedef void (* fp_glConvolutionFilter2DEXT)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glConvolutionFilter2DEXT gladglConvolutionFilter2DEXT;
#define glConvolutionFilter2DEXT gladglConvolutionFilter2DEXT
typedef void (* fp_glConvolutionParameterfEXT)(GLenum, GLenum, GLfloat);
extern fp_glConvolutionParameterfEXT gladglConvolutionParameterfEXT;
#define glConvolutionParameterfEXT gladglConvolutionParameterfEXT
typedef void (* fp_glConvolutionParameterfvEXT)(GLenum, GLenum, const GLfloat*);
extern fp_glConvolutionParameterfvEXT gladglConvolutionParameterfvEXT;
#define glConvolutionParameterfvEXT gladglConvolutionParameterfvEXT
typedef void (* fp_glConvolutionParameteriEXT)(GLenum, GLenum, GLint);
extern fp_glConvolutionParameteriEXT gladglConvolutionParameteriEXT;
#define glConvolutionParameteriEXT gladglConvolutionParameteriEXT
typedef void (* fp_glConvolutionParameterivEXT)(GLenum, GLenum, const GLint*);
extern fp_glConvolutionParameterivEXT gladglConvolutionParameterivEXT;
#define glConvolutionParameterivEXT gladglConvolutionParameterivEXT
typedef void (* fp_glCopyConvolutionFilter1DEXT)(GLenum, GLenum, GLint, GLint, GLsizei);
extern fp_glCopyConvolutionFilter1DEXT gladglCopyConvolutionFilter1DEXT;
#define glCopyConvolutionFilter1DEXT gladglCopyConvolutionFilter1DEXT
typedef void (* fp_glCopyConvolutionFilter2DEXT)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
extern fp_glCopyConvolutionFilter2DEXT gladglCopyConvolutionFilter2DEXT;
#define glCopyConvolutionFilter2DEXT gladglCopyConvolutionFilter2DEXT
typedef void (* fp_glGetConvolutionFilterEXT)(GLenum, GLenum, GLenum, GLvoid*);
extern fp_glGetConvolutionFilterEXT gladglGetConvolutionFilterEXT;
#define glGetConvolutionFilterEXT gladglGetConvolutionFilterEXT
typedef void (* fp_glGetConvolutionParameterfvEXT)(GLenum, GLenum, GLfloat*);
extern fp_glGetConvolutionParameterfvEXT gladglGetConvolutionParameterfvEXT;
#define glGetConvolutionParameterfvEXT gladglGetConvolutionParameterfvEXT
typedef void (* fp_glGetConvolutionParameterivEXT)(GLenum, GLenum, GLint*);
extern fp_glGetConvolutionParameterivEXT gladglGetConvolutionParameterivEXT;
#define glGetConvolutionParameterivEXT gladglGetConvolutionParameterivEXT
typedef void (* fp_glGetSeparableFilterEXT)(GLenum, GLenum, GLenum, GLvoid*, GLvoid*, GLvoid*);
extern fp_glGetSeparableFilterEXT gladglGetSeparableFilterEXT;
#define glGetSeparableFilterEXT gladglGetSeparableFilterEXT
typedef void (* fp_glSeparableFilter2DEXT)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*, const GLvoid*);
extern fp_glSeparableFilter2DEXT gladglSeparableFilter2DEXT;
#define glSeparableFilter2DEXT gladglSeparableFilter2DEXT
int GL_NV_compute_program5;
#define GL_COMPUTE_PROGRAM_NV 0x90FB
#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV 0x90FC
int GL_NV_vertex_attrib_integer_64bit;
#define GL_INT64_NV 0x140E
#define GL_UNSIGNED_INT64_NV 0x140F
typedef void (* fp_glVertexAttribL1i64NV)(GLuint, GLint64EXT);
extern fp_glVertexAttribL1i64NV gladglVertexAttribL1i64NV;
#define glVertexAttribL1i64NV gladglVertexAttribL1i64NV
typedef void (* fp_glVertexAttribL2i64NV)(GLuint, GLint64EXT, GLint64EXT);
extern fp_glVertexAttribL2i64NV gladglVertexAttribL2i64NV;
#define glVertexAttribL2i64NV gladglVertexAttribL2i64NV
typedef void (* fp_glVertexAttribL3i64NV)(GLuint, GLint64EXT, GLint64EXT, GLint64EXT);
extern fp_glVertexAttribL3i64NV gladglVertexAttribL3i64NV;
#define glVertexAttribL3i64NV gladglVertexAttribL3i64NV
typedef void (* fp_glVertexAttribL4i64NV)(GLuint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT);
extern fp_glVertexAttribL4i64NV gladglVertexAttribL4i64NV;
#define glVertexAttribL4i64NV gladglVertexAttribL4i64NV
typedef void (* fp_glVertexAttribL1i64vNV)(GLuint, const GLint64EXT*);
extern fp_glVertexAttribL1i64vNV gladglVertexAttribL1i64vNV;
#define glVertexAttribL1i64vNV gladglVertexAttribL1i64vNV
typedef void (* fp_glVertexAttribL2i64vNV)(GLuint, const GLint64EXT*);
extern fp_glVertexAttribL2i64vNV gladglVertexAttribL2i64vNV;
#define glVertexAttribL2i64vNV gladglVertexAttribL2i64vNV
typedef void (* fp_glVertexAttribL3i64vNV)(GLuint, const GLint64EXT*);
extern fp_glVertexAttribL3i64vNV gladglVertexAttribL3i64vNV;
#define glVertexAttribL3i64vNV gladglVertexAttribL3i64vNV
typedef void (* fp_glVertexAttribL4i64vNV)(GLuint, const GLint64EXT*);
extern fp_glVertexAttribL4i64vNV gladglVertexAttribL4i64vNV;
#define glVertexAttribL4i64vNV gladglVertexAttribL4i64vNV
typedef void (* fp_glVertexAttribL1ui64NV)(GLuint, GLuint64EXT);
extern fp_glVertexAttribL1ui64NV gladglVertexAttribL1ui64NV;
#define glVertexAttribL1ui64NV gladglVertexAttribL1ui64NV
typedef void (* fp_glVertexAttribL2ui64NV)(GLuint, GLuint64EXT, GLuint64EXT);
extern fp_glVertexAttribL2ui64NV gladglVertexAttribL2ui64NV;
#define glVertexAttribL2ui64NV gladglVertexAttribL2ui64NV
typedef void (* fp_glVertexAttribL3ui64NV)(GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT);
extern fp_glVertexAttribL3ui64NV gladglVertexAttribL3ui64NV;
#define glVertexAttribL3ui64NV gladglVertexAttribL3ui64NV
typedef void (* fp_glVertexAttribL4ui64NV)(GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT);
extern fp_glVertexAttribL4ui64NV gladglVertexAttribL4ui64NV;
#define glVertexAttribL4ui64NV gladglVertexAttribL4ui64NV
typedef void (* fp_glVertexAttribL1ui64vNV)(GLuint, const GLuint64EXT*);
extern fp_glVertexAttribL1ui64vNV gladglVertexAttribL1ui64vNV;
#define glVertexAttribL1ui64vNV gladglVertexAttribL1ui64vNV
typedef void (* fp_glVertexAttribL2ui64vNV)(GLuint, const GLuint64EXT*);
extern fp_glVertexAttribL2ui64vNV gladglVertexAttribL2ui64vNV;
#define glVertexAttribL2ui64vNV gladglVertexAttribL2ui64vNV
typedef void (* fp_glVertexAttribL3ui64vNV)(GLuint, const GLuint64EXT*);
extern fp_glVertexAttribL3ui64vNV gladglVertexAttribL3ui64vNV;
#define glVertexAttribL3ui64vNV gladglVertexAttribL3ui64vNV
typedef void (* fp_glVertexAttribL4ui64vNV)(GLuint, const GLuint64EXT*);
extern fp_glVertexAttribL4ui64vNV gladglVertexAttribL4ui64vNV;
#define glVertexAttribL4ui64vNV gladglVertexAttribL4ui64vNV
typedef void (* fp_glGetVertexAttribLi64vNV)(GLuint, GLenum, GLint64EXT*);
extern fp_glGetVertexAttribLi64vNV gladglGetVertexAttribLi64vNV;
#define glGetVertexAttribLi64vNV gladglGetVertexAttribLi64vNV
typedef void (* fp_glGetVertexAttribLui64vNV)(GLuint, GLenum, GLuint64EXT*);
extern fp_glGetVertexAttribLui64vNV gladglGetVertexAttribLui64vNV;
#define glGetVertexAttribLui64vNV gladglGetVertexAttribLui64vNV
typedef void (* fp_glVertexAttribLFormatNV)(GLuint, GLint, GLenum, GLsizei);
extern fp_glVertexAttribLFormatNV gladglVertexAttribLFormatNV;
#define glVertexAttribLFormatNV gladglVertexAttribLFormatNV
int GL_EXT_paletted_texture;
#define GL_COLOR_INDEX1_EXT 0x80E2
#define GL_COLOR_INDEX2_EXT 0x80E3
#define GL_COLOR_INDEX4_EXT 0x80E4
#define GL_COLOR_INDEX8_EXT 0x80E5
#define GL_COLOR_INDEX12_EXT 0x80E6
#define GL_COLOR_INDEX16_EXT 0x80E7
#define GL_TEXTURE_INDEX_SIZE_EXT 0x80ED
typedef void (* fp_glColorTableEXT)(GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glColorTableEXT gladglColorTableEXT;
#define glColorTableEXT gladglColorTableEXT
typedef void (* fp_glGetColorTableEXT)(GLenum, GLenum, GLenum, GLvoid*);
extern fp_glGetColorTableEXT gladglGetColorTableEXT;
#define glGetColorTableEXT gladglGetColorTableEXT
typedef void (* fp_glGetColorTableParameterivEXT)(GLenum, GLenum, GLint*);
extern fp_glGetColorTableParameterivEXT gladglGetColorTableParameterivEXT;
#define glGetColorTableParameterivEXT gladglGetColorTableParameterivEXT
typedef void (* fp_glGetColorTableParameterfvEXT)(GLenum, GLenum, GLfloat*);
extern fp_glGetColorTableParameterfvEXT gladglGetColorTableParameterfvEXT;
#define glGetColorTableParameterfvEXT gladglGetColorTableParameterfvEXT
int GL_ARB_texture_buffer_object;
#define GL_TEXTURE_BUFFER_ARB 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB 0x8C2B
#define GL_TEXTURE_BINDING_BUFFER_ARB 0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB 0x8C2D
#define GL_TEXTURE_BUFFER_FORMAT_ARB 0x8C2E
typedef void (* fp_glTexBufferARB)(GLenum, GLenum, GLuint);
extern fp_glTexBufferARB gladglTexBufferARB;
#define glTexBufferARB gladglTexBufferARB
int GL_ATI_pn_triangles;
#define GL_PN_TRIANGLES_ATI 0x87F0
#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F1
#define GL_PN_TRIANGLES_POINT_MODE_ATI 0x87F2
#define GL_PN_TRIANGLES_NORMAL_MODE_ATI 0x87F3
#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F4
#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI 0x87F5
#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI 0x87F6
#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI 0x87F7
#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI 0x87F8
typedef void (* fp_glPNTrianglesiATI)(GLenum, GLint);
extern fp_glPNTrianglesiATI gladglPNTrianglesiATI;
#define glPNTrianglesiATI gladglPNTrianglesiATI
typedef void (* fp_glPNTrianglesfATI)(GLenum, GLfloat);
extern fp_glPNTrianglesfATI gladglPNTrianglesfATI;
#define glPNTrianglesfATI gladglPNTrianglesfATI
int GL_SGIX_resample;
#define GL_PACK_RESAMPLE_SGIX 0x842C
#define GL_UNPACK_RESAMPLE_SGIX 0x842D
#define GL_RESAMPLE_REPLICATE_SGIX 0x842E
#define GL_RESAMPLE_ZERO_FILL_SGIX 0x842F
#define GL_RESAMPLE_DECIMATE_SGIX 0x8430
int GL_SGIX_flush_raster;
typedef void (* fp_glFlushRasterSGIX)();
extern fp_glFlushRasterSGIX gladglFlushRasterSGIX;
#define glFlushRasterSGIX gladglFlushRasterSGIX
int GL_EXT_light_texture;
#define GL_FRAGMENT_MATERIAL_EXT 0x8349
#define GL_FRAGMENT_NORMAL_EXT 0x834A
#define GL_FRAGMENT_COLOR_EXT 0x834C
#define GL_ATTENUATION_EXT 0x834D
#define GL_SHADOW_ATTENUATION_EXT 0x834E
#define GL_TEXTURE_APPLICATION_MODE_EXT 0x834F
#define GL_TEXTURE_LIGHT_EXT 0x8350
#define GL_TEXTURE_MATERIAL_FACE_EXT 0x8351
#define GL_TEXTURE_MATERIAL_PARAMETER_EXT 0x8352
#define GL_FRAGMENT_DEPTH_EXT 0x8452
typedef void (* fp_glApplyTextureEXT)(GLenum);
extern fp_glApplyTextureEXT gladglApplyTextureEXT;
#define glApplyTextureEXT gladglApplyTextureEXT
typedef void (* fp_glTextureLightEXT)(GLenum);
extern fp_glTextureLightEXT gladglTextureLightEXT;
#define glTextureLightEXT gladglTextureLightEXT
typedef void (* fp_glTextureMaterialEXT)(GLenum, GLenum);
extern fp_glTextureMaterialEXT gladglTextureMaterialEXT;
#define glTextureMaterialEXT gladglTextureMaterialEXT
int GL_ARB_point_sprite;
#define GL_POINT_SPRITE_ARB 0x8861
#define GL_COORD_REPLACE_ARB 0x8862
int GL_ARB_half_float_pixel;
#define GL_HALF_FLOAT_ARB 0x140B
int GL_NV_tessellation_program5;
#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV 0x86D8
#define GL_TESS_CONTROL_PROGRAM_NV 0x891E
#define GL_TESS_EVALUATION_PROGRAM_NV 0x891F
#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV 0x8C74
#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV 0x8C75
int GL_REND_screen_coordinates;
#define GL_SCREEN_COORDINATES_REND 0x8490
#define GL_INVERTED_SCREEN_W_REND 0x8491
int GL_EXT_shared_texture_palette;
#define GL_SHARED_TEXTURE_PALETTE_EXT 0x81FB
int GL_EXT_packed_float;
#define GL_R11F_G11F_B10F_EXT 0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT 0x8C3B
#define GL_RGBA_SIGNED_COMPONENTS_EXT 0x8C3C
int GL_OML_subsample;
#define GL_FORMAT_SUBSAMPLE_24_24_OML 0x8982
#define GL_FORMAT_SUBSAMPLE_244_244_OML 0x8983
int GL_SGIX_vertex_preclip;
#define GL_VERTEX_PRECLIP_SGIX 0x83EE
#define GL_VERTEX_PRECLIP_HINT_SGIX 0x83EF
int GL_SGIX_texture_scale_bias;
#define GL_POST_TEXTURE_FILTER_BIAS_SGIX 0x8179
#define GL_POST_TEXTURE_FILTER_SCALE_SGIX 0x817A
#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX 0x817B
#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX 0x817C
int GL_AMD_draw_buffers_blend;
typedef void (* fp_glBlendFuncIndexedAMD)(GLuint, GLenum, GLenum);
extern fp_glBlendFuncIndexedAMD gladglBlendFuncIndexedAMD;
#define glBlendFuncIndexedAMD gladglBlendFuncIndexedAMD
typedef void (* fp_glBlendFuncSeparateIndexedAMD)(GLuint, GLenum, GLenum, GLenum, GLenum);
extern fp_glBlendFuncSeparateIndexedAMD gladglBlendFuncSeparateIndexedAMD;
#define glBlendFuncSeparateIndexedAMD gladglBlendFuncSeparateIndexedAMD
typedef void (* fp_glBlendEquationIndexedAMD)(GLuint, GLenum);
extern fp_glBlendEquationIndexedAMD gladglBlendEquationIndexedAMD;
#define glBlendEquationIndexedAMD gladglBlendEquationIndexedAMD
typedef void (* fp_glBlendEquationSeparateIndexedAMD)(GLuint, GLenum, GLenum);
extern fp_glBlendEquationSeparateIndexedAMD gladglBlendEquationSeparateIndexedAMD;
#define glBlendEquationSeparateIndexedAMD gladglBlendEquationSeparateIndexedAMD
int GL_MESA_window_pos;
typedef void (* fp_glWindowPos2dMESA)(GLdouble, GLdouble);
extern fp_glWindowPos2dMESA gladglWindowPos2dMESA;
#define glWindowPos2dMESA gladglWindowPos2dMESA
typedef void (* fp_glWindowPos2dvMESA)(const GLdouble*);
extern fp_glWindowPos2dvMESA gladglWindowPos2dvMESA;
#define glWindowPos2dvMESA gladglWindowPos2dvMESA
typedef void (* fp_glWindowPos2fMESA)(GLfloat, GLfloat);
extern fp_glWindowPos2fMESA gladglWindowPos2fMESA;
#define glWindowPos2fMESA gladglWindowPos2fMESA
typedef void (* fp_glWindowPos2fvMESA)(const GLfloat*);
extern fp_glWindowPos2fvMESA gladglWindowPos2fvMESA;
#define glWindowPos2fvMESA gladglWindowPos2fvMESA
typedef void (* fp_glWindowPos2iMESA)(GLint, GLint);
extern fp_glWindowPos2iMESA gladglWindowPos2iMESA;
#define glWindowPos2iMESA gladglWindowPos2iMESA
typedef void (* fp_glWindowPos2ivMESA)(const GLint*);
extern fp_glWindowPos2ivMESA gladglWindowPos2ivMESA;
#define glWindowPos2ivMESA gladglWindowPos2ivMESA
typedef void (* fp_glWindowPos2sMESA)(GLshort, GLshort);
extern fp_glWindowPos2sMESA gladglWindowPos2sMESA;
#define glWindowPos2sMESA gladglWindowPos2sMESA
typedef void (* fp_glWindowPos2svMESA)(const GLshort*);
extern fp_glWindowPos2svMESA gladglWindowPos2svMESA;
#define glWindowPos2svMESA gladglWindowPos2svMESA
typedef void (* fp_glWindowPos3dMESA)(GLdouble, GLdouble, GLdouble);
extern fp_glWindowPos3dMESA gladglWindowPos3dMESA;
#define glWindowPos3dMESA gladglWindowPos3dMESA
typedef void (* fp_glWindowPos3dvMESA)(const GLdouble*);
extern fp_glWindowPos3dvMESA gladglWindowPos3dvMESA;
#define glWindowPos3dvMESA gladglWindowPos3dvMESA
typedef void (* fp_glWindowPos3fMESA)(GLfloat, GLfloat, GLfloat);
extern fp_glWindowPos3fMESA gladglWindowPos3fMESA;
#define glWindowPos3fMESA gladglWindowPos3fMESA
typedef void (* fp_glWindowPos3fvMESA)(const GLfloat*);
extern fp_glWindowPos3fvMESA gladglWindowPos3fvMESA;
#define glWindowPos3fvMESA gladglWindowPos3fvMESA
typedef void (* fp_glWindowPos3iMESA)(GLint, GLint, GLint);
extern fp_glWindowPos3iMESA gladglWindowPos3iMESA;
#define glWindowPos3iMESA gladglWindowPos3iMESA
typedef void (* fp_glWindowPos3ivMESA)(const GLint*);
extern fp_glWindowPos3ivMESA gladglWindowPos3ivMESA;
#define glWindowPos3ivMESA gladglWindowPos3ivMESA
typedef void (* fp_glWindowPos3sMESA)(GLshort, GLshort, GLshort);
extern fp_glWindowPos3sMESA gladglWindowPos3sMESA;
#define glWindowPos3sMESA gladglWindowPos3sMESA
typedef void (* fp_glWindowPos3svMESA)(const GLshort*);
extern fp_glWindowPos3svMESA gladglWindowPos3svMESA;
#define glWindowPos3svMESA gladglWindowPos3svMESA
typedef void (* fp_glWindowPos4dMESA)(GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glWindowPos4dMESA gladglWindowPos4dMESA;
#define glWindowPos4dMESA gladglWindowPos4dMESA
typedef void (* fp_glWindowPos4dvMESA)(const GLdouble*);
extern fp_glWindowPos4dvMESA gladglWindowPos4dvMESA;
#define glWindowPos4dvMESA gladglWindowPos4dvMESA
typedef void (* fp_glWindowPos4fMESA)(GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glWindowPos4fMESA gladglWindowPos4fMESA;
#define glWindowPos4fMESA gladglWindowPos4fMESA
typedef void (* fp_glWindowPos4fvMESA)(const GLfloat*);
extern fp_glWindowPos4fvMESA gladglWindowPos4fvMESA;
#define glWindowPos4fvMESA gladglWindowPos4fvMESA
typedef void (* fp_glWindowPos4iMESA)(GLint, GLint, GLint, GLint);
extern fp_glWindowPos4iMESA gladglWindowPos4iMESA;
#define glWindowPos4iMESA gladglWindowPos4iMESA
typedef void (* fp_glWindowPos4ivMESA)(const GLint*);
extern fp_glWindowPos4ivMESA gladglWindowPos4ivMESA;
#define glWindowPos4ivMESA gladglWindowPos4ivMESA
typedef void (* fp_glWindowPos4sMESA)(GLshort, GLshort, GLshort, GLshort);
extern fp_glWindowPos4sMESA gladglWindowPos4sMESA;
#define glWindowPos4sMESA gladglWindowPos4sMESA
typedef void (* fp_glWindowPos4svMESA)(const GLshort*);
extern fp_glWindowPos4svMESA gladglWindowPos4svMESA;
#define glWindowPos4svMESA gladglWindowPos4svMESA
int GL_EXT_texture_array;
#define GL_TEXTURE_1D_ARRAY_EXT 0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY_EXT 0x8C19
#define GL_TEXTURE_2D_ARRAY_EXT 0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY_EXT 0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY_EXT 0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY_EXT 0x8C1D
#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT 0x88FF
#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT 0x884E
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT 0x8CD4
int GL_NV_texture_barrier;
typedef void (* fp_glTextureBarrierNV)();
extern fp_glTextureBarrierNV gladglTextureBarrierNV;
#define glTextureBarrierNV gladglTextureBarrierNV
int GL_ARB_texture_query_levels;
int GL_NV_texgen_emboss;
#define GL_EMBOSS_LIGHT_NV 0x855D
#define GL_EMBOSS_CONSTANT_NV 0x855E
#define GL_EMBOSS_MAP_NV 0x855F
int GL_EXT_texture_swizzle;
#define GL_TEXTURE_SWIZZLE_R_EXT 0x8E42
#define GL_TEXTURE_SWIZZLE_G_EXT 0x8E43
#define GL_TEXTURE_SWIZZLE_B_EXT 0x8E44
#define GL_TEXTURE_SWIZZLE_A_EXT 0x8E45
#define GL_TEXTURE_SWIZZLE_RGBA_EXT 0x8E46
int GL_ARB_texture_rg;
int GL_ARB_vertex_type_2_10_10_10_rev;
int GL_ARB_fragment_shader;
#define GL_FRAGMENT_SHADER_ARB 0x8B30
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB 0x8B49
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB 0x8B8B
int GL_3DFX_tbuffer;
typedef void (* fp_glTbufferMask3DFX)(GLuint);
extern fp_glTbufferMask3DFX gladglTbufferMask3DFX;
#define glTbufferMask3DFX gladglTbufferMask3DFX
int GL_GREMEDY_frame_terminator;
typedef void (* fp_glFrameTerminatorGREMEDY)();
extern fp_glFrameTerminatorGREMEDY gladglFrameTerminatorGREMEDY;
#define glFrameTerminatorGREMEDY gladglFrameTerminatorGREMEDY
int GL_ARB_blend_func_extended;
int GL_EXT_separate_shader_objects;
#define GL_ACTIVE_PROGRAM_EXT 0x8B8D
#define GL_VERTEX_SHADER_BIT_EXT 0x00000001
#define GL_FRAGMENT_SHADER_BIT_EXT 0x00000002
#define GL_ALL_SHADER_BITS_EXT 0xFFFFFFFF
#define GL_PROGRAM_SEPARABLE_EXT 0x8258
#define GL_PROGRAM_PIPELINE_BINDING_EXT 0x825A
typedef void (* fp_glUseShaderProgramEXT)(GLenum, GLuint);
extern fp_glUseShaderProgramEXT gladglUseShaderProgramEXT;
#define glUseShaderProgramEXT gladglUseShaderProgramEXT
typedef void (* fp_glActiveProgramEXT)(GLuint);
extern fp_glActiveProgramEXT gladglActiveProgramEXT;
#define glActiveProgramEXT gladglActiveProgramEXT
typedef GLuint (* fp_glCreateShaderProgramEXT)(GLenum, const GLchar*);
extern fp_glCreateShaderProgramEXT gladglCreateShaderProgramEXT;
#define glCreateShaderProgramEXT gladglCreateShaderProgramEXT
typedef void (* fp_glActiveShaderProgramEXT)(GLuint, GLuint);
extern fp_glActiveShaderProgramEXT gladglActiveShaderProgramEXT;
#define glActiveShaderProgramEXT gladglActiveShaderProgramEXT
typedef void (* fp_glBindProgramPipelineEXT)(GLuint);
extern fp_glBindProgramPipelineEXT gladglBindProgramPipelineEXT;
#define glBindProgramPipelineEXT gladglBindProgramPipelineEXT
typedef GLuint (* fp_glCreateShaderProgramvEXT)(GLenum, GLsizei, const GLchar**);
extern fp_glCreateShaderProgramvEXT gladglCreateShaderProgramvEXT;
#define glCreateShaderProgramvEXT gladglCreateShaderProgramvEXT
typedef void (* fp_glDeleteProgramPipelinesEXT)(GLsizei, const GLuint*);
extern fp_glDeleteProgramPipelinesEXT gladglDeleteProgramPipelinesEXT;
#define glDeleteProgramPipelinesEXT gladglDeleteProgramPipelinesEXT
typedef void (* fp_glGenProgramPipelinesEXT)(GLsizei, GLuint*);
extern fp_glGenProgramPipelinesEXT gladglGenProgramPipelinesEXT;
#define glGenProgramPipelinesEXT gladglGenProgramPipelinesEXT
typedef void (* fp_glGetProgramPipelineInfoLogEXT)(GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetProgramPipelineInfoLogEXT gladglGetProgramPipelineInfoLogEXT;
#define glGetProgramPipelineInfoLogEXT gladglGetProgramPipelineInfoLogEXT
typedef void (* fp_glGetProgramPipelineivEXT)(GLuint, GLenum, GLint*);
extern fp_glGetProgramPipelineivEXT gladglGetProgramPipelineivEXT;
#define glGetProgramPipelineivEXT gladglGetProgramPipelineivEXT
typedef GLboolean (* fp_glIsProgramPipelineEXT)(GLuint);
extern fp_glIsProgramPipelineEXT gladglIsProgramPipelineEXT;
#define glIsProgramPipelineEXT gladglIsProgramPipelineEXT
typedef void (* fp_glProgramParameteriEXT)(GLuint, GLenum, GLint);
extern fp_glProgramParameteriEXT gladglProgramParameteriEXT;
#define glProgramParameteriEXT gladglProgramParameteriEXT
typedef void (* fp_glProgramUniform1fEXT)(GLuint, GLint, GLfloat);
extern fp_glProgramUniform1fEXT gladglProgramUniform1fEXT;
#define glProgramUniform1fEXT gladglProgramUniform1fEXT
typedef void (* fp_glProgramUniform1fvEXT)(GLuint, GLint, GLsizei, const GLfloat*);
extern fp_glProgramUniform1fvEXT gladglProgramUniform1fvEXT;
#define glProgramUniform1fvEXT gladglProgramUniform1fvEXT
typedef void (* fp_glProgramUniform1iEXT)(GLuint, GLint, GLint);
extern fp_glProgramUniform1iEXT gladglProgramUniform1iEXT;
#define glProgramUniform1iEXT gladglProgramUniform1iEXT
typedef void (* fp_glProgramUniform1ivEXT)(GLuint, GLint, GLsizei, const GLint*);
extern fp_glProgramUniform1ivEXT gladglProgramUniform1ivEXT;
#define glProgramUniform1ivEXT gladglProgramUniform1ivEXT
typedef void (* fp_glProgramUniform2fEXT)(GLuint, GLint, GLfloat, GLfloat);
extern fp_glProgramUniform2fEXT gladglProgramUniform2fEXT;
#define glProgramUniform2fEXT gladglProgramUniform2fEXT
typedef void (* fp_glProgramUniform2fvEXT)(GLuint, GLint, GLsizei, const GLfloat*);
extern fp_glProgramUniform2fvEXT gladglProgramUniform2fvEXT;
#define glProgramUniform2fvEXT gladglProgramUniform2fvEXT
typedef void (* fp_glProgramUniform2iEXT)(GLuint, GLint, GLint, GLint);
extern fp_glProgramUniform2iEXT gladglProgramUniform2iEXT;
#define glProgramUniform2iEXT gladglProgramUniform2iEXT
typedef void (* fp_glProgramUniform2ivEXT)(GLuint, GLint, GLsizei, const GLint*);
extern fp_glProgramUniform2ivEXT gladglProgramUniform2ivEXT;
#define glProgramUniform2ivEXT gladglProgramUniform2ivEXT
typedef void (* fp_glProgramUniform3fEXT)(GLuint, GLint, GLfloat, GLfloat, GLfloat);
extern fp_glProgramUniform3fEXT gladglProgramUniform3fEXT;
#define glProgramUniform3fEXT gladglProgramUniform3fEXT
typedef void (* fp_glProgramUniform3fvEXT)(GLuint, GLint, GLsizei, const GLfloat*);
extern fp_glProgramUniform3fvEXT gladglProgramUniform3fvEXT;
#define glProgramUniform3fvEXT gladglProgramUniform3fvEXT
typedef void (* fp_glProgramUniform3iEXT)(GLuint, GLint, GLint, GLint, GLint);
extern fp_glProgramUniform3iEXT gladglProgramUniform3iEXT;
#define glProgramUniform3iEXT gladglProgramUniform3iEXT
typedef void (* fp_glProgramUniform3ivEXT)(GLuint, GLint, GLsizei, const GLint*);
extern fp_glProgramUniform3ivEXT gladglProgramUniform3ivEXT;
#define glProgramUniform3ivEXT gladglProgramUniform3ivEXT
typedef void (* fp_glProgramUniform4fEXT)(GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glProgramUniform4fEXT gladglProgramUniform4fEXT;
#define glProgramUniform4fEXT gladglProgramUniform4fEXT
typedef void (* fp_glProgramUniform4fvEXT)(GLuint, GLint, GLsizei, const GLfloat*);
extern fp_glProgramUniform4fvEXT gladglProgramUniform4fvEXT;
#define glProgramUniform4fvEXT gladglProgramUniform4fvEXT
typedef void (* fp_glProgramUniform4iEXT)(GLuint, GLint, GLint, GLint, GLint, GLint);
extern fp_glProgramUniform4iEXT gladglProgramUniform4iEXT;
#define glProgramUniform4iEXT gladglProgramUniform4iEXT
typedef void (* fp_glProgramUniform4ivEXT)(GLuint, GLint, GLsizei, const GLint*);
extern fp_glProgramUniform4ivEXT gladglProgramUniform4ivEXT;
#define glProgramUniform4ivEXT gladglProgramUniform4ivEXT
typedef void (* fp_glProgramUniformMatrix2fvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix2fvEXT gladglProgramUniformMatrix2fvEXT;
#define glProgramUniformMatrix2fvEXT gladglProgramUniformMatrix2fvEXT
typedef void (* fp_glProgramUniformMatrix3fvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix3fvEXT gladglProgramUniformMatrix3fvEXT;
#define glProgramUniformMatrix3fvEXT gladglProgramUniformMatrix3fvEXT
typedef void (* fp_glProgramUniformMatrix4fvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix4fvEXT gladglProgramUniformMatrix4fvEXT;
#define glProgramUniformMatrix4fvEXT gladglProgramUniformMatrix4fvEXT
typedef void (* fp_glUseProgramStagesEXT)(GLuint, GLbitfield, GLuint);
extern fp_glUseProgramStagesEXT gladglUseProgramStagesEXT;
#define glUseProgramStagesEXT gladglUseProgramStagesEXT
typedef void (* fp_glValidateProgramPipelineEXT)(GLuint);
extern fp_glValidateProgramPipelineEXT gladglValidateProgramPipelineEXT;
#define glValidateProgramPipelineEXT gladglValidateProgramPipelineEXT
int GL_NV_texture_multisample;
#define GL_TEXTURE_COVERAGE_SAMPLES_NV 0x9045
#define GL_TEXTURE_COLOR_SAMPLES_NV 0x9046
typedef void (* fp_glTexImage2DMultisampleCoverageNV)(GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean);
extern fp_glTexImage2DMultisampleCoverageNV gladglTexImage2DMultisampleCoverageNV;
#define glTexImage2DMultisampleCoverageNV gladglTexImage2DMultisampleCoverageNV
typedef void (* fp_glTexImage3DMultisampleCoverageNV)(GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean);
extern fp_glTexImage3DMultisampleCoverageNV gladglTexImage3DMultisampleCoverageNV;
#define glTexImage3DMultisampleCoverageNV gladglTexImage3DMultisampleCoverageNV
typedef void (* fp_glTextureImage2DMultisampleNV)(GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean);
extern fp_glTextureImage2DMultisampleNV gladglTextureImage2DMultisampleNV;
#define glTextureImage2DMultisampleNV gladglTextureImage2DMultisampleNV
typedef void (* fp_glTextureImage3DMultisampleNV)(GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean);
extern fp_glTextureImage3DMultisampleNV gladglTextureImage3DMultisampleNV;
#define glTextureImage3DMultisampleNV gladglTextureImage3DMultisampleNV
typedef void (* fp_glTextureImage2DMultisampleCoverageNV)(GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean);
extern fp_glTextureImage2DMultisampleCoverageNV gladglTextureImage2DMultisampleCoverageNV;
#define glTextureImage2DMultisampleCoverageNV gladglTextureImage2DMultisampleCoverageNV
typedef void (* fp_glTextureImage3DMultisampleCoverageNV)(GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean);
extern fp_glTextureImage3DMultisampleCoverageNV gladglTextureImage3DMultisampleCoverageNV;
#define glTextureImage3DMultisampleCoverageNV gladglTextureImage3DMultisampleCoverageNV
int GL_ARB_shader_objects;
#define GL_PROGRAM_OBJECT_ARB 0x8B40
#define GL_SHADER_OBJECT_ARB 0x8B48
#define GL_OBJECT_TYPE_ARB 0x8B4E
#define GL_OBJECT_SUBTYPE_ARB 0x8B4F
#define GL_FLOAT_VEC2_ARB 0x8B50
#define GL_FLOAT_VEC3_ARB 0x8B51
#define GL_FLOAT_VEC4_ARB 0x8B52
#define GL_INT_VEC2_ARB 0x8B53
#define GL_INT_VEC3_ARB 0x8B54
#define GL_INT_VEC4_ARB 0x8B55
#define GL_BOOL_ARB 0x8B56
#define GL_BOOL_VEC2_ARB 0x8B57
#define GL_BOOL_VEC3_ARB 0x8B58
#define GL_BOOL_VEC4_ARB 0x8B59
#define GL_FLOAT_MAT2_ARB 0x8B5A
#define GL_FLOAT_MAT3_ARB 0x8B5B
#define GL_FLOAT_MAT4_ARB 0x8B5C
#define GL_SAMPLER_1D_ARB 0x8B5D
#define GL_SAMPLER_2D_ARB 0x8B5E
#define GL_SAMPLER_3D_ARB 0x8B5F
#define GL_SAMPLER_CUBE_ARB 0x8B60
#define GL_SAMPLER_1D_SHADOW_ARB 0x8B61
#define GL_SAMPLER_2D_SHADOW_ARB 0x8B62
#define GL_SAMPLER_2D_RECT_ARB 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW_ARB 0x8B64
#define GL_OBJECT_DELETE_STATUS_ARB 0x8B80
#define GL_OBJECT_COMPILE_STATUS_ARB 0x8B81
#define GL_OBJECT_LINK_STATUS_ARB 0x8B82
#define GL_OBJECT_VALIDATE_STATUS_ARB 0x8B83
#define GL_OBJECT_INFO_LOG_LENGTH_ARB 0x8B84
#define GL_OBJECT_ATTACHED_OBJECTS_ARB 0x8B85
#define GL_OBJECT_ACTIVE_UNIFORMS_ARB 0x8B86
#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB 0x8B87
#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB 0x8B88
typedef void (* fp_glDeleteObjectARB)(GLhandleARB);
extern fp_glDeleteObjectARB gladglDeleteObjectARB;
#define glDeleteObjectARB gladglDeleteObjectARB
typedef GLhandleARB (* fp_glGetHandleARB)(GLenum);
extern fp_glGetHandleARB gladglGetHandleARB;
#define glGetHandleARB gladglGetHandleARB
typedef void (* fp_glDetachObjectARB)(GLhandleARB, GLhandleARB);
extern fp_glDetachObjectARB gladglDetachObjectARB;
#define glDetachObjectARB gladglDetachObjectARB
typedef GLhandleARB (* fp_glCreateShaderObjectARB)(GLenum);
extern fp_glCreateShaderObjectARB gladglCreateShaderObjectARB;
#define glCreateShaderObjectARB gladglCreateShaderObjectARB
typedef void (* fp_glShaderSourceARB)(GLhandleARB, GLsizei, const GLcharARB**, const GLint*);
extern fp_glShaderSourceARB gladglShaderSourceARB;
#define glShaderSourceARB gladglShaderSourceARB
typedef void (* fp_glCompileShaderARB)(GLhandleARB);
extern fp_glCompileShaderARB gladglCompileShaderARB;
#define glCompileShaderARB gladglCompileShaderARB
typedef GLhandleARB (* fp_glCreateProgramObjectARB)();
extern fp_glCreateProgramObjectARB gladglCreateProgramObjectARB;
#define glCreateProgramObjectARB gladglCreateProgramObjectARB
typedef void (* fp_glAttachObjectARB)(GLhandleARB, GLhandleARB);
extern fp_glAttachObjectARB gladglAttachObjectARB;
#define glAttachObjectARB gladglAttachObjectARB
typedef void (* fp_glLinkProgramARB)(GLhandleARB);
extern fp_glLinkProgramARB gladglLinkProgramARB;
#define glLinkProgramARB gladglLinkProgramARB
typedef void (* fp_glUseProgramObjectARB)(GLhandleARB);
extern fp_glUseProgramObjectARB gladglUseProgramObjectARB;
#define glUseProgramObjectARB gladglUseProgramObjectARB
typedef void (* fp_glValidateProgramARB)(GLhandleARB);
extern fp_glValidateProgramARB gladglValidateProgramARB;
#define glValidateProgramARB gladglValidateProgramARB
typedef void (* fp_glUniform1fARB)(GLint, GLfloat);
extern fp_glUniform1fARB gladglUniform1fARB;
#define glUniform1fARB gladglUniform1fARB
typedef void (* fp_glUniform2fARB)(GLint, GLfloat, GLfloat);
extern fp_glUniform2fARB gladglUniform2fARB;
#define glUniform2fARB gladglUniform2fARB
typedef void (* fp_glUniform3fARB)(GLint, GLfloat, GLfloat, GLfloat);
extern fp_glUniform3fARB gladglUniform3fARB;
#define glUniform3fARB gladglUniform3fARB
typedef void (* fp_glUniform4fARB)(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glUniform4fARB gladglUniform4fARB;
#define glUniform4fARB gladglUniform4fARB
typedef void (* fp_glUniform1iARB)(GLint, GLint);
extern fp_glUniform1iARB gladglUniform1iARB;
#define glUniform1iARB gladglUniform1iARB
typedef void (* fp_glUniform2iARB)(GLint, GLint, GLint);
extern fp_glUniform2iARB gladglUniform2iARB;
#define glUniform2iARB gladglUniform2iARB
typedef void (* fp_glUniform3iARB)(GLint, GLint, GLint, GLint);
extern fp_glUniform3iARB gladglUniform3iARB;
#define glUniform3iARB gladglUniform3iARB
typedef void (* fp_glUniform4iARB)(GLint, GLint, GLint, GLint, GLint);
extern fp_glUniform4iARB gladglUniform4iARB;
#define glUniform4iARB gladglUniform4iARB
typedef void (* fp_glUniform1fvARB)(GLint, GLsizei, const GLfloat*);
extern fp_glUniform1fvARB gladglUniform1fvARB;
#define glUniform1fvARB gladglUniform1fvARB
typedef void (* fp_glUniform2fvARB)(GLint, GLsizei, const GLfloat*);
extern fp_glUniform2fvARB gladglUniform2fvARB;
#define glUniform2fvARB gladglUniform2fvARB
typedef void (* fp_glUniform3fvARB)(GLint, GLsizei, const GLfloat*);
extern fp_glUniform3fvARB gladglUniform3fvARB;
#define glUniform3fvARB gladglUniform3fvARB
typedef void (* fp_glUniform4fvARB)(GLint, GLsizei, const GLfloat*);
extern fp_glUniform4fvARB gladglUniform4fvARB;
#define glUniform4fvARB gladglUniform4fvARB
typedef void (* fp_glUniform1ivARB)(GLint, GLsizei, const GLint*);
extern fp_glUniform1ivARB gladglUniform1ivARB;
#define glUniform1ivARB gladglUniform1ivARB
typedef void (* fp_glUniform2ivARB)(GLint, GLsizei, const GLint*);
extern fp_glUniform2ivARB gladglUniform2ivARB;
#define glUniform2ivARB gladglUniform2ivARB
typedef void (* fp_glUniform3ivARB)(GLint, GLsizei, const GLint*);
extern fp_glUniform3ivARB gladglUniform3ivARB;
#define glUniform3ivARB gladglUniform3ivARB
typedef void (* fp_glUniform4ivARB)(GLint, GLsizei, const GLint*);
extern fp_glUniform4ivARB gladglUniform4ivARB;
#define glUniform4ivARB gladglUniform4ivARB
typedef void (* fp_glUniformMatrix2fvARB)(GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glUniformMatrix2fvARB gladglUniformMatrix2fvARB;
#define glUniformMatrix2fvARB gladglUniformMatrix2fvARB
typedef void (* fp_glUniformMatrix3fvARB)(GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glUniformMatrix3fvARB gladglUniformMatrix3fvARB;
#define glUniformMatrix3fvARB gladglUniformMatrix3fvARB
typedef void (* fp_glUniformMatrix4fvARB)(GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glUniformMatrix4fvARB gladglUniformMatrix4fvARB;
#define glUniformMatrix4fvARB gladglUniformMatrix4fvARB
typedef void (* fp_glGetObjectParameterfvARB)(GLhandleARB, GLenum, GLfloat*);
extern fp_glGetObjectParameterfvARB gladglGetObjectParameterfvARB;
#define glGetObjectParameterfvARB gladglGetObjectParameterfvARB
typedef void (* fp_glGetObjectParameterivARB)(GLhandleARB, GLenum, GLint*);
extern fp_glGetObjectParameterivARB gladglGetObjectParameterivARB;
#define glGetObjectParameterivARB gladglGetObjectParameterivARB
typedef void (* fp_glGetInfoLogARB)(GLhandleARB, GLsizei, GLsizei*, GLcharARB*);
extern fp_glGetInfoLogARB gladglGetInfoLogARB;
#define glGetInfoLogARB gladglGetInfoLogARB
typedef void (* fp_glGetAttachedObjectsARB)(GLhandleARB, GLsizei, GLsizei*, GLhandleARB*);
extern fp_glGetAttachedObjectsARB gladglGetAttachedObjectsARB;
#define glGetAttachedObjectsARB gladglGetAttachedObjectsARB
typedef GLint (* fp_glGetUniformLocationARB)(GLhandleARB, const GLcharARB*);
extern fp_glGetUniformLocationARB gladglGetUniformLocationARB;
#define glGetUniformLocationARB gladglGetUniformLocationARB
typedef void (* fp_glGetActiveUniformARB)(GLhandleARB, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLcharARB*);
extern fp_glGetActiveUniformARB gladglGetActiveUniformARB;
#define glGetActiveUniformARB gladglGetActiveUniformARB
typedef void (* fp_glGetUniformfvARB)(GLhandleARB, GLint, GLfloat*);
extern fp_glGetUniformfvARB gladglGetUniformfvARB;
#define glGetUniformfvARB gladglGetUniformfvARB
typedef void (* fp_glGetUniformivARB)(GLhandleARB, GLint, GLint*);
extern fp_glGetUniformivARB gladglGetUniformivARB;
#define glGetUniformivARB gladglGetUniformivARB
typedef void (* fp_glGetShaderSourceARB)(GLhandleARB, GLsizei, GLsizei*, GLcharARB*);
extern fp_glGetShaderSourceARB gladglGetShaderSourceARB;
#define glGetShaderSourceARB gladglGetShaderSourceARB
int GL_ARB_framebuffer_object;
int GL_ATI_envmap_bumpmap;
#define GL_BUMP_ROT_MATRIX_ATI 0x8775
#define GL_BUMP_ROT_MATRIX_SIZE_ATI 0x8776
#define GL_BUMP_NUM_TEX_UNITS_ATI 0x8777
#define GL_BUMP_TEX_UNITS_ATI 0x8778
#define GL_DUDV_ATI 0x8779
#define GL_DU8DV8_ATI 0x877A
#define GL_BUMP_ENVMAP_ATI 0x877B
#define GL_BUMP_TARGET_ATI 0x877C
typedef void (* fp_glTexBumpParameterivATI)(GLenum, const GLint*);
extern fp_glTexBumpParameterivATI gladglTexBumpParameterivATI;
#define glTexBumpParameterivATI gladglTexBumpParameterivATI
typedef void (* fp_glTexBumpParameterfvATI)(GLenum, const GLfloat*);
extern fp_glTexBumpParameterfvATI gladglTexBumpParameterfvATI;
#define glTexBumpParameterfvATI gladglTexBumpParameterfvATI
typedef void (* fp_glGetTexBumpParameterivATI)(GLenum, GLint*);
extern fp_glGetTexBumpParameterivATI gladglGetTexBumpParameterivATI;
#define glGetTexBumpParameterivATI gladglGetTexBumpParameterivATI
typedef void (* fp_glGetTexBumpParameterfvATI)(GLenum, GLfloat*);
extern fp_glGetTexBumpParameterfvATI gladglGetTexBumpParameterfvATI;
#define glGetTexBumpParameterfvATI gladglGetTexBumpParameterfvATI
int GL_ARB_robust_buffer_access_behavior;
int GL_ARB_shader_stencil_export;
int GL_NV_texture_rectangle;
#define GL_TEXTURE_RECTANGLE_NV 0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE_NV 0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE_NV 0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV 0x84F8
int GL_ARB_enhanced_layouts;
int GL_ARB_texture_rectangle;
#define GL_TEXTURE_RECTANGLE_ARB 0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE_ARB 0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE_ARB 0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB 0x84F8
int GL_SGI_texture_color_table;
#define GL_TEXTURE_COLOR_TABLE_SGI 0x80BC
#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI 0x80BD
int GL_ATI_map_object_buffer;
typedef void* (* fp_glMapObjectBufferATI)(GLuint);
extern fp_glMapObjectBufferATI gladglMapObjectBufferATI;
#define glMapObjectBufferATI gladglMapObjectBufferATI
typedef void (* fp_glUnmapObjectBufferATI)(GLuint);
extern fp_glUnmapObjectBufferATI gladglUnmapObjectBufferATI;
#define glUnmapObjectBufferATI gladglUnmapObjectBufferATI
int GL_ARB_robustness;
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#define GL_NO_RESET_NOTIFICATION_ARB 0x8261
typedef GLenum (* fp_glGetGraphicsResetStatusARB)();
extern fp_glGetGraphicsResetStatusARB gladglGetGraphicsResetStatusARB;
#define glGetGraphicsResetStatusARB gladglGetGraphicsResetStatusARB
typedef void (* fp_glGetnTexImageARB)(GLenum, GLint, GLenum, GLenum, GLsizei, GLvoid*);
extern fp_glGetnTexImageARB gladglGetnTexImageARB;
#define glGetnTexImageARB gladglGetnTexImageARB
typedef void (* fp_glReadnPixelsARB)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, GLvoid*);
extern fp_glReadnPixelsARB gladglReadnPixelsARB;
#define glReadnPixelsARB gladglReadnPixelsARB
typedef void (* fp_glGetnCompressedTexImageARB)(GLenum, GLint, GLsizei, GLvoid*);
extern fp_glGetnCompressedTexImageARB gladglGetnCompressedTexImageARB;
#define glGetnCompressedTexImageARB gladglGetnCompressedTexImageARB
typedef void (* fp_glGetnUniformfvARB)(GLuint, GLint, GLsizei, GLfloat*);
extern fp_glGetnUniformfvARB gladglGetnUniformfvARB;
#define glGetnUniformfvARB gladglGetnUniformfvARB
typedef void (* fp_glGetnUniformivARB)(GLuint, GLint, GLsizei, GLint*);
extern fp_glGetnUniformivARB gladglGetnUniformivARB;
#define glGetnUniformivARB gladglGetnUniformivARB
typedef void (* fp_glGetnUniformuivARB)(GLuint, GLint, GLsizei, GLuint*);
extern fp_glGetnUniformuivARB gladglGetnUniformuivARB;
#define glGetnUniformuivARB gladglGetnUniformuivARB
typedef void (* fp_glGetnUniformdvARB)(GLuint, GLint, GLsizei, GLdouble*);
extern fp_glGetnUniformdvARB gladglGetnUniformdvARB;
#define glGetnUniformdvARB gladglGetnUniformdvARB
typedef void (* fp_glGetnMapdvARB)(GLenum, GLenum, GLsizei, GLdouble*);
extern fp_glGetnMapdvARB gladglGetnMapdvARB;
#define glGetnMapdvARB gladglGetnMapdvARB
typedef void (* fp_glGetnMapfvARB)(GLenum, GLenum, GLsizei, GLfloat*);
extern fp_glGetnMapfvARB gladglGetnMapfvARB;
#define glGetnMapfvARB gladglGetnMapfvARB
typedef void (* fp_glGetnMapivARB)(GLenum, GLenum, GLsizei, GLint*);
extern fp_glGetnMapivARB gladglGetnMapivARB;
#define glGetnMapivARB gladglGetnMapivARB
typedef void (* fp_glGetnPixelMapfvARB)(GLenum, GLsizei, GLfloat*);
extern fp_glGetnPixelMapfvARB gladglGetnPixelMapfvARB;
#define glGetnPixelMapfvARB gladglGetnPixelMapfvARB
typedef void (* fp_glGetnPixelMapuivARB)(GLenum, GLsizei, GLuint*);
extern fp_glGetnPixelMapuivARB gladglGetnPixelMapuivARB;
#define glGetnPixelMapuivARB gladglGetnPixelMapuivARB
typedef void (* fp_glGetnPixelMapusvARB)(GLenum, GLsizei, GLushort*);
extern fp_glGetnPixelMapusvARB gladglGetnPixelMapusvARB;
#define glGetnPixelMapusvARB gladglGetnPixelMapusvARB
typedef void (* fp_glGetnPolygonStippleARB)(GLsizei, GLubyte*);
extern fp_glGetnPolygonStippleARB gladglGetnPolygonStippleARB;
#define glGetnPolygonStippleARB gladglGetnPolygonStippleARB
typedef void (* fp_glGetnColorTableARB)(GLenum, GLenum, GLenum, GLsizei, GLvoid*);
extern fp_glGetnColorTableARB gladglGetnColorTableARB;
#define glGetnColorTableARB gladglGetnColorTableARB
typedef void (* fp_glGetnConvolutionFilterARB)(GLenum, GLenum, GLenum, GLsizei, GLvoid*);
extern fp_glGetnConvolutionFilterARB gladglGetnConvolutionFilterARB;
#define glGetnConvolutionFilterARB gladglGetnConvolutionFilterARB
typedef void (* fp_glGetnSeparableFilterARB)(GLenum, GLenum, GLenum, GLsizei, GLvoid*, GLsizei, GLvoid*, GLvoid*);
extern fp_glGetnSeparableFilterARB gladglGetnSeparableFilterARB;
#define glGetnSeparableFilterARB gladglGetnSeparableFilterARB
typedef void (* fp_glGetnHistogramARB)(GLenum, GLboolean, GLenum, GLenum, GLsizei, GLvoid*);
extern fp_glGetnHistogramARB gladglGetnHistogramARB;
#define glGetnHistogramARB gladglGetnHistogramARB
typedef void (* fp_glGetnMinmaxARB)(GLenum, GLboolean, GLenum, GLenum, GLsizei, GLvoid*);
extern fp_glGetnMinmaxARB gladglGetnMinmaxARB;
#define glGetnMinmaxARB gladglGetnMinmaxARB
int GL_NV_pixel_data_range;
#define GL_WRITE_PIXEL_DATA_RANGE_NV 0x8878
#define GL_READ_PIXEL_DATA_RANGE_NV 0x8879
#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV 0x887A
#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV 0x887B
#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV 0x887C
#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV 0x887D
typedef void (* fp_glPixelDataRangeNV)(GLenum, GLsizei, const GLvoid*);
extern fp_glPixelDataRangeNV gladglPixelDataRangeNV;
#define glPixelDataRangeNV gladglPixelDataRangeNV
typedef void (* fp_glFlushPixelDataRangeNV)(GLenum);
extern fp_glFlushPixelDataRangeNV gladglFlushPixelDataRangeNV;
#define glFlushPixelDataRangeNV gladglFlushPixelDataRangeNV
int GL_EXT_framebuffer_blit;
#define GL_READ_FRAMEBUFFER_EXT 0x8CA8
#define GL_DRAW_FRAMEBUFFER_EXT 0x8CA9
#define GL_DRAW_FRAMEBUFFER_BINDING_EXT 0x8CA6
#define GL_READ_FRAMEBUFFER_BINDING_EXT 0x8CAA
typedef void (* fp_glBlitFramebufferEXT)(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
extern fp_glBlitFramebufferEXT gladglBlitFramebufferEXT;
#define glBlitFramebufferEXT gladglBlitFramebufferEXT
int GL_ARB_gpu_shader_fp64;
int GL_SGIX_depth_texture;
#define GL_DEPTH_COMPONENT16_SGIX 0x81A5
#define GL_DEPTH_COMPONENT24_SGIX 0x81A6
#define GL_DEPTH_COMPONENT32_SGIX 0x81A7
int GL_EXT_vertex_weighting;
#define GL_MODELVIEW0_STACK_DEPTH_EXT 0x0BA3
#define GL_MODELVIEW1_STACK_DEPTH_EXT 0x8502
#define GL_MODELVIEW0_MATRIX_EXT 0x0BA6
#define GL_MODELVIEW1_MATRIX_EXT 0x8506
#define GL_VERTEX_WEIGHTING_EXT 0x8509
#define GL_MODELVIEW0_EXT 0x1700
#define GL_MODELVIEW1_EXT 0x850A
#define GL_CURRENT_VERTEX_WEIGHT_EXT 0x850B
#define GL_VERTEX_WEIGHT_ARRAY_EXT 0x850C
#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT 0x850D
#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT 0x850E
#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT 0x850F
#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT 0x8510
typedef void (* fp_glVertexWeightfEXT)(GLfloat);
extern fp_glVertexWeightfEXT gladglVertexWeightfEXT;
#define glVertexWeightfEXT gladglVertexWeightfEXT
typedef void (* fp_glVertexWeightfvEXT)(const GLfloat*);
extern fp_glVertexWeightfvEXT gladglVertexWeightfvEXT;
#define glVertexWeightfvEXT gladglVertexWeightfvEXT
typedef void (* fp_glVertexWeightPointerEXT)(GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glVertexWeightPointerEXT gladglVertexWeightPointerEXT;
#define glVertexWeightPointerEXT gladglVertexWeightPointerEXT
int GL_GREMEDY_string_marker;
typedef void (* fp_glStringMarkerGREMEDY)(GLsizei, const GLvoid*);
extern fp_glStringMarkerGREMEDY gladglStringMarkerGREMEDY;
#define glStringMarkerGREMEDY gladglStringMarkerGREMEDY
int GL_ARB_texture_compression_bptc;
#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB 0x8E8C
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB 0x8E8D
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB 0x8E8F
int GL_EXT_subtexture;
typedef void (* fp_glTexSubImage1DEXT)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glTexSubImage1DEXT gladglTexSubImage1DEXT;
#define glTexSubImage1DEXT gladglTexSubImage1DEXT
typedef void (* fp_glTexSubImage2DEXT)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glTexSubImage2DEXT gladglTexSubImage2DEXT;
#define glTexSubImage2DEXT gladglTexSubImage2DEXT
int GL_EXT_pixel_transform_color_table;
int GL_EXT_texture_compression_rgtc;
#define GL_COMPRESSED_RED_RGTC1_EXT 0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT 0x8DBC
#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT 0x8DBD
#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT 0x8DBE
int GL_SGIX_depth_pass_instrument;
int GL_ARB_shader_precision;
int GL_NV_evaluators;
#define GL_EVAL_2D_NV 0x86C0
#define GL_EVAL_TRIANGULAR_2D_NV 0x86C1
#define GL_MAP_TESSELLATION_NV 0x86C2
#define GL_MAP_ATTRIB_U_ORDER_NV 0x86C3
#define GL_MAP_ATTRIB_V_ORDER_NV 0x86C4
#define GL_EVAL_FRACTIONAL_TESSELLATION_NV 0x86C5
#define GL_EVAL_VERTEX_ATTRIB0_NV 0x86C6
#define GL_EVAL_VERTEX_ATTRIB1_NV 0x86C7
#define GL_EVAL_VERTEX_ATTRIB2_NV 0x86C8
#define GL_EVAL_VERTEX_ATTRIB3_NV 0x86C9
#define GL_EVAL_VERTEX_ATTRIB4_NV 0x86CA
#define GL_EVAL_VERTEX_ATTRIB5_NV 0x86CB
#define GL_EVAL_VERTEX_ATTRIB6_NV 0x86CC
#define GL_EVAL_VERTEX_ATTRIB7_NV 0x86CD
#define GL_EVAL_VERTEX_ATTRIB8_NV 0x86CE
#define GL_EVAL_VERTEX_ATTRIB9_NV 0x86CF
#define GL_EVAL_VERTEX_ATTRIB10_NV 0x86D0
#define GL_EVAL_VERTEX_ATTRIB11_NV 0x86D1
#define GL_EVAL_VERTEX_ATTRIB12_NV 0x86D2
#define GL_EVAL_VERTEX_ATTRIB13_NV 0x86D3
#define GL_EVAL_VERTEX_ATTRIB14_NV 0x86D4
#define GL_EVAL_VERTEX_ATTRIB15_NV 0x86D5
#define GL_MAX_MAP_TESSELLATION_NV 0x86D6
#define GL_MAX_RATIONAL_EVAL_ORDER_NV 0x86D7
typedef void (* fp_glMapControlPointsNV)(GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, const GLvoid*);
extern fp_glMapControlPointsNV gladglMapControlPointsNV;
#define glMapControlPointsNV gladglMapControlPointsNV
typedef void (* fp_glMapParameterivNV)(GLenum, GLenum, const GLint*);
extern fp_glMapParameterivNV gladglMapParameterivNV;
#define glMapParameterivNV gladglMapParameterivNV
typedef void (* fp_glMapParameterfvNV)(GLenum, GLenum, const GLfloat*);
extern fp_glMapParameterfvNV gladglMapParameterfvNV;
#define glMapParameterfvNV gladglMapParameterfvNV
typedef void (* fp_glGetMapControlPointsNV)(GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, GLvoid*);
extern fp_glGetMapControlPointsNV gladglGetMapControlPointsNV;
#define glGetMapControlPointsNV gladglGetMapControlPointsNV
typedef void (* fp_glGetMapParameterivNV)(GLenum, GLenum, GLint*);
extern fp_glGetMapParameterivNV gladglGetMapParameterivNV;
#define glGetMapParameterivNV gladglGetMapParameterivNV
typedef void (* fp_glGetMapParameterfvNV)(GLenum, GLenum, GLfloat*);
extern fp_glGetMapParameterfvNV gladglGetMapParameterfvNV;
#define glGetMapParameterfvNV gladglGetMapParameterfvNV
typedef void (* fp_glGetMapAttribParameterivNV)(GLenum, GLuint, GLenum, GLint*);
extern fp_glGetMapAttribParameterivNV gladglGetMapAttribParameterivNV;
#define glGetMapAttribParameterivNV gladglGetMapAttribParameterivNV
typedef void (* fp_glGetMapAttribParameterfvNV)(GLenum, GLuint, GLenum, GLfloat*);
extern fp_glGetMapAttribParameterfvNV gladglGetMapAttribParameterfvNV;
#define glGetMapAttribParameterfvNV gladglGetMapAttribParameterfvNV
typedef void (* fp_glEvalMapsNV)(GLenum, GLenum);
extern fp_glEvalMapsNV gladglEvalMapsNV;
#define glEvalMapsNV gladglEvalMapsNV
int GL_SGIS_texture_filter4;
#define GL_FILTER4_SGIS 0x8146
#define GL_TEXTURE_FILTER4_SIZE_SGIS 0x8147
typedef void (* fp_glGetTexFilterFuncSGIS)(GLenum, GLenum, GLfloat*);
extern fp_glGetTexFilterFuncSGIS gladglGetTexFilterFuncSGIS;
#define glGetTexFilterFuncSGIS gladglGetTexFilterFuncSGIS
typedef void (* fp_glTexFilterFuncSGIS)(GLenum, GLenum, GLsizei, const GLfloat*);
extern fp_glTexFilterFuncSGIS gladglTexFilterFuncSGIS;
#define glTexFilterFuncSGIS gladglTexFilterFuncSGIS
int GL_AMD_performance_monitor;
#define GL_COUNTER_TYPE_AMD 0x8BC0
#define GL_COUNTER_RANGE_AMD 0x8BC1
#define GL_UNSIGNED_INT64_AMD 0x8BC2
#define GL_PERCENTAGE_AMD 0x8BC3
#define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#define GL_PERFMON_RESULT_AMD 0x8BC6
typedef void (* fp_glGetPerfMonitorGroupsAMD)(GLint*, GLsizei, GLuint*);
extern fp_glGetPerfMonitorGroupsAMD gladglGetPerfMonitorGroupsAMD;
#define glGetPerfMonitorGroupsAMD gladglGetPerfMonitorGroupsAMD
typedef void (* fp_glGetPerfMonitorCountersAMD)(GLuint, GLint*, GLint*, GLsizei, GLuint*);
extern fp_glGetPerfMonitorCountersAMD gladglGetPerfMonitorCountersAMD;
#define glGetPerfMonitorCountersAMD gladglGetPerfMonitorCountersAMD
typedef void (* fp_glGetPerfMonitorGroupStringAMD)(GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetPerfMonitorGroupStringAMD gladglGetPerfMonitorGroupStringAMD;
#define glGetPerfMonitorGroupStringAMD gladglGetPerfMonitorGroupStringAMD
typedef void (* fp_glGetPerfMonitorCounterStringAMD)(GLuint, GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetPerfMonitorCounterStringAMD gladglGetPerfMonitorCounterStringAMD;
#define glGetPerfMonitorCounterStringAMD gladglGetPerfMonitorCounterStringAMD
typedef void (* fp_glGetPerfMonitorCounterInfoAMD)(GLuint, GLuint, GLenum, GLvoid*);
extern fp_glGetPerfMonitorCounterInfoAMD gladglGetPerfMonitorCounterInfoAMD;
#define glGetPerfMonitorCounterInfoAMD gladglGetPerfMonitorCounterInfoAMD
typedef void (* fp_glGenPerfMonitorsAMD)(GLsizei, GLuint*);
extern fp_glGenPerfMonitorsAMD gladglGenPerfMonitorsAMD;
#define glGenPerfMonitorsAMD gladglGenPerfMonitorsAMD
typedef void (* fp_glDeletePerfMonitorsAMD)(GLsizei, GLuint*);
extern fp_glDeletePerfMonitorsAMD gladglDeletePerfMonitorsAMD;
#define glDeletePerfMonitorsAMD gladglDeletePerfMonitorsAMD
typedef void (* fp_glSelectPerfMonitorCountersAMD)(GLuint, GLboolean, GLuint, GLint, GLuint*);
extern fp_glSelectPerfMonitorCountersAMD gladglSelectPerfMonitorCountersAMD;
#define glSelectPerfMonitorCountersAMD gladglSelectPerfMonitorCountersAMD
typedef void (* fp_glBeginPerfMonitorAMD)(GLuint);
extern fp_glBeginPerfMonitorAMD gladglBeginPerfMonitorAMD;
#define glBeginPerfMonitorAMD gladglBeginPerfMonitorAMD
typedef void (* fp_glEndPerfMonitorAMD)(GLuint);
extern fp_glEndPerfMonitorAMD gladglEndPerfMonitorAMD;
#define glEndPerfMonitorAMD gladglEndPerfMonitorAMD
typedef void (* fp_glGetPerfMonitorCounterDataAMD)(GLuint, GLenum, GLsizei, GLuint*, GLint*);
extern fp_glGetPerfMonitorCounterDataAMD gladglGetPerfMonitorCounterDataAMD;
#define glGetPerfMonitorCounterDataAMD gladglGetPerfMonitorCounterDataAMD
int GL_NV_geometry_shader4;
int GL_EXT_stencil_clear_tag;
#define GL_STENCIL_TAG_BITS_EXT 0x88F2
#define GL_STENCIL_CLEAR_TAG_VALUE_EXT 0x88F3
typedef void (* fp_glStencilClearTagEXT)(GLsizei, GLuint);
extern fp_glStencilClearTagEXT gladglStencilClearTagEXT;
#define glStencilClearTagEXT gladglStencilClearTagEXT
int GL_NV_vertex_program1_1;
int GL_NV_present_video;
#define GL_FRAME_NV 0x8E26
#define GL_FIELDS_NV 0x8E27
#define GL_CURRENT_TIME_NV 0x8E28
#define GL_NUM_FILL_STREAMS_NV 0x8E29
#define GL_PRESENT_TIME_NV 0x8E2A
#define GL_PRESENT_DURATION_NV 0x8E2B
typedef void (* fp_glPresentFrameKeyedNV)(GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint);
extern fp_glPresentFrameKeyedNV gladglPresentFrameKeyedNV;
#define glPresentFrameKeyedNV gladglPresentFrameKeyedNV
typedef void (* fp_glPresentFrameDualFillNV)(GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint);
extern fp_glPresentFrameDualFillNV gladglPresentFrameDualFillNV;
#define glPresentFrameDualFillNV gladglPresentFrameDualFillNV
typedef void (* fp_glGetVideoivNV)(GLuint, GLenum, GLint*);
extern fp_glGetVideoivNV gladglGetVideoivNV;
#define glGetVideoivNV gladglGetVideoivNV
typedef void (* fp_glGetVideouivNV)(GLuint, GLenum, GLuint*);
extern fp_glGetVideouivNV gladglGetVideouivNV;
#define glGetVideouivNV gladglGetVideouivNV
typedef void (* fp_glGetVideoi64vNV)(GLuint, GLenum, GLint64EXT*);
extern fp_glGetVideoi64vNV gladglGetVideoi64vNV;
#define glGetVideoi64vNV gladglGetVideoi64vNV
typedef void (* fp_glGetVideoui64vNV)(GLuint, GLenum, GLuint64EXT*);
extern fp_glGetVideoui64vNV gladglGetVideoui64vNV;
#define glGetVideoui64vNV gladglGetVideoui64vNV
int GL_ARB_texture_compression_rgtc;
int GL_HP_convolution_border_modes;
#define GL_IGNORE_BORDER_HP 0x8150
#define GL_CONSTANT_BORDER_HP 0x8151
#define GL_REPLICATE_BORDER_HP 0x8153
#define GL_CONVOLUTION_BORDER_COLOR_HP 0x8154
int GL_EXT_gpu_program_parameters;
typedef void (* fp_glProgramEnvParameters4fvEXT)(GLenum, GLuint, GLsizei, const GLfloat*);
extern fp_glProgramEnvParameters4fvEXT gladglProgramEnvParameters4fvEXT;
#define glProgramEnvParameters4fvEXT gladglProgramEnvParameters4fvEXT
typedef void (* fp_glProgramLocalParameters4fvEXT)(GLenum, GLuint, GLsizei, const GLfloat*);
extern fp_glProgramLocalParameters4fvEXT gladglProgramLocalParameters4fvEXT;
#define glProgramLocalParameters4fvEXT gladglProgramLocalParameters4fvEXT
int GL_SGIX_list_priority;
#define GL_LIST_PRIORITY_SGIX 0x8182
typedef void (* fp_glGetListParameterfvSGIX)(GLuint, GLenum, GLfloat*);
extern fp_glGetListParameterfvSGIX gladglGetListParameterfvSGIX;
#define glGetListParameterfvSGIX gladglGetListParameterfvSGIX
typedef void (* fp_glGetListParameterivSGIX)(GLuint, GLenum, GLint*);
extern fp_glGetListParameterivSGIX gladglGetListParameterivSGIX;
#define glGetListParameterivSGIX gladglGetListParameterivSGIX
typedef void (* fp_glListParameterfSGIX)(GLuint, GLenum, GLfloat);
extern fp_glListParameterfSGIX gladglListParameterfSGIX;
#define glListParameterfSGIX gladglListParameterfSGIX
typedef void (* fp_glListParameterfvSGIX)(GLuint, GLenum, const GLfloat*);
extern fp_glListParameterfvSGIX gladglListParameterfvSGIX;
#define glListParameterfvSGIX gladglListParameterfvSGIX
typedef void (* fp_glListParameteriSGIX)(GLuint, GLenum, GLint);
extern fp_glListParameteriSGIX gladglListParameteriSGIX;
#define glListParameteriSGIX gladglListParameteriSGIX
typedef void (* fp_glListParameterivSGIX)(GLuint, GLenum, const GLint*);
extern fp_glListParameterivSGIX gladglListParameterivSGIX;
#define glListParameterivSGIX gladglListParameterivSGIX
int GL_ARB_stencil_texturing;
int GL_SGIX_fog_offset;
#define GL_FOG_OFFSET_SGIX 0x8198
#define GL_FOG_OFFSET_VALUE_SGIX 0x8199
int GL_ARB_draw_elements_base_vertex;
int GL_INGR_interlace_read;
#define GL_INTERLACE_READ_INGR 0x8568
int GL_NV_transform_feedback;
#define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#define GL_TEXTURE_COORD_NV 0x8C79
#define GL_CLIP_DISTANCE_NV 0x8C7A
#define GL_VERTEX_ID_NV 0x8C7B
#define GL_PRIMITIVE_ID_NV 0x8C7C
#define GL_GENERIC_ATTRIB_NV 0x8C7D
#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#define GL_ACTIVE_VARYINGS_NV 0x8C81
#define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#define GL_PRIMITIVES_GENERATED_NV 0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#define GL_RASTERIZER_DISCARD_NV 0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#define GL_LAYER_NV 0x8DAA
#define GL_NEXT_BUFFER_NV -2
#define GL_SKIP_COMPONENTS4_NV -3
#define GL_SKIP_COMPONENTS3_NV -4
#define GL_SKIP_COMPONENTS2_NV -5
#define GL_SKIP_COMPONENTS1_NV -6
typedef void (* fp_glBeginTransformFeedbackNV)(GLenum);
extern fp_glBeginTransformFeedbackNV gladglBeginTransformFeedbackNV;
#define glBeginTransformFeedbackNV gladglBeginTransformFeedbackNV
typedef void (* fp_glEndTransformFeedbackNV)();
extern fp_glEndTransformFeedbackNV gladglEndTransformFeedbackNV;
#define glEndTransformFeedbackNV gladglEndTransformFeedbackNV
typedef void (* fp_glTransformFeedbackAttribsNV)(GLuint, const GLint*, GLenum);
extern fp_glTransformFeedbackAttribsNV gladglTransformFeedbackAttribsNV;
#define glTransformFeedbackAttribsNV gladglTransformFeedbackAttribsNV
typedef void (* fp_glBindBufferRangeNV)(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr);
extern fp_glBindBufferRangeNV gladglBindBufferRangeNV;
#define glBindBufferRangeNV gladglBindBufferRangeNV
typedef void (* fp_glBindBufferOffsetNV)(GLenum, GLuint, GLuint, GLintptr);
extern fp_glBindBufferOffsetNV gladglBindBufferOffsetNV;
#define glBindBufferOffsetNV gladglBindBufferOffsetNV
typedef void (* fp_glBindBufferBaseNV)(GLenum, GLuint, GLuint);
extern fp_glBindBufferBaseNV gladglBindBufferBaseNV;
#define glBindBufferBaseNV gladglBindBufferBaseNV
typedef void (* fp_glTransformFeedbackVaryingsNV)(GLuint, GLsizei, const GLint*, GLenum);
extern fp_glTransformFeedbackVaryingsNV gladglTransformFeedbackVaryingsNV;
#define glTransformFeedbackVaryingsNV gladglTransformFeedbackVaryingsNV
typedef void (* fp_glActiveVaryingNV)(GLuint, const GLchar*);
extern fp_glActiveVaryingNV gladglActiveVaryingNV;
#define glActiveVaryingNV gladglActiveVaryingNV
typedef GLint (* fp_glGetVaryingLocationNV)(GLuint, const GLchar*);
extern fp_glGetVaryingLocationNV gladglGetVaryingLocationNV;
#define glGetVaryingLocationNV gladglGetVaryingLocationNV
typedef void (* fp_glGetActiveVaryingNV)(GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*);
extern fp_glGetActiveVaryingNV gladglGetActiveVaryingNV;
#define glGetActiveVaryingNV gladglGetActiveVaryingNV
typedef void (* fp_glGetTransformFeedbackVaryingNV)(GLuint, GLuint, GLint*);
extern fp_glGetTransformFeedbackVaryingNV gladglGetTransformFeedbackVaryingNV;
#define glGetTransformFeedbackVaryingNV gladglGetTransformFeedbackVaryingNV
typedef void (* fp_glTransformFeedbackStreamAttribsNV)(GLsizei, const GLint*, GLsizei, const GLint*, GLenum);
extern fp_glTransformFeedbackStreamAttribsNV gladglTransformFeedbackStreamAttribsNV;
#define glTransformFeedbackStreamAttribsNV gladglTransformFeedbackStreamAttribsNV
int GL_NV_fragment_program;
#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV 0x8868
#define GL_FRAGMENT_PROGRAM_NV 0x8870
#define GL_MAX_TEXTURE_COORDS_NV 0x8871
#define GL_MAX_TEXTURE_IMAGE_UNITS_NV 0x8872
#define GL_FRAGMENT_PROGRAM_BINDING_NV 0x8873
#define GL_PROGRAM_ERROR_STRING_NV 0x8874
typedef void (* fp_glProgramNamedParameter4fNV)(GLuint, GLsizei, const GLubyte*, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glProgramNamedParameter4fNV gladglProgramNamedParameter4fNV;
#define glProgramNamedParameter4fNV gladglProgramNamedParameter4fNV
typedef void (* fp_glProgramNamedParameter4fvNV)(GLuint, GLsizei, const GLubyte*, const GLfloat*);
extern fp_glProgramNamedParameter4fvNV gladglProgramNamedParameter4fvNV;
#define glProgramNamedParameter4fvNV gladglProgramNamedParameter4fvNV
typedef void (* fp_glProgramNamedParameter4dNV)(GLuint, GLsizei, const GLubyte*, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glProgramNamedParameter4dNV gladglProgramNamedParameter4dNV;
#define glProgramNamedParameter4dNV gladglProgramNamedParameter4dNV
typedef void (* fp_glProgramNamedParameter4dvNV)(GLuint, GLsizei, const GLubyte*, const GLdouble*);
extern fp_glProgramNamedParameter4dvNV gladglProgramNamedParameter4dvNV;
#define glProgramNamedParameter4dvNV gladglProgramNamedParameter4dvNV
typedef void (* fp_glGetProgramNamedParameterfvNV)(GLuint, GLsizei, const GLubyte*, GLfloat*);
extern fp_glGetProgramNamedParameterfvNV gladglGetProgramNamedParameterfvNV;
#define glGetProgramNamedParameterfvNV gladglGetProgramNamedParameterfvNV
typedef void (* fp_glGetProgramNamedParameterdvNV)(GLuint, GLsizei, const GLubyte*, GLdouble*);
extern fp_glGetProgramNamedParameterdvNV gladglGetProgramNamedParameterdvNV;
#define glGetProgramNamedParameterdvNV gladglGetProgramNamedParameterdvNV
int GL_AMD_stencil_operation_extended;
#define GL_SET_AMD 0x874A
#define GL_REPLACE_VALUE_AMD 0x874B
#define GL_STENCIL_OP_VALUE_AMD 0x874C
#define GL_STENCIL_BACK_OP_VALUE_AMD 0x874D
typedef void (* fp_glStencilOpValueAMD)(GLenum, GLuint);
extern fp_glStencilOpValueAMD gladglStencilOpValueAMD;
#define glStencilOpValueAMD gladglStencilOpValueAMD
int GL_ARB_seamless_cubemap_per_texture;
int GL_ARB_instanced_arrays;
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB 0x88FE
typedef void (* fp_glVertexAttribDivisorARB)(GLuint, GLuint);
extern fp_glVertexAttribDivisorARB gladglVertexAttribDivisorARB;
#define glVertexAttribDivisorARB gladglVertexAttribDivisorARB
int GL_EXT_polygon_offset;
#define GL_POLYGON_OFFSET_EXT 0x8037
#define GL_POLYGON_OFFSET_FACTOR_EXT 0x8038
#define GL_POLYGON_OFFSET_BIAS_EXT 0x8039
typedef void (* fp_glPolygonOffsetEXT)(GLfloat, GLfloat);
extern fp_glPolygonOffsetEXT gladglPolygonOffsetEXT;
#define glPolygonOffsetEXT gladglPolygonOffsetEXT
int GL_NV_vertex_array_range2;
#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV 0x8533
int GL_AMD_sparse_texture;
#define GL_VIRTUAL_PAGE_SIZE_X_AMD 0x9195
#define GL_VIRTUAL_PAGE_SIZE_Y_AMD 0x9196
#define GL_VIRTUAL_PAGE_SIZE_Z_AMD 0x9197
#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD 0x9198
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD 0x9199
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS 0x919A
#define GL_MIN_SPARSE_LEVEL_AMD 0x919B
#define GL_MIN_LOD_WARNING_AMD 0x919C
#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD 0x00000001
typedef void (* fp_glTexStorageSparseAMD)(GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield);
extern fp_glTexStorageSparseAMD gladglTexStorageSparseAMD;
#define glTexStorageSparseAMD gladglTexStorageSparseAMD
typedef void (* fp_glTextureStorageSparseAMD)(GLuint, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield);
extern fp_glTextureStorageSparseAMD gladglTextureStorageSparseAMD;
#define glTextureStorageSparseAMD gladglTextureStorageSparseAMD
int GL_NV_fence;
#define GL_ALL_COMPLETED_NV 0x84F2
#define GL_FENCE_STATUS_NV 0x84F3
#define GL_FENCE_CONDITION_NV 0x84F4
typedef void (* fp_glDeleteFencesNV)(GLsizei, const GLuint*);
extern fp_glDeleteFencesNV gladglDeleteFencesNV;
#define glDeleteFencesNV gladglDeleteFencesNV
typedef void (* fp_glGenFencesNV)(GLsizei, GLuint*);
extern fp_glGenFencesNV gladglGenFencesNV;
#define glGenFencesNV gladglGenFencesNV
typedef GLboolean (* fp_glIsFenceNV)(GLuint);
extern fp_glIsFenceNV gladglIsFenceNV;
#define glIsFenceNV gladglIsFenceNV
typedef GLboolean (* fp_glTestFenceNV)(GLuint);
extern fp_glTestFenceNV gladglTestFenceNV;
#define glTestFenceNV gladglTestFenceNV
typedef void (* fp_glGetFenceivNV)(GLuint, GLenum, GLint*);
extern fp_glGetFenceivNV gladglGetFenceivNV;
#define glGetFenceivNV gladglGetFenceivNV
typedef void (* fp_glFinishFenceNV)(GLuint);
extern fp_glFinishFenceNV gladglFinishFenceNV;
#define glFinishFenceNV gladglFinishFenceNV
typedef void (* fp_glSetFenceNV)(GLuint, GLenum);
extern fp_glSetFenceNV gladglSetFenceNV;
#define glSetFenceNV gladglSetFenceNV
int GL_ARB_texture_buffer_range;
int GL_SUN_mesh_array;
#define GL_QUAD_MESH_SUN 0x8614
#define GL_TRIANGLE_MESH_SUN 0x8615
typedef void (* fp_glDrawMeshArraysSUN)(GLenum, GLint, GLsizei, GLsizei);
extern fp_glDrawMeshArraysSUN gladglDrawMeshArraysSUN;
#define glDrawMeshArraysSUN gladglDrawMeshArraysSUN
int GL_ARB_vertex_attrib_binding;
int GL_ARB_framebuffer_no_attachments;
int GL_ARB_cl_event;
#define GL_SYNC_CL_EVENT_ARB 0x8240
#define GL_SYNC_CL_EVENT_COMPLETE_ARB 0x8241
typedef GLsync (* fp_glCreateSyncFromCLeventARB)(struct _cl_context*, struct _cl_event*, GLbitfield);
extern fp_glCreateSyncFromCLeventARB gladglCreateSyncFromCLeventARB;
#define glCreateSyncFromCLeventARB gladglCreateSyncFromCLeventARB
int GL_NV_packed_depth_stencil;
#define GL_DEPTH_STENCIL_NV 0x84F9
#define GL_UNSIGNED_INT_24_8_NV 0x84FA
int GL_OES_single_precision;
typedef void (* fp_glClearDepthfOES)(GLclampf);
extern fp_glClearDepthfOES gladglClearDepthfOES;
#define glClearDepthfOES gladglClearDepthfOES
typedef void (* fp_glClipPlanefOES)(GLenum, const GLfloat*);
extern fp_glClipPlanefOES gladglClipPlanefOES;
#define glClipPlanefOES gladglClipPlanefOES
typedef void (* fp_glDepthRangefOES)(GLclampf, GLclampf);
extern fp_glDepthRangefOES gladglDepthRangefOES;
#define glDepthRangefOES gladglDepthRangefOES
typedef void (* fp_glFrustumfOES)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glFrustumfOES gladglFrustumfOES;
#define glFrustumfOES gladglFrustumfOES
typedef void (* fp_glGetClipPlanefOES)(GLenum, GLfloat*);
extern fp_glGetClipPlanefOES gladglGetClipPlanefOES;
#define glGetClipPlanefOES gladglGetClipPlanefOES
typedef void (* fp_glOrthofOES)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glOrthofOES gladglOrthofOES;
#define glOrthofOES gladglOrthofOES
int GL_NV_primitive_restart;
#define GL_PRIMITIVE_RESTART_NV 0x8558
#define GL_PRIMITIVE_RESTART_INDEX_NV 0x8559
typedef void (* fp_glPrimitiveRestartNV)();
extern fp_glPrimitiveRestartNV gladglPrimitiveRestartNV;
#define glPrimitiveRestartNV gladglPrimitiveRestartNV
typedef void (* fp_glPrimitiveRestartIndexNV)(GLuint);
extern fp_glPrimitiveRestartIndexNV gladglPrimitiveRestartIndexNV;
#define glPrimitiveRestartIndexNV gladglPrimitiveRestartIndexNV
int GL_SUN_global_alpha;
#define GL_GLOBAL_ALPHA_SUN 0x81D9
#define GL_GLOBAL_ALPHA_FACTOR_SUN 0x81DA
typedef void (* fp_glGlobalAlphaFactorbSUN)(GLbyte);
extern fp_glGlobalAlphaFactorbSUN gladglGlobalAlphaFactorbSUN;
#define glGlobalAlphaFactorbSUN gladglGlobalAlphaFactorbSUN
typedef void (* fp_glGlobalAlphaFactorsSUN)(GLshort);
extern fp_glGlobalAlphaFactorsSUN gladglGlobalAlphaFactorsSUN;
#define glGlobalAlphaFactorsSUN gladglGlobalAlphaFactorsSUN
typedef void (* fp_glGlobalAlphaFactoriSUN)(GLint);
extern fp_glGlobalAlphaFactoriSUN gladglGlobalAlphaFactoriSUN;
#define glGlobalAlphaFactoriSUN gladglGlobalAlphaFactoriSUN
typedef void (* fp_glGlobalAlphaFactorfSUN)(GLfloat);
extern fp_glGlobalAlphaFactorfSUN gladglGlobalAlphaFactorfSUN;
#define glGlobalAlphaFactorfSUN gladglGlobalAlphaFactorfSUN
typedef void (* fp_glGlobalAlphaFactordSUN)(GLdouble);
extern fp_glGlobalAlphaFactordSUN gladglGlobalAlphaFactordSUN;
#define glGlobalAlphaFactordSUN gladglGlobalAlphaFactordSUN
typedef void (* fp_glGlobalAlphaFactorubSUN)(GLubyte);
extern fp_glGlobalAlphaFactorubSUN gladglGlobalAlphaFactorubSUN;
#define glGlobalAlphaFactorubSUN gladglGlobalAlphaFactorubSUN
typedef void (* fp_glGlobalAlphaFactorusSUN)(GLushort);
extern fp_glGlobalAlphaFactorusSUN gladglGlobalAlphaFactorusSUN;
#define glGlobalAlphaFactorusSUN gladglGlobalAlphaFactorusSUN
typedef void (* fp_glGlobalAlphaFactoruiSUN)(GLuint);
extern fp_glGlobalAlphaFactoruiSUN gladglGlobalAlphaFactoruiSUN;
#define glGlobalAlphaFactoruiSUN gladglGlobalAlphaFactoruiSUN
int GL_EXT_texture_object;
#define GL_TEXTURE_PRIORITY_EXT 0x8066
#define GL_TEXTURE_RESIDENT_EXT 0x8067
#define GL_TEXTURE_1D_BINDING_EXT 0x8068
#define GL_TEXTURE_2D_BINDING_EXT 0x8069
#define GL_TEXTURE_3D_BINDING_EXT 0x806A
typedef GLboolean (* fp_glAreTexturesResidentEXT)(GLsizei, const GLuint*, GLboolean*);
extern fp_glAreTexturesResidentEXT gladglAreTexturesResidentEXT;
#define glAreTexturesResidentEXT gladglAreTexturesResidentEXT
typedef void (* fp_glBindTextureEXT)(GLenum, GLuint);
extern fp_glBindTextureEXT gladglBindTextureEXT;
#define glBindTextureEXT gladglBindTextureEXT
typedef void (* fp_glDeleteTexturesEXT)(GLsizei, const GLuint*);
extern fp_glDeleteTexturesEXT gladglDeleteTexturesEXT;
#define glDeleteTexturesEXT gladglDeleteTexturesEXT
typedef void (* fp_glGenTexturesEXT)(GLsizei, GLuint*);
extern fp_glGenTexturesEXT gladglGenTexturesEXT;
#define glGenTexturesEXT gladglGenTexturesEXT
typedef GLboolean (* fp_glIsTextureEXT)(GLuint);
extern fp_glIsTextureEXT gladglIsTextureEXT;
#define glIsTextureEXT gladglIsTextureEXT
typedef void (* fp_glPrioritizeTexturesEXT)(GLsizei, const GLuint*, const GLclampf*);
extern fp_glPrioritizeTexturesEXT gladglPrioritizeTexturesEXT;
#define glPrioritizeTexturesEXT gladglPrioritizeTexturesEXT
int GL_AMD_name_gen_delete;
#define GL_DATA_BUFFER_AMD 0x9151
#define GL_PERFORMANCE_MONITOR_AMD 0x9152
#define GL_QUERY_OBJECT_AMD 0x9153
#define GL_VERTEX_ARRAY_OBJECT_AMD 0x9154
#define GL_SAMPLER_OBJECT_AMD 0x9155
typedef void (* fp_glGenNamesAMD)(GLenum, GLuint, GLuint*);
extern fp_glGenNamesAMD gladglGenNamesAMD;
#define glGenNamesAMD gladglGenNamesAMD
typedef void (* fp_glDeleteNamesAMD)(GLenum, GLuint, const GLuint*);
extern fp_glDeleteNamesAMD gladglDeleteNamesAMD;
#define glDeleteNamesAMD gladglDeleteNamesAMD
typedef GLboolean (* fp_glIsNameAMD)(GLenum, GLuint);
extern fp_glIsNameAMD gladglIsNameAMD;
#define glIsNameAMD gladglIsNameAMD
int GL_NV_texture_compression_vtc;
int GL_SGIX_ycrcb_subsample;
int GL_NV_texture_shader3;
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV 0x8850
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV 0x8851
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8852
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV 0x8853
#define GL_OFFSET_HILO_TEXTURE_2D_NV 0x8854
#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV 0x8855
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV 0x8856
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8857
#define GL_DEPENDENT_HILO_TEXTURE_2D_NV 0x8858
#define GL_DEPENDENT_RGB_TEXTURE_3D_NV 0x8859
#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV 0x885A
#define GL_DOT_PRODUCT_PASS_THROUGH_NV 0x885B
#define GL_DOT_PRODUCT_TEXTURE_1D_NV 0x885C
#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV 0x885D
#define GL_HILO8_NV 0x885E
#define GL_SIGNED_HILO8_NV 0x885F
#define GL_FORCE_BLUE_TO_ONE_NV 0x8860
int GL_NV_texture_shader2;
#define GL_DOT_PRODUCT_TEXTURE_3D_NV 0x86EF
int GL_EXT_texture;
#define GL_ALPHA4_EXT 0x803B
#define GL_ALPHA8_EXT 0x803C
#define GL_ALPHA12_EXT 0x803D
#define GL_ALPHA16_EXT 0x803E
#define GL_LUMINANCE4_EXT 0x803F
#define GL_LUMINANCE8_EXT 0x8040
#define GL_LUMINANCE12_EXT 0x8041
#define GL_LUMINANCE16_EXT 0x8042
#define GL_LUMINANCE4_ALPHA4_EXT 0x8043
#define GL_LUMINANCE6_ALPHA2_EXT 0x8044
#define GL_LUMINANCE8_ALPHA8_EXT 0x8045
#define GL_LUMINANCE12_ALPHA4_EXT 0x8046
#define GL_LUMINANCE12_ALPHA12_EXT 0x8047
#define GL_LUMINANCE16_ALPHA16_EXT 0x8048
#define GL_INTENSITY_EXT 0x8049
#define GL_INTENSITY4_EXT 0x804A
#define GL_INTENSITY8_EXT 0x804B
#define GL_INTENSITY12_EXT 0x804C
#define GL_INTENSITY16_EXT 0x804D
#define GL_RGB2_EXT 0x804E
#define GL_RGB4_EXT 0x804F
#define GL_RGB5_EXT 0x8050
#define GL_RGB8_EXT 0x8051
#define GL_RGB10_EXT 0x8052
#define GL_RGB12_EXT 0x8053
#define GL_RGB16_EXT 0x8054
#define GL_RGBA2_EXT 0x8055
#define GL_RGBA4_EXT 0x8056
#define GL_RGB5_A1_EXT 0x8057
#define GL_RGBA8_EXT 0x8058
#define GL_RGB10_A2_EXT 0x8059
#define GL_RGBA12_EXT 0x805A
#define GL_RGBA16_EXT 0x805B
#define GL_TEXTURE_RED_SIZE_EXT 0x805C
#define GL_TEXTURE_GREEN_SIZE_EXT 0x805D
#define GL_TEXTURE_BLUE_SIZE_EXT 0x805E
#define GL_TEXTURE_ALPHA_SIZE_EXT 0x805F
#define GL_TEXTURE_LUMINANCE_SIZE_EXT 0x8060
#define GL_TEXTURE_INTENSITY_SIZE_EXT 0x8061
#define GL_REPLACE_EXT 0x8062
#define GL_PROXY_TEXTURE_1D_EXT 0x8063
#define GL_PROXY_TEXTURE_2D_EXT 0x8064
#define GL_TEXTURE_TOO_LARGE_EXT 0x8065
int GL_ARB_buffer_storage;
int GL_AMD_shader_atomic_counter_ops;
int GL_APPLE_vertex_program_evaluators;
#define GL_VERTEX_ATTRIB_MAP1_APPLE 0x8A00
#define GL_VERTEX_ATTRIB_MAP2_APPLE 0x8A01
#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE 0x8A02
#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE 0x8A03
#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE 0x8A04
#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE 0x8A05
#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE 0x8A06
#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE 0x8A07
#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE 0x8A08
#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE 0x8A09
typedef void (* fp_glEnableVertexAttribAPPLE)(GLuint, GLenum);
extern fp_glEnableVertexAttribAPPLE gladglEnableVertexAttribAPPLE;
#define glEnableVertexAttribAPPLE gladglEnableVertexAttribAPPLE
typedef void (* fp_glDisableVertexAttribAPPLE)(GLuint, GLenum);
extern fp_glDisableVertexAttribAPPLE gladglDisableVertexAttribAPPLE;
#define glDisableVertexAttribAPPLE gladglDisableVertexAttribAPPLE
typedef GLboolean (* fp_glIsVertexAttribEnabledAPPLE)(GLuint, GLenum);
extern fp_glIsVertexAttribEnabledAPPLE gladglIsVertexAttribEnabledAPPLE;
#define glIsVertexAttribEnabledAPPLE gladglIsVertexAttribEnabledAPPLE
typedef void (* fp_glMapVertexAttrib1dAPPLE)(GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, const GLdouble*);
extern fp_glMapVertexAttrib1dAPPLE gladglMapVertexAttrib1dAPPLE;
#define glMapVertexAttrib1dAPPLE gladglMapVertexAttrib1dAPPLE
typedef void (* fp_glMapVertexAttrib1fAPPLE)(GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, const GLfloat*);
extern fp_glMapVertexAttrib1fAPPLE gladglMapVertexAttrib1fAPPLE;
#define glMapVertexAttrib1fAPPLE gladglMapVertexAttrib1fAPPLE
typedef void (* fp_glMapVertexAttrib2dAPPLE)(GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, const GLdouble*);
extern fp_glMapVertexAttrib2dAPPLE gladglMapVertexAttrib2dAPPLE;
#define glMapVertexAttrib2dAPPLE gladglMapVertexAttrib2dAPPLE
typedef void (* fp_glMapVertexAttrib2fAPPLE)(GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, const GLfloat*);
extern fp_glMapVertexAttrib2fAPPLE gladglMapVertexAttrib2fAPPLE;
#define glMapVertexAttrib2fAPPLE gladglMapVertexAttrib2fAPPLE
int GL_ARB_multi_bind;
int GL_ARB_explicit_uniform_location;
int GL_ARB_depth_buffer_float;
int GL_SGIX_shadow_ambient;
#define GL_SHADOW_AMBIENT_SGIX 0x80BF
int GL_ARB_texture_cube_map;
#define GL_NORMAL_MAP_ARB 0x8511
#define GL_REFLECTION_MAP_ARB 0x8512
#define GL_TEXTURE_CUBE_MAP_ARB 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP_ARB 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARB 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB 0x851C
int GL_AMD_vertex_shader_viewport_index;
int GL_NV_vertex_buffer_unified_memory;
#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
typedef void (* fp_glBufferAddressRangeNV)(GLenum, GLuint, GLuint64EXT, GLsizeiptr);
extern fp_glBufferAddressRangeNV gladglBufferAddressRangeNV;
#define glBufferAddressRangeNV gladglBufferAddressRangeNV
typedef void (* fp_glVertexFormatNV)(GLint, GLenum, GLsizei);
extern fp_glVertexFormatNV gladglVertexFormatNV;
#define glVertexFormatNV gladglVertexFormatNV
typedef void (* fp_glNormalFormatNV)(GLenum, GLsizei);
extern fp_glNormalFormatNV gladglNormalFormatNV;
#define glNormalFormatNV gladglNormalFormatNV
typedef void (* fp_glColorFormatNV)(GLint, GLenum, GLsizei);
extern fp_glColorFormatNV gladglColorFormatNV;
#define glColorFormatNV gladglColorFormatNV
typedef void (* fp_glIndexFormatNV)(GLenum, GLsizei);
extern fp_glIndexFormatNV gladglIndexFormatNV;
#define glIndexFormatNV gladglIndexFormatNV
typedef void (* fp_glTexCoordFormatNV)(GLint, GLenum, GLsizei);
extern fp_glTexCoordFormatNV gladglTexCoordFormatNV;
#define glTexCoordFormatNV gladglTexCoordFormatNV
typedef void (* fp_glEdgeFlagFormatNV)(GLsizei);
extern fp_glEdgeFlagFormatNV gladglEdgeFlagFormatNV;
#define glEdgeFlagFormatNV gladglEdgeFlagFormatNV
typedef void (* fp_glSecondaryColorFormatNV)(GLint, GLenum, GLsizei);
extern fp_glSecondaryColorFormatNV gladglSecondaryColorFormatNV;
#define glSecondaryColorFormatNV gladglSecondaryColorFormatNV
typedef void (* fp_glFogCoordFormatNV)(GLenum, GLsizei);
extern fp_glFogCoordFormatNV gladglFogCoordFormatNV;
#define glFogCoordFormatNV gladglFogCoordFormatNV
typedef void (* fp_glVertexAttribFormatNV)(GLuint, GLint, GLenum, GLboolean, GLsizei);
extern fp_glVertexAttribFormatNV gladglVertexAttribFormatNV;
#define glVertexAttribFormatNV gladglVertexAttribFormatNV
typedef void (* fp_glVertexAttribIFormatNV)(GLuint, GLint, GLenum, GLsizei);
extern fp_glVertexAttribIFormatNV gladglVertexAttribIFormatNV;
#define glVertexAttribIFormatNV gladglVertexAttribIFormatNV
typedef void (* fp_glGetIntegerui64i_vNV)(GLenum, GLuint, GLuint64EXT*);
extern fp_glGetIntegerui64i_vNV gladglGetIntegerui64i_vNV;
#define glGetIntegerui64i_vNV gladglGetIntegerui64i_vNV
int GL_EXT_texture_env_dot3;
#define GL_DOT3_RGB_EXT 0x8740
#define GL_DOT3_RGBA_EXT 0x8741
int GL_ATI_texture_env_combine3;
#define GL_MODULATE_ADD_ATI 0x8744
#define GL_MODULATE_SIGNED_ADD_ATI 0x8745
#define GL_MODULATE_SUBTRACT_ATI 0x8746
int GL_ARB_map_buffer_alignment;
int GL_NV_blend_equation_advanced;
#define GL_BLEND_ADVANCED_COHERENT_NV 0x9285
#define GL_BLEND_OVERLAP_NV 0x9281
#define GL_BLEND_PREMULTIPLIED_SRC_NV 0x9280
#define GL_COLORBURN_NV 0x929A
#define GL_COLORDODGE_NV 0x9299
#define GL_CONJOINT_NV 0x9284
#define GL_CONTRAST_NV 0x92A1
#define GL_DARKEN_NV 0x9297
#define GL_DIFFERENCE_NV 0x929E
#define GL_DISJOINT_NV 0x9283
#define GL_DST_ATOP_NV 0x928F
#define GL_DST_IN_NV 0x928B
#define GL_DST_NV 0x9287
#define GL_DST_OUT_NV 0x928D
#define GL_DST_OVER_NV 0x9289
#define GL_EXCLUSION_NV 0x92A0
#define GL_HARDLIGHT_NV 0x929B
#define GL_HARDMIX_NV 0x92A9
#define GL_HSL_COLOR_NV 0x92AF
#define GL_HSL_HUE_NV 0x92AD
#define GL_HSL_LUMINOSITY_NV 0x92B0
#define GL_HSL_SATURATION_NV 0x92AE
#define GL_INVERT_OVG_NV 0x92B4
#define GL_INVERT_RGB_NV 0x92A3
#define GL_LIGHTEN_NV 0x9298
#define GL_LINEARBURN_NV 0x92A5
#define GL_LINEARDODGE_NV 0x92A4
#define GL_LINEARLIGHT_NV 0x92A7
#define GL_MINUS_CLAMPED_NV 0x92B3
#define GL_MINUS_NV 0x929F
#define GL_MULTIPLY_NV 0x9294
#define GL_OVERLAY_NV 0x9296
#define GL_PINLIGHT_NV 0x92A8
#define GL_PLUS_CLAMPED_ALPHA_NV 0x92B2
#define GL_PLUS_CLAMPED_NV 0x92B1
#define GL_PLUS_DARKER_NV 0x9292
#define GL_PLUS_NV 0x9291
#define GL_SCREEN_NV 0x9295
#define GL_SOFTLIGHT_NV 0x929C
#define GL_SRC_ATOP_NV 0x928E
#define GL_SRC_IN_NV 0x928A
#define GL_SRC_NV 0x9286
#define GL_SRC_OUT_NV 0x928C
#define GL_SRC_OVER_NV 0x9288
#define GL_UNCORRELATED_NV 0x9282
#define GL_VIVIDLIGHT_NV 0x92A6
typedef void (* fp_glBlendParameteriNV)(GLenum, GLint);
extern fp_glBlendParameteriNV gladglBlendParameteriNV;
#define glBlendParameteriNV gladglBlendParameteriNV
typedef void (* fp_glBlendBarrierNV)();
extern fp_glBlendBarrierNV gladglBlendBarrierNV;
#define glBlendBarrierNV gladglBlendBarrierNV
int GL_SGIS_sharpen_texture;
#define GL_LINEAR_SHARPEN_SGIS 0x80AD
#define GL_LINEAR_SHARPEN_ALPHA_SGIS 0x80AE
#define GL_LINEAR_SHARPEN_COLOR_SGIS 0x80AF
#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS 0x80B0
typedef void (* fp_glSharpenTexFuncSGIS)(GLenum, GLsizei, const GLfloat*);
extern fp_glSharpenTexFuncSGIS gladglSharpenTexFuncSGIS;
#define glSharpenTexFuncSGIS gladglSharpenTexFuncSGIS
typedef void (* fp_glGetSharpenTexFuncSGIS)(GLenum, GLfloat*);
extern fp_glGetSharpenTexFuncSGIS gladglGetSharpenTexFuncSGIS;
#define glGetSharpenTexFuncSGIS gladglGetSharpenTexFuncSGIS
int GL_ARB_vertex_program;
#define GL_COLOR_SUM_ARB 0x8458
#define GL_VERTEX_PROGRAM_ARB 0x8620
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB 0x8625
#define GL_CURRENT_VERTEX_ATTRIB_ARB 0x8626
#define GL_PROGRAM_LENGTH_ARB 0x8627
#define GL_PROGRAM_STRING_ARB 0x8628
#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB 0x862E
#define GL_MAX_PROGRAM_MATRICES_ARB 0x862F
#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB 0x8640
#define GL_CURRENT_MATRIX_ARB 0x8641
#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB 0x8642
#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB 0x8643
#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB 0x8645
#define GL_PROGRAM_ERROR_POSITION_ARB 0x864B
#define GL_PROGRAM_BINDING_ARB 0x8677
#define GL_MAX_VERTEX_ATTRIBS_ARB 0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB 0x886A
#define GL_PROGRAM_ERROR_STRING_ARB 0x8874
#define GL_PROGRAM_FORMAT_ASCII_ARB 0x8875
#define GL_PROGRAM_FORMAT_ARB 0x8876
#define GL_PROGRAM_INSTRUCTIONS_ARB 0x88A0
#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB 0x88A1
#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A2
#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A3
#define GL_PROGRAM_TEMPORARIES_ARB 0x88A4
#define GL_MAX_PROGRAM_TEMPORARIES_ARB 0x88A5
#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A6
#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A7
#define GL_PROGRAM_PARAMETERS_ARB 0x88A8
#define GL_MAX_PROGRAM_PARAMETERS_ARB 0x88A9
#define GL_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AA
#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AB
#define GL_PROGRAM_ATTRIBS_ARB 0x88AC
#define GL_MAX_PROGRAM_ATTRIBS_ARB 0x88AD
#define GL_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AE
#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AF
#define GL_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B0
#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B1
#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B2
#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B3
#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 0x88B4
#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 0x88B5
#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 0x88B6
#define GL_TRANSPOSE_CURRENT_MATRIX_ARB 0x88B7
#define GL_MATRIX0_ARB 0x88C0
#define GL_MATRIX1_ARB 0x88C1
#define GL_MATRIX2_ARB 0x88C2
#define GL_MATRIX3_ARB 0x88C3
#define GL_MATRIX4_ARB 0x88C4
#define GL_MATRIX5_ARB 0x88C5
#define GL_MATRIX6_ARB 0x88C6
#define GL_MATRIX7_ARB 0x88C7
#define GL_MATRIX8_ARB 0x88C8
#define GL_MATRIX9_ARB 0x88C9
#define GL_MATRIX10_ARB 0x88CA
#define GL_MATRIX11_ARB 0x88CB
#define GL_MATRIX12_ARB 0x88CC
#define GL_MATRIX13_ARB 0x88CD
#define GL_MATRIX14_ARB 0x88CE
#define GL_MATRIX15_ARB 0x88CF
#define GL_MATRIX16_ARB 0x88D0
#define GL_MATRIX17_ARB 0x88D1
#define GL_MATRIX18_ARB 0x88D2
#define GL_MATRIX19_ARB 0x88D3
#define GL_MATRIX20_ARB 0x88D4
#define GL_MATRIX21_ARB 0x88D5
#define GL_MATRIX22_ARB 0x88D6
#define GL_MATRIX23_ARB 0x88D7
#define GL_MATRIX24_ARB 0x88D8
#define GL_MATRIX25_ARB 0x88D9
#define GL_MATRIX26_ARB 0x88DA
#define GL_MATRIX27_ARB 0x88DB
#define GL_MATRIX28_ARB 0x88DC
#define GL_MATRIX29_ARB 0x88DD
#define GL_MATRIX30_ARB 0x88DE
#define GL_MATRIX31_ARB 0x88DF
typedef void (* fp_glVertexAttrib1dARB)(GLuint, GLdouble);
extern fp_glVertexAttrib1dARB gladglVertexAttrib1dARB;
#define glVertexAttrib1dARB gladglVertexAttrib1dARB
typedef void (* fp_glVertexAttrib1dvARB)(GLuint, const GLdouble*);
extern fp_glVertexAttrib1dvARB gladglVertexAttrib1dvARB;
#define glVertexAttrib1dvARB gladglVertexAttrib1dvARB
typedef void (* fp_glVertexAttrib1fARB)(GLuint, GLfloat);
extern fp_glVertexAttrib1fARB gladglVertexAttrib1fARB;
#define glVertexAttrib1fARB gladglVertexAttrib1fARB
typedef void (* fp_glVertexAttrib1fvARB)(GLuint, const GLfloat*);
extern fp_glVertexAttrib1fvARB gladglVertexAttrib1fvARB;
#define glVertexAttrib1fvARB gladglVertexAttrib1fvARB
typedef void (* fp_glVertexAttrib1sARB)(GLuint, GLshort);
extern fp_glVertexAttrib1sARB gladglVertexAttrib1sARB;
#define glVertexAttrib1sARB gladglVertexAttrib1sARB
typedef void (* fp_glVertexAttrib1svARB)(GLuint, const GLshort*);
extern fp_glVertexAttrib1svARB gladglVertexAttrib1svARB;
#define glVertexAttrib1svARB gladglVertexAttrib1svARB
typedef void (* fp_glVertexAttrib2dARB)(GLuint, GLdouble, GLdouble);
extern fp_glVertexAttrib2dARB gladglVertexAttrib2dARB;
#define glVertexAttrib2dARB gladglVertexAttrib2dARB
typedef void (* fp_glVertexAttrib2dvARB)(GLuint, const GLdouble*);
extern fp_glVertexAttrib2dvARB gladglVertexAttrib2dvARB;
#define glVertexAttrib2dvARB gladglVertexAttrib2dvARB
typedef void (* fp_glVertexAttrib2fARB)(GLuint, GLfloat, GLfloat);
extern fp_glVertexAttrib2fARB gladglVertexAttrib2fARB;
#define glVertexAttrib2fARB gladglVertexAttrib2fARB
typedef void (* fp_glVertexAttrib2fvARB)(GLuint, const GLfloat*);
extern fp_glVertexAttrib2fvARB gladglVertexAttrib2fvARB;
#define glVertexAttrib2fvARB gladglVertexAttrib2fvARB
typedef void (* fp_glVertexAttrib2sARB)(GLuint, GLshort, GLshort);
extern fp_glVertexAttrib2sARB gladglVertexAttrib2sARB;
#define glVertexAttrib2sARB gladglVertexAttrib2sARB
typedef void (* fp_glVertexAttrib2svARB)(GLuint, const GLshort*);
extern fp_glVertexAttrib2svARB gladglVertexAttrib2svARB;
#define glVertexAttrib2svARB gladglVertexAttrib2svARB
typedef void (* fp_glVertexAttrib3dARB)(GLuint, GLdouble, GLdouble, GLdouble);
extern fp_glVertexAttrib3dARB gladglVertexAttrib3dARB;
#define glVertexAttrib3dARB gladglVertexAttrib3dARB
typedef void (* fp_glVertexAttrib3dvARB)(GLuint, const GLdouble*);
extern fp_glVertexAttrib3dvARB gladglVertexAttrib3dvARB;
#define glVertexAttrib3dvARB gladglVertexAttrib3dvARB
typedef void (* fp_glVertexAttrib3fARB)(GLuint, GLfloat, GLfloat, GLfloat);
extern fp_glVertexAttrib3fARB gladglVertexAttrib3fARB;
#define glVertexAttrib3fARB gladglVertexAttrib3fARB
typedef void (* fp_glVertexAttrib3fvARB)(GLuint, const GLfloat*);
extern fp_glVertexAttrib3fvARB gladglVertexAttrib3fvARB;
#define glVertexAttrib3fvARB gladglVertexAttrib3fvARB
typedef void (* fp_glVertexAttrib3sARB)(GLuint, GLshort, GLshort, GLshort);
extern fp_glVertexAttrib3sARB gladglVertexAttrib3sARB;
#define glVertexAttrib3sARB gladglVertexAttrib3sARB
typedef void (* fp_glVertexAttrib3svARB)(GLuint, const GLshort*);
extern fp_glVertexAttrib3svARB gladglVertexAttrib3svARB;
#define glVertexAttrib3svARB gladglVertexAttrib3svARB
typedef void (* fp_glVertexAttrib4NbvARB)(GLuint, const GLbyte*);
extern fp_glVertexAttrib4NbvARB gladglVertexAttrib4NbvARB;
#define glVertexAttrib4NbvARB gladglVertexAttrib4NbvARB
typedef void (* fp_glVertexAttrib4NivARB)(GLuint, const GLint*);
extern fp_glVertexAttrib4NivARB gladglVertexAttrib4NivARB;
#define glVertexAttrib4NivARB gladglVertexAttrib4NivARB
typedef void (* fp_glVertexAttrib4NsvARB)(GLuint, const GLshort*);
extern fp_glVertexAttrib4NsvARB gladglVertexAttrib4NsvARB;
#define glVertexAttrib4NsvARB gladglVertexAttrib4NsvARB
typedef void (* fp_glVertexAttrib4NubARB)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
extern fp_glVertexAttrib4NubARB gladglVertexAttrib4NubARB;
#define glVertexAttrib4NubARB gladglVertexAttrib4NubARB
typedef void (* fp_glVertexAttrib4NubvARB)(GLuint, const GLubyte*);
extern fp_glVertexAttrib4NubvARB gladglVertexAttrib4NubvARB;
#define glVertexAttrib4NubvARB gladglVertexAttrib4NubvARB
typedef void (* fp_glVertexAttrib4NuivARB)(GLuint, const GLuint*);
extern fp_glVertexAttrib4NuivARB gladglVertexAttrib4NuivARB;
#define glVertexAttrib4NuivARB gladglVertexAttrib4NuivARB
typedef void (* fp_glVertexAttrib4NusvARB)(GLuint, const GLushort*);
extern fp_glVertexAttrib4NusvARB gladglVertexAttrib4NusvARB;
#define glVertexAttrib4NusvARB gladglVertexAttrib4NusvARB
typedef void (* fp_glVertexAttrib4bvARB)(GLuint, const GLbyte*);
extern fp_glVertexAttrib4bvARB gladglVertexAttrib4bvARB;
#define glVertexAttrib4bvARB gladglVertexAttrib4bvARB
typedef void (* fp_glVertexAttrib4dARB)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glVertexAttrib4dARB gladglVertexAttrib4dARB;
#define glVertexAttrib4dARB gladglVertexAttrib4dARB
typedef void (* fp_glVertexAttrib4dvARB)(GLuint, const GLdouble*);
extern fp_glVertexAttrib4dvARB gladglVertexAttrib4dvARB;
#define glVertexAttrib4dvARB gladglVertexAttrib4dvARB
typedef void (* fp_glVertexAttrib4fARB)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glVertexAttrib4fARB gladglVertexAttrib4fARB;
#define glVertexAttrib4fARB gladglVertexAttrib4fARB
typedef void (* fp_glVertexAttrib4fvARB)(GLuint, const GLfloat*);
extern fp_glVertexAttrib4fvARB gladglVertexAttrib4fvARB;
#define glVertexAttrib4fvARB gladglVertexAttrib4fvARB
typedef void (* fp_glVertexAttrib4ivARB)(GLuint, const GLint*);
extern fp_glVertexAttrib4ivARB gladglVertexAttrib4ivARB;
#define glVertexAttrib4ivARB gladglVertexAttrib4ivARB
typedef void (* fp_glVertexAttrib4sARB)(GLuint, GLshort, GLshort, GLshort, GLshort);
extern fp_glVertexAttrib4sARB gladglVertexAttrib4sARB;
#define glVertexAttrib4sARB gladglVertexAttrib4sARB
typedef void (* fp_glVertexAttrib4svARB)(GLuint, const GLshort*);
extern fp_glVertexAttrib4svARB gladglVertexAttrib4svARB;
#define glVertexAttrib4svARB gladglVertexAttrib4svARB
typedef void (* fp_glVertexAttrib4ubvARB)(GLuint, const GLubyte*);
extern fp_glVertexAttrib4ubvARB gladglVertexAttrib4ubvARB;
#define glVertexAttrib4ubvARB gladglVertexAttrib4ubvARB
typedef void (* fp_glVertexAttrib4uivARB)(GLuint, const GLuint*);
extern fp_glVertexAttrib4uivARB gladglVertexAttrib4uivARB;
#define glVertexAttrib4uivARB gladglVertexAttrib4uivARB
typedef void (* fp_glVertexAttrib4usvARB)(GLuint, const GLushort*);
extern fp_glVertexAttrib4usvARB gladglVertexAttrib4usvARB;
#define glVertexAttrib4usvARB gladglVertexAttrib4usvARB
typedef void (* fp_glVertexAttribPointerARB)(GLuint, GLint, GLenum, GLboolean, GLsizei, const GLvoid*);
extern fp_glVertexAttribPointerARB gladglVertexAttribPointerARB;
#define glVertexAttribPointerARB gladglVertexAttribPointerARB
typedef void (* fp_glEnableVertexAttribArrayARB)(GLuint);
extern fp_glEnableVertexAttribArrayARB gladglEnableVertexAttribArrayARB;
#define glEnableVertexAttribArrayARB gladglEnableVertexAttribArrayARB
typedef void (* fp_glDisableVertexAttribArrayARB)(GLuint);
extern fp_glDisableVertexAttribArrayARB gladglDisableVertexAttribArrayARB;
#define glDisableVertexAttribArrayARB gladglDisableVertexAttribArrayARB
typedef void (* fp_glProgramStringARB)(GLenum, GLenum, GLsizei, const GLvoid*);
extern fp_glProgramStringARB gladglProgramStringARB;
#define glProgramStringARB gladglProgramStringARB
typedef void (* fp_glBindProgramARB)(GLenum, GLuint);
extern fp_glBindProgramARB gladglBindProgramARB;
#define glBindProgramARB gladglBindProgramARB
typedef void (* fp_glDeleteProgramsARB)(GLsizei, const GLuint*);
extern fp_glDeleteProgramsARB gladglDeleteProgramsARB;
#define glDeleteProgramsARB gladglDeleteProgramsARB
typedef void (* fp_glGenProgramsARB)(GLsizei, GLuint*);
extern fp_glGenProgramsARB gladglGenProgramsARB;
#define glGenProgramsARB gladglGenProgramsARB
typedef void (* fp_glProgramEnvParameter4dARB)(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glProgramEnvParameter4dARB gladglProgramEnvParameter4dARB;
#define glProgramEnvParameter4dARB gladglProgramEnvParameter4dARB
typedef void (* fp_glProgramEnvParameter4dvARB)(GLenum, GLuint, const GLdouble*);
extern fp_glProgramEnvParameter4dvARB gladglProgramEnvParameter4dvARB;
#define glProgramEnvParameter4dvARB gladglProgramEnvParameter4dvARB
typedef void (* fp_glProgramEnvParameter4fARB)(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glProgramEnvParameter4fARB gladglProgramEnvParameter4fARB;
#define glProgramEnvParameter4fARB gladglProgramEnvParameter4fARB
typedef void (* fp_glProgramEnvParameter4fvARB)(GLenum, GLuint, const GLfloat*);
extern fp_glProgramEnvParameter4fvARB gladglProgramEnvParameter4fvARB;
#define glProgramEnvParameter4fvARB gladglProgramEnvParameter4fvARB
typedef void (* fp_glProgramLocalParameter4dARB)(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glProgramLocalParameter4dARB gladglProgramLocalParameter4dARB;
#define glProgramLocalParameter4dARB gladglProgramLocalParameter4dARB
typedef void (* fp_glProgramLocalParameter4dvARB)(GLenum, GLuint, const GLdouble*);
extern fp_glProgramLocalParameter4dvARB gladglProgramLocalParameter4dvARB;
#define glProgramLocalParameter4dvARB gladglProgramLocalParameter4dvARB
typedef void (* fp_glProgramLocalParameter4fARB)(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glProgramLocalParameter4fARB gladglProgramLocalParameter4fARB;
#define glProgramLocalParameter4fARB gladglProgramLocalParameter4fARB
typedef void (* fp_glProgramLocalParameter4fvARB)(GLenum, GLuint, const GLfloat*);
extern fp_glProgramLocalParameter4fvARB gladglProgramLocalParameter4fvARB;
#define glProgramLocalParameter4fvARB gladglProgramLocalParameter4fvARB
typedef void (* fp_glGetProgramEnvParameterdvARB)(GLenum, GLuint, GLdouble*);
extern fp_glGetProgramEnvParameterdvARB gladglGetProgramEnvParameterdvARB;
#define glGetProgramEnvParameterdvARB gladglGetProgramEnvParameterdvARB
typedef void (* fp_glGetProgramEnvParameterfvARB)(GLenum, GLuint, GLfloat*);
extern fp_glGetProgramEnvParameterfvARB gladglGetProgramEnvParameterfvARB;
#define glGetProgramEnvParameterfvARB gladglGetProgramEnvParameterfvARB
typedef void (* fp_glGetProgramLocalParameterdvARB)(GLenum, GLuint, GLdouble*);
extern fp_glGetProgramLocalParameterdvARB gladglGetProgramLocalParameterdvARB;
#define glGetProgramLocalParameterdvARB gladglGetProgramLocalParameterdvARB
typedef void (* fp_glGetProgramLocalParameterfvARB)(GLenum, GLuint, GLfloat*);
extern fp_glGetProgramLocalParameterfvARB gladglGetProgramLocalParameterfvARB;
#define glGetProgramLocalParameterfvARB gladglGetProgramLocalParameterfvARB
typedef void (* fp_glGetProgramivARB)(GLenum, GLenum, GLint*);
extern fp_glGetProgramivARB gladglGetProgramivARB;
#define glGetProgramivARB gladglGetProgramivARB
typedef void (* fp_glGetProgramStringARB)(GLenum, GLenum, GLvoid*);
extern fp_glGetProgramStringARB gladglGetProgramStringARB;
#define glGetProgramStringARB gladglGetProgramStringARB
typedef void (* fp_glGetVertexAttribdvARB)(GLuint, GLenum, GLdouble*);
extern fp_glGetVertexAttribdvARB gladglGetVertexAttribdvARB;
#define glGetVertexAttribdvARB gladglGetVertexAttribdvARB
typedef void (* fp_glGetVertexAttribfvARB)(GLuint, GLenum, GLfloat*);
extern fp_glGetVertexAttribfvARB gladglGetVertexAttribfvARB;
#define glGetVertexAttribfvARB gladglGetVertexAttribfvARB
typedef void (* fp_glGetVertexAttribivARB)(GLuint, GLenum, GLint*);
extern fp_glGetVertexAttribivARB gladglGetVertexAttribivARB;
#define glGetVertexAttribivARB gladglGetVertexAttribivARB
typedef void (* fp_glGetVertexAttribPointervARB)(GLuint, GLenum, GLvoid**);
extern fp_glGetVertexAttribPointervARB gladglGetVertexAttribPointervARB;
#define glGetVertexAttribPointervARB gladglGetVertexAttribPointervARB
typedef GLboolean (* fp_glIsProgramARB)(GLuint);
extern fp_glIsProgramARB gladglIsProgramARB;
#define glIsProgramARB gladglIsProgramARB
int GL_ARB_texture_rgb10_a2ui;
int GL_OML_interlace;
#define GL_INTERLACE_OML 0x8980
#define GL_INTERLACE_READ_OML 0x8981
int GL_ATI_pixel_format_float;
#define GL_RGBA_FLOAT_MODE_ATI 0x8820
#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI 0x8835
int GL_ARB_vertex_buffer_object;
#define GL_BUFFER_SIZE_ARB 0x8764
#define GL_BUFFER_USAGE_ARB 0x8765
#define GL_ARRAY_BUFFER_ARB 0x8892
#define GL_ELEMENT_ARRAY_BUFFER_ARB 0x8893
#define GL_ARRAY_BUFFER_BINDING_ARB 0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB 0x8895
#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB 0x8896
#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB 0x8897
#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB 0x8898
#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB 0x8899
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB 0x889A
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB 0x889B
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB 0x889C
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB 0x889D
#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB 0x889E
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB 0x889F
#define GL_READ_ONLY_ARB 0x88B8
#define GL_WRITE_ONLY_ARB 0x88B9
#define GL_READ_WRITE_ARB 0x88BA
#define GL_BUFFER_ACCESS_ARB 0x88BB
#define GL_BUFFER_MAPPED_ARB 0x88BC
#define GL_BUFFER_MAP_POINTER_ARB 0x88BD
#define GL_STREAM_DRAW_ARB 0x88E0
#define GL_STREAM_READ_ARB 0x88E1
#define GL_STREAM_COPY_ARB 0x88E2
#define GL_STATIC_DRAW_ARB 0x88E4
#define GL_STATIC_READ_ARB 0x88E5
#define GL_STATIC_COPY_ARB 0x88E6
#define GL_DYNAMIC_DRAW_ARB 0x88E8
#define GL_DYNAMIC_READ_ARB 0x88E9
#define GL_DYNAMIC_COPY_ARB 0x88EA
typedef void (* fp_glBindBufferARB)(GLenum, GLuint);
extern fp_glBindBufferARB gladglBindBufferARB;
#define glBindBufferARB gladglBindBufferARB
typedef void (* fp_glDeleteBuffersARB)(GLsizei, const GLuint*);
extern fp_glDeleteBuffersARB gladglDeleteBuffersARB;
#define glDeleteBuffersARB gladglDeleteBuffersARB
typedef void (* fp_glGenBuffersARB)(GLsizei, GLuint*);
extern fp_glGenBuffersARB gladglGenBuffersARB;
#define glGenBuffersARB gladglGenBuffersARB
typedef GLboolean (* fp_glIsBufferARB)(GLuint);
extern fp_glIsBufferARB gladglIsBufferARB;
#define glIsBufferARB gladglIsBufferARB
typedef void (* fp_glBufferDataARB)(GLenum, GLsizeiptrARB, const GLvoid*, GLenum);
extern fp_glBufferDataARB gladglBufferDataARB;
#define glBufferDataARB gladglBufferDataARB
typedef void (* fp_glBufferSubDataARB)(GLenum, GLintptrARB, GLsizeiptrARB, const GLvoid*);
extern fp_glBufferSubDataARB gladglBufferSubDataARB;
#define glBufferSubDataARB gladglBufferSubDataARB
typedef void (* fp_glGetBufferSubDataARB)(GLenum, GLintptrARB, GLsizeiptrARB, GLvoid*);
extern fp_glGetBufferSubDataARB gladglGetBufferSubDataARB;
#define glGetBufferSubDataARB gladglGetBufferSubDataARB
typedef void* (* fp_glMapBufferARB)(GLenum, GLenum);
extern fp_glMapBufferARB gladglMapBufferARB;
#define glMapBufferARB gladglMapBufferARB
typedef GLboolean (* fp_glUnmapBufferARB)(GLenum);
extern fp_glUnmapBufferARB gladglUnmapBufferARB;
#define glUnmapBufferARB gladglUnmapBufferARB
typedef void (* fp_glGetBufferParameterivARB)(GLenum, GLenum, GLint*);
extern fp_glGetBufferParameterivARB gladglGetBufferParameterivARB;
#define glGetBufferParameterivARB gladglGetBufferParameterivARB
typedef void (* fp_glGetBufferPointervARB)(GLenum, GLenum, GLvoid**);
extern fp_glGetBufferPointervARB gladglGetBufferPointervARB;
#define glGetBufferPointervARB gladglGetBufferPointervARB
int GL_EXT_shadow_funcs;
int GL_ATI_text_fragment_shader;
#define GL_TEXT_FRAGMENT_SHADER_ATI 0x8200
int GL_NV_vertex_array_range;
#define GL_VERTEX_ARRAY_RANGE_NV 0x851D
#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV 0x851E
#define GL_VERTEX_ARRAY_RANGE_VALID_NV 0x851F
#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV 0x8520
#define GL_VERTEX_ARRAY_RANGE_POINTER_NV 0x8521
typedef void (* fp_glFlushVertexArrayRangeNV)();
extern fp_glFlushVertexArrayRangeNV gladglFlushVertexArrayRangeNV;
#define glFlushVertexArrayRangeNV gladglFlushVertexArrayRangeNV
typedef void (* fp_glVertexArrayRangeNV)(GLsizei, const GLvoid*);
extern fp_glVertexArrayRangeNV gladglVertexArrayRangeNV;
#define glVertexArrayRangeNV gladglVertexArrayRangeNV
int GL_SGIX_fragment_lighting;
#define GL_FRAGMENT_LIGHTING_SGIX 0x8400
#define GL_FRAGMENT_COLOR_MATERIAL_SGIX 0x8401
#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX 0x8402
#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX 0x8403
#define GL_MAX_FRAGMENT_LIGHTS_SGIX 0x8404
#define GL_MAX_ACTIVE_LIGHTS_SGIX 0x8405
#define GL_CURRENT_RASTER_NORMAL_SGIX 0x8406
#define GL_LIGHT_ENV_MODE_SGIX 0x8407
#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX 0x8408
#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX 0x8409
#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX 0x840A
#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX 0x840B
#define GL_FRAGMENT_LIGHT0_SGIX 0x840C
#define GL_FRAGMENT_LIGHT1_SGIX 0x840D
#define GL_FRAGMENT_LIGHT2_SGIX 0x840E
#define GL_FRAGMENT_LIGHT3_SGIX 0x840F
#define GL_FRAGMENT_LIGHT4_SGIX 0x8410
#define GL_FRAGMENT_LIGHT5_SGIX 0x8411
#define GL_FRAGMENT_LIGHT6_SGIX 0x8412
#define GL_FRAGMENT_LIGHT7_SGIX 0x8413
typedef void (* fp_glFragmentColorMaterialSGIX)(GLenum, GLenum);
extern fp_glFragmentColorMaterialSGIX gladglFragmentColorMaterialSGIX;
#define glFragmentColorMaterialSGIX gladglFragmentColorMaterialSGIX
typedef void (* fp_glFragmentLightfSGIX)(GLenum, GLenum, GLfloat);
extern fp_glFragmentLightfSGIX gladglFragmentLightfSGIX;
#define glFragmentLightfSGIX gladglFragmentLightfSGIX
typedef void (* fp_glFragmentLightfvSGIX)(GLenum, GLenum, const GLfloat*);
extern fp_glFragmentLightfvSGIX gladglFragmentLightfvSGIX;
#define glFragmentLightfvSGIX gladglFragmentLightfvSGIX
typedef void (* fp_glFragmentLightiSGIX)(GLenum, GLenum, GLint);
extern fp_glFragmentLightiSGIX gladglFragmentLightiSGIX;
#define glFragmentLightiSGIX gladglFragmentLightiSGIX
typedef void (* fp_glFragmentLightivSGIX)(GLenum, GLenum, const GLint*);
extern fp_glFragmentLightivSGIX gladglFragmentLightivSGIX;
#define glFragmentLightivSGIX gladglFragmentLightivSGIX
typedef void (* fp_glFragmentLightModelfSGIX)(GLenum, GLfloat);
extern fp_glFragmentLightModelfSGIX gladglFragmentLightModelfSGIX;
#define glFragmentLightModelfSGIX gladglFragmentLightModelfSGIX
typedef void (* fp_glFragmentLightModelfvSGIX)(GLenum, const GLfloat*);
extern fp_glFragmentLightModelfvSGIX gladglFragmentLightModelfvSGIX;
#define glFragmentLightModelfvSGIX gladglFragmentLightModelfvSGIX
typedef void (* fp_glFragmentLightModeliSGIX)(GLenum, GLint);
extern fp_glFragmentLightModeliSGIX gladglFragmentLightModeliSGIX;
#define glFragmentLightModeliSGIX gladglFragmentLightModeliSGIX
typedef void (* fp_glFragmentLightModelivSGIX)(GLenum, const GLint*);
extern fp_glFragmentLightModelivSGIX gladglFragmentLightModelivSGIX;
#define glFragmentLightModelivSGIX gladglFragmentLightModelivSGIX
typedef void (* fp_glFragmentMaterialfSGIX)(GLenum, GLenum, GLfloat);
extern fp_glFragmentMaterialfSGIX gladglFragmentMaterialfSGIX;
#define glFragmentMaterialfSGIX gladglFragmentMaterialfSGIX
typedef void (* fp_glFragmentMaterialfvSGIX)(GLenum, GLenum, const GLfloat*);
extern fp_glFragmentMaterialfvSGIX gladglFragmentMaterialfvSGIX;
#define glFragmentMaterialfvSGIX gladglFragmentMaterialfvSGIX
typedef void (* fp_glFragmentMaterialiSGIX)(GLenum, GLenum, GLint);
extern fp_glFragmentMaterialiSGIX gladglFragmentMaterialiSGIX;
#define glFragmentMaterialiSGIX gladglFragmentMaterialiSGIX
typedef void (* fp_glFragmentMaterialivSGIX)(GLenum, GLenum, const GLint*);
extern fp_glFragmentMaterialivSGIX gladglFragmentMaterialivSGIX;
#define glFragmentMaterialivSGIX gladglFragmentMaterialivSGIX
typedef void (* fp_glGetFragmentLightfvSGIX)(GLenum, GLenum, GLfloat*);
extern fp_glGetFragmentLightfvSGIX gladglGetFragmentLightfvSGIX;
#define glGetFragmentLightfvSGIX gladglGetFragmentLightfvSGIX
typedef void (* fp_glGetFragmentLightivSGIX)(GLenum, GLenum, GLint*);
extern fp_glGetFragmentLightivSGIX gladglGetFragmentLightivSGIX;
#define glGetFragmentLightivSGIX gladglGetFragmentLightivSGIX
typedef void (* fp_glGetFragmentMaterialfvSGIX)(GLenum, GLenum, GLfloat*);
extern fp_glGetFragmentMaterialfvSGIX gladglGetFragmentMaterialfvSGIX;
#define glGetFragmentMaterialfvSGIX gladglGetFragmentMaterialfvSGIX
typedef void (* fp_glGetFragmentMaterialivSGIX)(GLenum, GLenum, GLint*);
extern fp_glGetFragmentMaterialivSGIX gladglGetFragmentMaterialivSGIX;
#define glGetFragmentMaterialivSGIX gladglGetFragmentMaterialivSGIX
typedef void (* fp_glLightEnviSGIX)(GLenum, GLint);
extern fp_glLightEnviSGIX gladglLightEnviSGIX;
#define glLightEnviSGIX gladglLightEnviSGIX
int GL_NV_texture_expand_normal;
#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV 0x888F
int GL_NV_framebuffer_multisample_coverage;
#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV 0x8CAB
#define GL_RENDERBUFFER_COLOR_SAMPLES_NV 0x8E10
#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV 0x8E11
#define GL_MULTISAMPLE_COVERAGE_MODES_NV 0x8E12
typedef void (* fp_glRenderbufferStorageMultisampleCoverageNV)(GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei);
extern fp_glRenderbufferStorageMultisampleCoverageNV gladglRenderbufferStorageMultisampleCoverageNV;
#define glRenderbufferStorageMultisampleCoverageNV gladglRenderbufferStorageMultisampleCoverageNV
int GL_EXT_timer_query;
#define GL_TIME_ELAPSED_EXT 0x88BF
typedef void (* fp_glGetQueryObjecti64vEXT)(GLuint, GLenum, GLint64*);
extern fp_glGetQueryObjecti64vEXT gladglGetQueryObjecti64vEXT;
#define glGetQueryObjecti64vEXT gladglGetQueryObjecti64vEXT
typedef void (* fp_glGetQueryObjectui64vEXT)(GLuint, GLenum, GLuint64*);
extern fp_glGetQueryObjectui64vEXT gladglGetQueryObjectui64vEXT;
#define glGetQueryObjectui64vEXT gladglGetQueryObjectui64vEXT
int GL_EXT_vertex_array_bgra;
int GL_NV_bindless_texture;
typedef GLuint64 (* fp_glGetTextureHandleNV)(GLuint);
extern fp_glGetTextureHandleNV gladglGetTextureHandleNV;
#define glGetTextureHandleNV gladglGetTextureHandleNV
typedef GLuint64 (* fp_glGetTextureSamplerHandleNV)(GLuint, GLuint);
extern fp_glGetTextureSamplerHandleNV gladglGetTextureSamplerHandleNV;
#define glGetTextureSamplerHandleNV gladglGetTextureSamplerHandleNV
typedef void (* fp_glMakeTextureHandleResidentNV)(GLuint64);
extern fp_glMakeTextureHandleResidentNV gladglMakeTextureHandleResidentNV;
#define glMakeTextureHandleResidentNV gladglMakeTextureHandleResidentNV
typedef void (* fp_glMakeTextureHandleNonResidentNV)(GLuint64);
extern fp_glMakeTextureHandleNonResidentNV gladglMakeTextureHandleNonResidentNV;
#define glMakeTextureHandleNonResidentNV gladglMakeTextureHandleNonResidentNV
typedef GLuint64 (* fp_glGetImageHandleNV)(GLuint, GLint, GLboolean, GLint, GLenum);
extern fp_glGetImageHandleNV gladglGetImageHandleNV;
#define glGetImageHandleNV gladglGetImageHandleNV
typedef void (* fp_glMakeImageHandleResidentNV)(GLuint64, GLenum);
extern fp_glMakeImageHandleResidentNV gladglMakeImageHandleResidentNV;
#define glMakeImageHandleResidentNV gladglMakeImageHandleResidentNV
typedef void (* fp_glMakeImageHandleNonResidentNV)(GLuint64);
extern fp_glMakeImageHandleNonResidentNV gladglMakeImageHandleNonResidentNV;
#define glMakeImageHandleNonResidentNV gladglMakeImageHandleNonResidentNV
typedef void (* fp_glUniformHandleui64NV)(GLint, GLuint64);
extern fp_glUniformHandleui64NV gladglUniformHandleui64NV;
#define glUniformHandleui64NV gladglUniformHandleui64NV
typedef void (* fp_glUniformHandleui64vNV)(GLint, GLsizei, const GLuint64*);
extern fp_glUniformHandleui64vNV gladglUniformHandleui64vNV;
#define glUniformHandleui64vNV gladglUniformHandleui64vNV
typedef void (* fp_glProgramUniformHandleui64NV)(GLuint, GLint, GLuint64);
extern fp_glProgramUniformHandleui64NV gladglProgramUniformHandleui64NV;
#define glProgramUniformHandleui64NV gladglProgramUniformHandleui64NV
typedef void (* fp_glProgramUniformHandleui64vNV)(GLuint, GLint, GLsizei, const GLuint64*);
extern fp_glProgramUniformHandleui64vNV gladglProgramUniformHandleui64vNV;
#define glProgramUniformHandleui64vNV gladglProgramUniformHandleui64vNV
typedef GLboolean (* fp_glIsTextureHandleResidentNV)(GLuint64);
extern fp_glIsTextureHandleResidentNV gladglIsTextureHandleResidentNV;
#define glIsTextureHandleResidentNV gladglIsTextureHandleResidentNV
typedef GLboolean (* fp_glIsImageHandleResidentNV)(GLuint64);
extern fp_glIsImageHandleResidentNV gladglIsImageHandleResidentNV;
#define glIsImageHandleResidentNV gladglIsImageHandleResidentNV
int GL_KHR_debug;
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR 0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION_KHR 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM_KHR 0x8245
#define GL_DEBUG_SOURCE_API_KHR 0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR 0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER_KHR 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY_KHR 0x8249
#define GL_DEBUG_SOURCE_APPLICATION_KHR 0x824A
#define GL_DEBUG_SOURCE_OTHER_KHR 0x824B
#define GL_DEBUG_TYPE_ERROR_KHR 0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR 0x824E
#define GL_DEBUG_TYPE_PORTABILITY_KHR 0x824F
#define GL_DEBUG_TYPE_PERFORMANCE_KHR 0x8250
#define GL_DEBUG_TYPE_OTHER_KHR 0x8251
#define GL_DEBUG_TYPE_MARKER_KHR 0x8268
#define GL_DEBUG_TYPE_PUSH_GROUP_KHR 0x8269
#define GL_DEBUG_TYPE_POP_GROUP_KHR 0x826A
#define GL_DEBUG_SEVERITY_NOTIFICATION_KHR 0x826B
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR 0x826C
#define GL_DEBUG_GROUP_STACK_DEPTH_KHR 0x826D
#define GL_BUFFER_KHR 0x82E0
#define GL_SHADER_KHR 0x82E1
#define GL_PROGRAM_KHR 0x82E2
#define GL_QUERY_KHR 0x82E3
#define GL_SAMPLER_KHR 0x82E6
#define GL_MAX_LABEL_LENGTH_KHR 0x82E8
#define GL_MAX_DEBUG_MESSAGE_LENGTH_KHR 0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES_KHR 0x9144
#define GL_DEBUG_LOGGED_MESSAGES_KHR 0x9145
#define GL_DEBUG_SEVERITY_HIGH_KHR 0x9146
#define GL_DEBUG_SEVERITY_MEDIUM_KHR 0x9147
#define GL_DEBUG_SEVERITY_LOW_KHR 0x9148
#define GL_DEBUG_OUTPUT_KHR 0x92E0
#define GL_CONTEXT_FLAG_DEBUG_BIT_KHR 0x00000002
#define GL_STACK_OVERFLOW_KHR 0x0503
#define GL_STACK_UNDERFLOW_KHR 0x0504
typedef void (* fp_glDebugMessageControlKHR)(GLenum, GLenum, GLenum, GLsizei, const GLuint*, GLboolean);
extern fp_glDebugMessageControlKHR gladglDebugMessageControlKHR;
#define glDebugMessageControlKHR gladglDebugMessageControlKHR
typedef void (* fp_glDebugMessageInsertKHR)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*);
extern fp_glDebugMessageInsertKHR gladglDebugMessageInsertKHR;
#define glDebugMessageInsertKHR gladglDebugMessageInsertKHR
typedef void (* fp_glDebugMessageCallbackKHR)(GLDEBUGPROCKHR, const void*);
extern fp_glDebugMessageCallbackKHR gladglDebugMessageCallbackKHR;
#define glDebugMessageCallbackKHR gladglDebugMessageCallbackKHR
typedef GLuint (* fp_glGetDebugMessageLogKHR)(GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*);
extern fp_glGetDebugMessageLogKHR gladglGetDebugMessageLogKHR;
#define glGetDebugMessageLogKHR gladglGetDebugMessageLogKHR
typedef void (* fp_glPushDebugGroupKHR)(GLenum, GLuint, GLsizei, const GLchar*);
extern fp_glPushDebugGroupKHR gladglPushDebugGroupKHR;
#define glPushDebugGroupKHR gladglPushDebugGroupKHR
typedef void (* fp_glPopDebugGroupKHR)();
extern fp_glPopDebugGroupKHR gladglPopDebugGroupKHR;
#define glPopDebugGroupKHR gladglPopDebugGroupKHR
typedef void (* fp_glObjectLabelKHR)(GLenum, GLuint, GLsizei, const GLchar*);
extern fp_glObjectLabelKHR gladglObjectLabelKHR;
#define glObjectLabelKHR gladglObjectLabelKHR
typedef void (* fp_glGetObjectLabelKHR)(GLenum, GLuint, GLsizei, GLsizei*, GLchar*);
extern fp_glGetObjectLabelKHR gladglGetObjectLabelKHR;
#define glGetObjectLabelKHR gladglGetObjectLabelKHR
typedef void (* fp_glObjectPtrLabelKHR)(const void*, GLsizei, const GLchar*);
extern fp_glObjectPtrLabelKHR gladglObjectPtrLabelKHR;
#define glObjectPtrLabelKHR gladglObjectPtrLabelKHR
typedef void (* fp_glGetObjectPtrLabelKHR)(const void*, GLsizei, GLsizei*, GLchar*);
extern fp_glGetObjectPtrLabelKHR gladglGetObjectPtrLabelKHR;
#define glGetObjectPtrLabelKHR gladglGetObjectPtrLabelKHR
typedef void (* fp_glGetPointervKHR)(GLenum, GLvoid**);
extern fp_glGetPointervKHR gladglGetPointervKHR;
#define glGetPointervKHR gladglGetPointervKHR
int GL_SGIS_texture_border_clamp;
#define GL_CLAMP_TO_BORDER_SGIS 0x812D
int GL_ATI_vertex_attrib_array_object;
typedef void (* fp_glVertexAttribArrayObjectATI)(GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint);
extern fp_glVertexAttribArrayObjectATI gladglVertexAttribArrayObjectATI;
#define glVertexAttribArrayObjectATI gladglVertexAttribArrayObjectATI
typedef void (* fp_glGetVertexAttribArrayObjectfvATI)(GLuint, GLenum, GLfloat*);
extern fp_glGetVertexAttribArrayObjectfvATI gladglGetVertexAttribArrayObjectfvATI;
#define glGetVertexAttribArrayObjectfvATI gladglGetVertexAttribArrayObjectfvATI
typedef void (* fp_glGetVertexAttribArrayObjectivATI)(GLuint, GLenum, GLint*);
extern fp_glGetVertexAttribArrayObjectivATI gladglGetVertexAttribArrayObjectivATI;
#define glGetVertexAttribArrayObjectivATI gladglGetVertexAttribArrayObjectivATI
int GL_SGIX_clipmap;
#define GL_LINEAR_CLIPMAP_LINEAR_SGIX 0x8170
#define GL_TEXTURE_CLIPMAP_CENTER_SGIX 0x8171
#define GL_TEXTURE_CLIPMAP_FRAME_SGIX 0x8172
#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX 0x8173
#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8174
#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX 0x8175
#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX 0x8176
#define GL_MAX_CLIPMAP_DEPTH_SGIX 0x8177
#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8178
#define GL_NEAREST_CLIPMAP_NEAREST_SGIX 0x844D
#define GL_NEAREST_CLIPMAP_LINEAR_SGIX 0x844E
#define GL_LINEAR_CLIPMAP_NEAREST_SGIX 0x844F
int GL_EXT_geometry_shader4;
#define GL_GEOMETRY_SHADER_EXT 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT_EXT 0x8DDA
#define GL_GEOMETRY_INPUT_TYPE_EXT 0x8DDB
#define GL_GEOMETRY_OUTPUT_TYPE_EXT 0x8DDC
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 0x8C29
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT 0x8DDD
#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT 0x8DDE
#define GL_MAX_VARYING_COMPONENTS_EXT 0x8B4B
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT 0x8DE1
#define GL_LINES_ADJACENCY_EXT 0x000A
#define GL_LINE_STRIP_ADJACENCY_EXT 0x000B
#define GL_TRIANGLES_ADJACENCY_EXT 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY_EXT 0x000D
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT 0x8DA9
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 0x8DA7
#define GL_PROGRAM_POINT_SIZE_EXT 0x8642
int GL_MESA_ycbcr_texture;
#define GL_UNSIGNED_SHORT_8_8_MESA 0x85BA
#define GL_UNSIGNED_SHORT_8_8_REV_MESA 0x85BB
#define GL_YCBCR_MESA 0x8757
int GL_MESAX_texture_stack;
#define GL_TEXTURE_1D_STACK_MESAX 0x8759
#define GL_TEXTURE_2D_STACK_MESAX 0x875A
#define GL_PROXY_TEXTURE_1D_STACK_MESAX 0x875B
#define GL_PROXY_TEXTURE_2D_STACK_MESAX 0x875C
#define GL_TEXTURE_1D_STACK_BINDING_MESAX 0x875D
#define GL_TEXTURE_2D_STACK_BINDING_MESAX 0x875E
int GL_AMD_seamless_cubemap_per_texture;
int GL_EXT_bindable_uniform;
#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#define GL_UNIFORM_BUFFER_EXT 0x8DEE
#define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
typedef void (* fp_glUniformBufferEXT)(GLuint, GLint, GLuint);
extern fp_glUniformBufferEXT gladglUniformBufferEXT;
#define glUniformBufferEXT gladglUniformBufferEXT
typedef GLint (* fp_glGetUniformBufferSizeEXT)(GLuint, GLint);
extern fp_glGetUniformBufferSizeEXT gladglGetUniformBufferSizeEXT;
#define glGetUniformBufferSizeEXT gladglGetUniformBufferSizeEXT
typedef GLintptr (* fp_glGetUniformOffsetEXT)(GLuint, GLint);
extern fp_glGetUniformOffsetEXT gladglGetUniformOffsetEXT;
#define glGetUniformOffsetEXT gladglGetUniformOffsetEXT
int GL_ARB_fragment_program_shadow;
int GL_ATI_element_array;
#define GL_ELEMENT_ARRAY_ATI 0x8768
#define GL_ELEMENT_ARRAY_TYPE_ATI 0x8769
#define GL_ELEMENT_ARRAY_POINTER_ATI 0x876A
typedef void (* fp_glElementPointerATI)(GLenum, const GLvoid*);
extern fp_glElementPointerATI gladglElementPointerATI;
#define glElementPointerATI gladglElementPointerATI
typedef void (* fp_glDrawElementArrayATI)(GLenum, GLsizei);
extern fp_glDrawElementArrayATI gladglDrawElementArrayATI;
#define glDrawElementArrayATI gladglDrawElementArrayATI
typedef void (* fp_glDrawRangeElementArrayATI)(GLenum, GLuint, GLuint, GLsizei);
extern fp_glDrawRangeElementArrayATI gladglDrawRangeElementArrayATI;
#define glDrawRangeElementArrayATI gladglDrawRangeElementArrayATI
int GL_AMD_texture_texture4;
int GL_SGIX_reference_plane;
#define GL_REFERENCE_PLANE_SGIX 0x817D
#define GL_REFERENCE_PLANE_EQUATION_SGIX 0x817E
typedef void (* fp_glReferencePlaneSGIX)(const GLdouble*);
extern fp_glReferencePlaneSGIX gladglReferencePlaneSGIX;
#define glReferencePlaneSGIX gladglReferencePlaneSGIX
int GL_EXT_stencil_two_side;
#define GL_STENCIL_TEST_TWO_SIDE_EXT 0x8910
#define GL_ACTIVE_STENCIL_FACE_EXT 0x8911
typedef void (* fp_glActiveStencilFaceEXT)(GLenum);
extern fp_glActiveStencilFaceEXT gladglActiveStencilFaceEXT;
#define glActiveStencilFaceEXT gladglActiveStencilFaceEXT
int GL_SGIX_texture_lod_bias;
#define GL_TEXTURE_LOD_BIAS_S_SGIX 0x818E
#define GL_TEXTURE_LOD_BIAS_T_SGIX 0x818F
#define GL_TEXTURE_LOD_BIAS_R_SGIX 0x8190
int GL_NV_explicit_multisample;
#define GL_SAMPLE_POSITION_NV 0x8E50
#define GL_SAMPLE_MASK_NV 0x8E51
#define GL_SAMPLE_MASK_VALUE_NV 0x8E52
#define GL_TEXTURE_BINDING_RENDERBUFFER_NV 0x8E53
#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV 0x8E54
#define GL_TEXTURE_RENDERBUFFER_NV 0x8E55
#define GL_SAMPLER_RENDERBUFFER_NV 0x8E56
#define GL_INT_SAMPLER_RENDERBUFFER_NV 0x8E57
#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV 0x8E58
#define GL_MAX_SAMPLE_MASK_WORDS_NV 0x8E59
typedef void (* fp_glGetMultisamplefvNV)(GLenum, GLuint, GLfloat*);
extern fp_glGetMultisamplefvNV gladglGetMultisamplefvNV;
#define glGetMultisamplefvNV gladglGetMultisamplefvNV
typedef void (* fp_glSampleMaskIndexedNV)(GLuint, GLbitfield);
extern fp_glSampleMaskIndexedNV gladglSampleMaskIndexedNV;
#define glSampleMaskIndexedNV gladglSampleMaskIndexedNV
typedef void (* fp_glTexRenderbufferNV)(GLenum, GLuint);
extern fp_glTexRenderbufferNV gladglTexRenderbufferNV;
#define glTexRenderbufferNV gladglTexRenderbufferNV
int GL_IBM_static_data;
#define GL_ALL_STATIC_DATA_IBM 103060
#define GL_STATIC_VERTEX_ARRAY_IBM 103061
typedef void (* fp_glFlushStaticDataIBM)(GLenum);
extern fp_glFlushStaticDataIBM gladglFlushStaticDataIBM;
#define glFlushStaticDataIBM gladglFlushStaticDataIBM
int GL_EXT_clip_volume_hint;
#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT 0x80F0
int GL_EXT_texture_perturb_normal;
#define GL_PERTURB_EXT 0x85AE
#define GL_TEXTURE_NORMAL_EXT 0x85AF
typedef void (* fp_glTextureNormalEXT)(GLenum);
extern fp_glTextureNormalEXT gladglTextureNormalEXT;
#define glTextureNormalEXT gladglTextureNormalEXT
int GL_NV_fragment_program2;
#define GL_MAX_PROGRAM_IF_DEPTH_NV 0x88F6
#define GL_MAX_PROGRAM_LOOP_DEPTH_NV 0x88F7
#define GL_MAX_PROGRAM_LOOP_COUNT_NV 0x88F8
int GL_NV_fragment_program4;
int GL_EXT_point_parameters;
#define GL_POINT_SIZE_MIN_EXT 0x8126
#define GL_POINT_SIZE_MAX_EXT 0x8127
#define GL_POINT_FADE_THRESHOLD_SIZE_EXT 0x8128
#define GL_DISTANCE_ATTENUATION_EXT 0x8129
typedef void (* fp_glPointParameterfEXT)(GLenum, GLfloat);
extern fp_glPointParameterfEXT gladglPointParameterfEXT;
#define glPointParameterfEXT gladglPointParameterfEXT
typedef void (* fp_glPointParameterfvEXT)(GLenum, const GLfloat*);
extern fp_glPointParameterfvEXT gladglPointParameterfvEXT;
#define glPointParameterfvEXT gladglPointParameterfvEXT
int GL_PGI_misc_hints;
#define GL_PREFER_DOUBLEBUFFER_HINT_PGI 0x1A1F8
#define GL_CONSERVE_MEMORY_HINT_PGI 0x1A1FD
#define GL_RECLAIM_MEMORY_HINT_PGI 0x1A1FE
#define GL_NATIVE_GRAPHICS_HANDLE_PGI 0x1A202
#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI 0x1A203
#define GL_NATIVE_GRAPHICS_END_HINT_PGI 0x1A204
#define GL_ALWAYS_FAST_HINT_PGI 0x1A20C
#define GL_ALWAYS_SOFT_HINT_PGI 0x1A20D
#define GL_ALLOW_DRAW_OBJ_HINT_PGI 0x1A20E
#define GL_ALLOW_DRAW_WIN_HINT_PGI 0x1A20F
#define GL_ALLOW_DRAW_FRG_HINT_PGI 0x1A210
#define GL_ALLOW_DRAW_MEM_HINT_PGI 0x1A211
#define GL_STRICT_DEPTHFUNC_HINT_PGI 0x1A216
#define GL_STRICT_LIGHTING_HINT_PGI 0x1A217
#define GL_STRICT_SCISSOR_HINT_PGI 0x1A218
#define GL_FULL_STIPPLE_HINT_PGI 0x1A219
#define GL_CLIP_NEAR_HINT_PGI 0x1A220
#define GL_CLIP_FAR_HINT_PGI 0x1A221
#define GL_WIDE_LINE_HINT_PGI 0x1A222
#define GL_BACK_NORMALS_HINT_PGI 0x1A223
typedef void (* fp_glHintPGI)(GLenum, GLint);
extern fp_glHintPGI gladglHintPGI;
#define glHintPGI gladglHintPGI
int GL_SGIX_subsample;
#define GL_PACK_SUBSAMPLE_RATE_SGIX 0x85A0
#define GL_UNPACK_SUBSAMPLE_RATE_SGIX 0x85A1
#define GL_PIXEL_SUBSAMPLE_4444_SGIX 0x85A2
#define GL_PIXEL_SUBSAMPLE_2424_SGIX 0x85A3
#define GL_PIXEL_SUBSAMPLE_4242_SGIX 0x85A4
int GL_AMD_shader_stencil_export;
int GL_ARB_shader_texture_lod;
int GL_ARB_vertex_shader;
#define GL_VERTEX_SHADER_ARB 0x8B31
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB 0x8B4A
#define GL_MAX_VARYING_FLOATS_ARB 0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB 0x8B4D
#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB 0x8B89
#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB 0x8B8A
typedef void (* fp_glBindAttribLocationARB)(GLhandleARB, GLuint, const GLcharARB*);
extern fp_glBindAttribLocationARB gladglBindAttribLocationARB;
#define glBindAttribLocationARB gladglBindAttribLocationARB
typedef void (* fp_glGetActiveAttribARB)(GLhandleARB, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLcharARB*);
extern fp_glGetActiveAttribARB gladglGetActiveAttribARB;
#define glGetActiveAttribARB gladglGetActiveAttribARB
typedef GLint (* fp_glGetAttribLocationARB)(GLhandleARB, const GLcharARB*);
extern fp_glGetAttribLocationARB gladglGetAttribLocationARB;
#define glGetAttribLocationARB gladglGetAttribLocationARB
int GL_ARB_depth_clamp;
int GL_SGIS_texture_select;
#define GL_DUAL_ALPHA4_SGIS 0x8110
#define GL_DUAL_ALPHA8_SGIS 0x8111
#define GL_DUAL_ALPHA12_SGIS 0x8112
#define GL_DUAL_ALPHA16_SGIS 0x8113
#define GL_DUAL_LUMINANCE4_SGIS 0x8114
#define GL_DUAL_LUMINANCE8_SGIS 0x8115
#define GL_DUAL_LUMINANCE12_SGIS 0x8116
#define GL_DUAL_LUMINANCE16_SGIS 0x8117
#define GL_DUAL_INTENSITY4_SGIS 0x8118
#define GL_DUAL_INTENSITY8_SGIS 0x8119
#define GL_DUAL_INTENSITY12_SGIS 0x811A
#define GL_DUAL_INTENSITY16_SGIS 0x811B
#define GL_DUAL_LUMINANCE_ALPHA4_SGIS 0x811C
#define GL_DUAL_LUMINANCE_ALPHA8_SGIS 0x811D
#define GL_QUAD_ALPHA4_SGIS 0x811E
#define GL_QUAD_ALPHA8_SGIS 0x811F
#define GL_QUAD_LUMINANCE4_SGIS 0x8120
#define GL_QUAD_LUMINANCE8_SGIS 0x8121
#define GL_QUAD_INTENSITY4_SGIS 0x8122
#define GL_QUAD_INTENSITY8_SGIS 0x8123
#define GL_DUAL_TEXTURE_SELECT_SGIS 0x8124
#define GL_QUAD_TEXTURE_SELECT_SGIS 0x8125
int GL_NV_texture_shader;
#define GL_OFFSET_TEXTURE_RECTANGLE_NV 0x864C
#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV 0x864D
#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV 0x864E
#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV 0x86D9
#define GL_UNSIGNED_INT_S8_S8_8_8_NV 0x86DA
#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV 0x86DB
#define GL_DSDT_MAG_INTENSITY_NV 0x86DC
#define GL_SHADER_CONSISTENT_NV 0x86DD
#define GL_TEXTURE_SHADER_NV 0x86DE
#define GL_SHADER_OPERATION_NV 0x86DF
#define GL_CULL_MODES_NV 0x86E0
#define GL_OFFSET_TEXTURE_MATRIX_NV 0x86E1
#define GL_OFFSET_TEXTURE_SCALE_NV 0x86E2
#define GL_OFFSET_TEXTURE_BIAS_NV 0x86E3
#define GL_OFFSET_TEXTURE_2D_MATRIX_NV 0x86E1
#define GL_OFFSET_TEXTURE_2D_SCALE_NV 0x86E2
#define GL_OFFSET_TEXTURE_2D_BIAS_NV 0x86E3
#define GL_PREVIOUS_TEXTURE_INPUT_NV 0x86E4
#define GL_CONST_EYE_NV 0x86E5
#define GL_PASS_THROUGH_NV 0x86E6
#define GL_CULL_FRAGMENT_NV 0x86E7
#define GL_OFFSET_TEXTURE_2D_NV 0x86E8
#define GL_DEPENDENT_AR_TEXTURE_2D_NV 0x86E9
#define GL_DEPENDENT_GB_TEXTURE_2D_NV 0x86EA
#define GL_DOT_PRODUCT_NV 0x86EC
#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV 0x86ED
#define GL_DOT_PRODUCT_TEXTURE_2D_NV 0x86EE
#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV 0x86F0
#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV 0x86F1
#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV 0x86F2
#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV 0x86F3
#define GL_HILO_NV 0x86F4
#define GL_DSDT_NV 0x86F5
#define GL_DSDT_MAG_NV 0x86F6
#define GL_DSDT_MAG_VIB_NV 0x86F7
#define GL_HILO16_NV 0x86F8
#define GL_SIGNED_HILO_NV 0x86F9
#define GL_SIGNED_HILO16_NV 0x86FA
#define GL_SIGNED_RGBA_NV 0x86FB
#define GL_SIGNED_RGBA8_NV 0x86FC
#define GL_SIGNED_RGB_NV 0x86FE
#define GL_SIGNED_RGB8_NV 0x86FF
#define GL_SIGNED_LUMINANCE_NV 0x8701
#define GL_SIGNED_LUMINANCE8_NV 0x8702
#define GL_SIGNED_LUMINANCE_ALPHA_NV 0x8703
#define GL_SIGNED_LUMINANCE8_ALPHA8_NV 0x8704
#define GL_SIGNED_ALPHA_NV 0x8705
#define GL_SIGNED_ALPHA8_NV 0x8706
#define GL_SIGNED_INTENSITY_NV 0x8707
#define GL_SIGNED_INTENSITY8_NV 0x8708
#define GL_DSDT8_NV 0x8709
#define GL_DSDT8_MAG8_NV 0x870A
#define GL_DSDT8_MAG8_INTENSITY8_NV 0x870B
#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV 0x870C
#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV 0x870D
#define GL_HI_SCALE_NV 0x870E
#define GL_LO_SCALE_NV 0x870F
#define GL_DS_SCALE_NV 0x8710
#define GL_DT_SCALE_NV 0x8711
#define GL_MAGNITUDE_SCALE_NV 0x8712
#define GL_VIBRANCE_SCALE_NV 0x8713
#define GL_HI_BIAS_NV 0x8714
#define GL_LO_BIAS_NV 0x8715
#define GL_DS_BIAS_NV 0x8716
#define GL_DT_BIAS_NV 0x8717
#define GL_MAGNITUDE_BIAS_NV 0x8718
#define GL_VIBRANCE_BIAS_NV 0x8719
#define GL_TEXTURE_BORDER_VALUES_NV 0x871A
#define GL_TEXTURE_HI_SIZE_NV 0x871B
#define GL_TEXTURE_LO_SIZE_NV 0x871C
#define GL_TEXTURE_DS_SIZE_NV 0x871D
#define GL_TEXTURE_DT_SIZE_NV 0x871E
#define GL_TEXTURE_MAG_SIZE_NV 0x871F
int GL_ARB_tessellation_shader;
int GL_EXT_draw_buffers2;
typedef void (* fp_glColorMaskIndexedEXT)(GLuint, GLboolean, GLboolean, GLboolean, GLboolean);
extern fp_glColorMaskIndexedEXT gladglColorMaskIndexedEXT;
#define glColorMaskIndexedEXT gladglColorMaskIndexedEXT
typedef void (* fp_glGetBooleanIndexedvEXT)(GLenum, GLuint, GLboolean*);
extern fp_glGetBooleanIndexedvEXT gladglGetBooleanIndexedvEXT;
#define glGetBooleanIndexedvEXT gladglGetBooleanIndexedvEXT
typedef void (* fp_glGetIntegerIndexedvEXT)(GLenum, GLuint, GLint*);
extern fp_glGetIntegerIndexedvEXT gladglGetIntegerIndexedvEXT;
#define glGetIntegerIndexedvEXT gladglGetIntegerIndexedvEXT
typedef void (* fp_glEnableIndexedEXT)(GLenum, GLuint);
extern fp_glEnableIndexedEXT gladglEnableIndexedEXT;
#define glEnableIndexedEXT gladglEnableIndexedEXT
typedef void (* fp_glDisableIndexedEXT)(GLenum, GLuint);
extern fp_glDisableIndexedEXT gladglDisableIndexedEXT;
#define glDisableIndexedEXT gladglDisableIndexedEXT
typedef GLboolean (* fp_glIsEnabledIndexedEXT)(GLenum, GLuint);
extern fp_glIsEnabledIndexedEXT gladglIsEnabledIndexedEXT;
#define glIsEnabledIndexedEXT gladglIsEnabledIndexedEXT
int GL_ARB_vertex_attrib_64bit;
int GL_WIN_specular_fog;
#define GL_FOG_SPECULAR_TEXTURE_WIN 0x80EC
int GL_AMD_interleaved_elements;
#define GL_VERTEX_ELEMENT_SWIZZLE_AMD 0x91A4
#define GL_VERTEX_ID_SWIZZLE_AMD 0x91A5
typedef void (* fp_glVertexAttribParameteriAMD)(GLuint, GLenum, GLint);
extern fp_glVertexAttribParameteriAMD gladglVertexAttribParameteriAMD;
#define glVertexAttribParameteriAMD gladglVertexAttribParameteriAMD
int GL_ARB_fragment_program;
#define GL_FRAGMENT_PROGRAM_ARB 0x8804
#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB 0x8805
#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB 0x8806
#define GL_PROGRAM_TEX_INDIRECTIONS_ARB 0x8807
#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x8808
#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x8809
#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x880A
#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB 0x880B
#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB 0x880C
#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB 0x880D
#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x880E
#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x880F
#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x8810
#define GL_MAX_TEXTURE_COORDS_ARB 0x8871
#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB 0x8872
int GL_OML_resample;
#define GL_PACK_RESAMPLE_OML 0x8984
#define GL_UNPACK_RESAMPLE_OML 0x8985
#define GL_RESAMPLE_REPLICATE_OML 0x8986
#define GL_RESAMPLE_ZERO_FILL_OML 0x8987
#define GL_RESAMPLE_AVERAGE_OML 0x8988
#define GL_RESAMPLE_DECIMATE_OML 0x8989
int GL_APPLE_ycbcr_422;
#define GL_YCBCR_422_APPLE 0x85B9
#define GL_UNSIGNED_SHORT_8_8_APPLE 0x85BA
#define GL_UNSIGNED_SHORT_8_8_REV_APPLE 0x85BB
int GL_SGIX_texture_add_env;
#define GL_TEXTURE_ENV_BIAS_SGIX 0x80BE
int GL_ARB_shadow_ambient;
#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB 0x80BF
int GL_ARB_texture_storage;
int GL_EXT_pixel_buffer_object;
#define GL_PIXEL_PACK_BUFFER_EXT 0x88EB
#define GL_PIXEL_UNPACK_BUFFER_EXT 0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING_EXT 0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT 0x88EF
int GL_ARB_copy_image;
int GL_SGIS_pixel_texture;
#define GL_PIXEL_TEXTURE_SGIS 0x8353
#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS 0x8354
#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS 0x8355
#define GL_PIXEL_GROUP_COLOR_SGIS 0x8356
typedef void (* fp_glPixelTexGenParameteriSGIS)(GLenum, GLint);
extern fp_glPixelTexGenParameteriSGIS gladglPixelTexGenParameteriSGIS;
#define glPixelTexGenParameteriSGIS gladglPixelTexGenParameteriSGIS
typedef void (* fp_glPixelTexGenParameterivSGIS)(GLenum, const GLint*);
extern fp_glPixelTexGenParameterivSGIS gladglPixelTexGenParameterivSGIS;
#define glPixelTexGenParameterivSGIS gladglPixelTexGenParameterivSGIS
typedef void (* fp_glPixelTexGenParameterfSGIS)(GLenum, GLfloat);
extern fp_glPixelTexGenParameterfSGIS gladglPixelTexGenParameterfSGIS;
#define glPixelTexGenParameterfSGIS gladglPixelTexGenParameterfSGIS
typedef void (* fp_glPixelTexGenParameterfvSGIS)(GLenum, const GLfloat*);
extern fp_glPixelTexGenParameterfvSGIS gladglPixelTexGenParameterfvSGIS;
#define glPixelTexGenParameterfvSGIS gladglPixelTexGenParameterfvSGIS
typedef void (* fp_glGetPixelTexGenParameterivSGIS)(GLenum, GLint*);
extern fp_glGetPixelTexGenParameterivSGIS gladglGetPixelTexGenParameterivSGIS;
#define glGetPixelTexGenParameterivSGIS gladglGetPixelTexGenParameterivSGIS
typedef void (* fp_glGetPixelTexGenParameterfvSGIS)(GLenum, GLfloat*);
extern fp_glGetPixelTexGenParameterfvSGIS gladglGetPixelTexGenParameterfvSGIS;
#define glGetPixelTexGenParameterfvSGIS gladglGetPixelTexGenParameterfvSGIS
int GL_SGIS_generate_mipmap;
#define GL_GENERATE_MIPMAP_SGIS 0x8191
#define GL_GENERATE_MIPMAP_HINT_SGIS 0x8192
int GL_SGIX_instruments;
#define GL_INSTRUMENT_BUFFER_POINTER_SGIX 0x8180
#define GL_INSTRUMENT_MEASUREMENTS_SGIX 0x8181
typedef GLint (* fp_glGetInstrumentsSGIX)();
extern fp_glGetInstrumentsSGIX gladglGetInstrumentsSGIX;
#define glGetInstrumentsSGIX gladglGetInstrumentsSGIX
typedef void (* fp_glInstrumentsBufferSGIX)(GLsizei, GLint*);
extern fp_glInstrumentsBufferSGIX gladglInstrumentsBufferSGIX;
#define glInstrumentsBufferSGIX gladglInstrumentsBufferSGIX
typedef GLint (* fp_glPollInstrumentsSGIX)(GLint*);
extern fp_glPollInstrumentsSGIX gladglPollInstrumentsSGIX;
#define glPollInstrumentsSGIX gladglPollInstrumentsSGIX
typedef void (* fp_glReadInstrumentsSGIX)(GLint);
extern fp_glReadInstrumentsSGIX gladglReadInstrumentsSGIX;
#define glReadInstrumentsSGIX gladglReadInstrumentsSGIX
typedef void (* fp_glStartInstrumentsSGIX)();
extern fp_glStartInstrumentsSGIX gladglStartInstrumentsSGIX;
#define glStartInstrumentsSGIX gladglStartInstrumentsSGIX
typedef void (* fp_glStopInstrumentsSGIX)(GLint);
extern fp_glStopInstrumentsSGIX gladglStopInstrumentsSGIX;
#define glStopInstrumentsSGIX gladglStopInstrumentsSGIX
int GL_HP_texture_lighting;
#define GL_TEXTURE_LIGHTING_MODE_HP 0x8167
#define GL_TEXTURE_POST_SPECULAR_HP 0x8168
#define GL_TEXTURE_PRE_SPECULAR_HP 0x8169
int GL_ARB_shader_storage_buffer_object;
int GL_EXT_blend_minmax;
#define GL_MIN_EXT 0x8007
#define GL_MAX_EXT 0x8008
#define GL_FUNC_ADD_EXT 0x8006
#define GL_BLEND_EQUATION_EXT 0x8009
typedef void (* fp_glBlendEquationEXT)(GLenum);
extern fp_glBlendEquationEXT gladglBlendEquationEXT;
#define glBlendEquationEXT gladglBlendEquationEXT
int GL_MESA_pack_invert;
#define GL_PACK_INVERT_MESA 0x8758
int GL_ARB_base_instance;
int GL_SGIX_convolution_accuracy;
#define GL_CONVOLUTION_HINT_SGIX 0x8316
int GL_PGI_vertex_hints;
#define GL_VERTEX_DATA_HINT_PGI 0x1A22A
#define GL_VERTEX_CONSISTENT_HINT_PGI 0x1A22B
#define GL_MATERIAL_SIDE_HINT_PGI 0x1A22C
#define GL_MAX_VERTEX_HINT_PGI 0x1A22D
#define GL_COLOR3_BIT_PGI 0x00010000
#define GL_COLOR4_BIT_PGI 0x00020000
#define GL_EDGEFLAG_BIT_PGI 0x00040000
#define GL_INDEX_BIT_PGI 0x00080000
#define GL_MAT_AMBIENT_BIT_PGI 0x00100000
#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI 0x00200000
#define GL_MAT_DIFFUSE_BIT_PGI 0x00400000
#define GL_MAT_EMISSION_BIT_PGI 0x00800000
#define GL_MAT_COLOR_INDEXES_BIT_PGI 0x01000000
#define GL_MAT_SHININESS_BIT_PGI 0x02000000
#define GL_MAT_SPECULAR_BIT_PGI 0x04000000
#define GL_NORMAL_BIT_PGI 0x08000000
#define GL_TEXCOORD1_BIT_PGI 0x10000000
#define GL_TEXCOORD2_BIT_PGI 0x20000000
#define GL_TEXCOORD3_BIT_PGI 0x40000000
#define GL_TEXCOORD4_BIT_PGI 0x80000000
#define GL_VERTEX23_BIT_PGI 0x00000004
#define GL_VERTEX4_BIT_PGI 0x00000008
int GL_EXT_texture_integer;
#define GL_RGBA32UI_EXT 0x8D70
#define GL_RGB32UI_EXT 0x8D71
#define GL_ALPHA32UI_EXT 0x8D72
#define GL_INTENSITY32UI_EXT 0x8D73
#define GL_LUMINANCE32UI_EXT 0x8D74
#define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#define GL_RGBA16UI_EXT 0x8D76
#define GL_RGB16UI_EXT 0x8D77
#define GL_ALPHA16UI_EXT 0x8D78
#define GL_INTENSITY16UI_EXT 0x8D79
#define GL_LUMINANCE16UI_EXT 0x8D7A
#define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#define GL_RGBA8UI_EXT 0x8D7C
#define GL_RGB8UI_EXT 0x8D7D
#define GL_ALPHA8UI_EXT 0x8D7E
#define GL_INTENSITY8UI_EXT 0x8D7F
#define GL_LUMINANCE8UI_EXT 0x8D80
#define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#define GL_RGBA32I_EXT 0x8D82
#define GL_RGB32I_EXT 0x8D83
#define GL_ALPHA32I_EXT 0x8D84
#define GL_INTENSITY32I_EXT 0x8D85
#define GL_LUMINANCE32I_EXT 0x8D86
#define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#define GL_RGBA16I_EXT 0x8D88
#define GL_RGB16I_EXT 0x8D89
#define GL_ALPHA16I_EXT 0x8D8A
#define GL_INTENSITY16I_EXT 0x8D8B
#define GL_LUMINANCE16I_EXT 0x8D8C
#define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#define GL_RGBA8I_EXT 0x8D8E
#define GL_RGB8I_EXT 0x8D8F
#define GL_ALPHA8I_EXT 0x8D90
#define GL_INTENSITY8I_EXT 0x8D91
#define GL_LUMINANCE8I_EXT 0x8D92
#define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#define GL_RED_INTEGER_EXT 0x8D94
#define GL_GREEN_INTEGER_EXT 0x8D95
#define GL_BLUE_INTEGER_EXT 0x8D96
#define GL_ALPHA_INTEGER_EXT 0x8D97
#define GL_RGB_INTEGER_EXT 0x8D98
#define GL_RGBA_INTEGER_EXT 0x8D99
#define GL_BGR_INTEGER_EXT 0x8D9A
#define GL_BGRA_INTEGER_EXT 0x8D9B
#define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
typedef void (* fp_glTexParameterIivEXT)(GLenum, GLenum, const GLint*);
extern fp_glTexParameterIivEXT gladglTexParameterIivEXT;
#define glTexParameterIivEXT gladglTexParameterIivEXT
typedef void (* fp_glTexParameterIuivEXT)(GLenum, GLenum, const GLuint*);
extern fp_glTexParameterIuivEXT gladglTexParameterIuivEXT;
#define glTexParameterIuivEXT gladglTexParameterIuivEXT
typedef void (* fp_glGetTexParameterIivEXT)(GLenum, GLenum, GLint*);
extern fp_glGetTexParameterIivEXT gladglGetTexParameterIivEXT;
#define glGetTexParameterIivEXT gladglGetTexParameterIivEXT
typedef void (* fp_glGetTexParameterIuivEXT)(GLenum, GLenum, GLuint*);
extern fp_glGetTexParameterIuivEXT gladglGetTexParameterIuivEXT;
#define glGetTexParameterIuivEXT gladglGetTexParameterIuivEXT
typedef void (* fp_glClearColorIiEXT)(GLint, GLint, GLint, GLint);
extern fp_glClearColorIiEXT gladglClearColorIiEXT;
#define glClearColorIiEXT gladglClearColorIiEXT
typedef void (* fp_glClearColorIuiEXT)(GLuint, GLuint, GLuint, GLuint);
extern fp_glClearColorIuiEXT gladglClearColorIuiEXT;
#define glClearColorIuiEXT gladglClearColorIuiEXT
int GL_ARB_texture_multisample;
int GL_S3_s3tc;
#define GL_RGB_S3TC 0x83A0
#define GL_RGB4_S3TC 0x83A1
#define GL_RGBA_S3TC 0x83A2
#define GL_RGBA4_S3TC 0x83A3
#define GL_RGBA_DXT5_S3TC 0x83A4
#define GL_RGBA4_DXT5_S3TC 0x83A5
int GL_ARB_query_buffer_object;
int GL_AMD_vertex_shader_tessellator;
#define GL_SAMPLER_BUFFER_AMD 0x9001
#define GL_INT_SAMPLER_BUFFER_AMD 0x9002
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD 0x9003
#define GL_TESSELLATION_MODE_AMD 0x9004
#define GL_TESSELLATION_FACTOR_AMD 0x9005
#define GL_DISCRETE_AMD 0x9006
#define GL_CONTINUOUS_AMD 0x9007
typedef void (* fp_glTessellationFactorAMD)(GLfloat);
extern fp_glTessellationFactorAMD gladglTessellationFactorAMD;
#define glTessellationFactorAMD gladglTessellationFactorAMD
typedef void (* fp_glTessellationModeAMD)(GLenum);
extern fp_glTessellationModeAMD gladglTessellationModeAMD;
#define glTessellationModeAMD gladglTessellationModeAMD
int GL_ARB_invalidate_subdata;
int GL_EXT_index_material;
#define GL_INDEX_MATERIAL_EXT 0x81B8
#define GL_INDEX_MATERIAL_PARAMETER_EXT 0x81B9
#define GL_INDEX_MATERIAL_FACE_EXT 0x81BA
typedef void (* fp_glIndexMaterialEXT)(GLenum, GLenum);
extern fp_glIndexMaterialEXT gladglIndexMaterialEXT;
#define glIndexMaterialEXT gladglIndexMaterialEXT
int GL_NV_blend_equation_advanced_coherent;
int GL_INTEL_parallel_arrays;
#define GL_PARALLEL_ARRAYS_INTEL 0x83F4
#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL 0x83F5
#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL 0x83F6
#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL 0x83F7
#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL 0x83F8
typedef void (* fp_glVertexPointervINTEL)(GLint, GLenum, const GLvoid**);
extern fp_glVertexPointervINTEL gladglVertexPointervINTEL;
#define glVertexPointervINTEL gladglVertexPointervINTEL
typedef void (* fp_glNormalPointervINTEL)(GLenum, const GLvoid**);
extern fp_glNormalPointervINTEL gladglNormalPointervINTEL;
#define glNormalPointervINTEL gladglNormalPointervINTEL
typedef void (* fp_glColorPointervINTEL)(GLint, GLenum, const GLvoid**);
extern fp_glColorPointervINTEL gladglColorPointervINTEL;
#define glColorPointervINTEL gladglColorPointervINTEL
typedef void (* fp_glTexCoordPointervINTEL)(GLint, GLenum, const GLvoid**);
extern fp_glTexCoordPointervINTEL gladglTexCoordPointervINTEL;
#define glTexCoordPointervINTEL gladglTexCoordPointervINTEL
int GL_ATI_draw_buffers;
#define GL_MAX_DRAW_BUFFERS_ATI 0x8824
#define GL_DRAW_BUFFER0_ATI 0x8825
#define GL_DRAW_BUFFER1_ATI 0x8826
#define GL_DRAW_BUFFER2_ATI 0x8827
#define GL_DRAW_BUFFER3_ATI 0x8828
#define GL_DRAW_BUFFER4_ATI 0x8829
#define GL_DRAW_BUFFER5_ATI 0x882A
#define GL_DRAW_BUFFER6_ATI 0x882B
#define GL_DRAW_BUFFER7_ATI 0x882C
#define GL_DRAW_BUFFER8_ATI 0x882D
#define GL_DRAW_BUFFER9_ATI 0x882E
#define GL_DRAW_BUFFER10_ATI 0x882F
#define GL_DRAW_BUFFER11_ATI 0x8830
#define GL_DRAW_BUFFER12_ATI 0x8831
#define GL_DRAW_BUFFER13_ATI 0x8832
#define GL_DRAW_BUFFER14_ATI 0x8833
#define GL_DRAW_BUFFER15_ATI 0x8834
typedef void (* fp_glDrawBuffersATI)(GLsizei, const GLenum*);
extern fp_glDrawBuffersATI gladglDrawBuffersATI;
#define glDrawBuffersATI gladglDrawBuffersATI
int GL_EXT_cmyka;
#define GL_CMYK_EXT 0x800C
#define GL_CMYKA_EXT 0x800D
#define GL_PACK_CMYK_HINT_EXT 0x800E
#define GL_UNPACK_CMYK_HINT_EXT 0x800F
int GL_SGIX_pixel_texture;
#define GL_PIXEL_TEX_GEN_SGIX 0x8139
#define GL_PIXEL_TEX_GEN_MODE_SGIX 0x832B
typedef void (* fp_glPixelTexGenSGIX)(GLenum);
extern fp_glPixelTexGenSGIX gladglPixelTexGenSGIX;
#define glPixelTexGenSGIX gladglPixelTexGenSGIX
int GL_APPLE_specular_vector;
#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 0x85B0
int GL_ARB_compatibility;
int GL_ARB_timer_query;
int GL_SGIX_interlace;
#define GL_INTERLACE_SGIX 0x8094
int GL_NV_parameter_buffer_object;
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV 0x8DA0
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV 0x8DA1
#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV 0x8DA2
#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV 0x8DA3
#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV 0x8DA4
typedef void (* fp_glProgramBufferParametersfvNV)(GLenum, GLuint, GLuint, GLsizei, const GLfloat*);
extern fp_glProgramBufferParametersfvNV gladglProgramBufferParametersfvNV;
#define glProgramBufferParametersfvNV gladglProgramBufferParametersfvNV
typedef void (* fp_glProgramBufferParametersIivNV)(GLenum, GLuint, GLuint, GLsizei, const GLint*);
extern fp_glProgramBufferParametersIivNV gladglProgramBufferParametersIivNV;
#define glProgramBufferParametersIivNV gladglProgramBufferParametersIivNV
typedef void (* fp_glProgramBufferParametersIuivNV)(GLenum, GLuint, GLuint, GLsizei, const GLuint*);
extern fp_glProgramBufferParametersIuivNV gladglProgramBufferParametersIuivNV;
#define glProgramBufferParametersIuivNV gladglProgramBufferParametersIuivNV
int GL_AMD_shader_trinary_minmax;
int GL_EXT_rescale_normal;
#define GL_RESCALE_NORMAL_EXT 0x803A
int GL_ARB_pixel_buffer_object;
#define GL_PIXEL_PACK_BUFFER_ARB 0x88EB
#define GL_PIXEL_UNPACK_BUFFER_ARB 0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING_ARB 0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB 0x88EF
int GL_ARB_uniform_buffer_object;
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
int GL_ARB_vertex_type_10f_11f_11f_rev;
int GL_ARB_texture_swizzle;
int GL_NV_transform_feedback2;
#define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
typedef void (* fp_glBindTransformFeedbackNV)(GLenum, GLuint);
extern fp_glBindTransformFeedbackNV gladglBindTransformFeedbackNV;
#define glBindTransformFeedbackNV gladglBindTransformFeedbackNV
typedef void (* fp_glDeleteTransformFeedbacksNV)(GLsizei, const GLuint*);
extern fp_glDeleteTransformFeedbacksNV gladglDeleteTransformFeedbacksNV;
#define glDeleteTransformFeedbacksNV gladglDeleteTransformFeedbacksNV
typedef void (* fp_glGenTransformFeedbacksNV)(GLsizei, GLuint*);
extern fp_glGenTransformFeedbacksNV gladglGenTransformFeedbacksNV;
#define glGenTransformFeedbacksNV gladglGenTransformFeedbacksNV
typedef GLboolean (* fp_glIsTransformFeedbackNV)(GLuint);
extern fp_glIsTransformFeedbackNV gladglIsTransformFeedbackNV;
#define glIsTransformFeedbackNV gladglIsTransformFeedbackNV
typedef void (* fp_glPauseTransformFeedbackNV)();
extern fp_glPauseTransformFeedbackNV gladglPauseTransformFeedbackNV;
#define glPauseTransformFeedbackNV gladglPauseTransformFeedbackNV
typedef void (* fp_glResumeTransformFeedbackNV)();
extern fp_glResumeTransformFeedbackNV gladglResumeTransformFeedbackNV;
#define glResumeTransformFeedbackNV gladglResumeTransformFeedbackNV
typedef void (* fp_glDrawTransformFeedbackNV)(GLenum, GLuint);
extern fp_glDrawTransformFeedbackNV gladglDrawTransformFeedbackNV;
#define glDrawTransformFeedbackNV gladglDrawTransformFeedbackNV
int GL_SGIX_async_pixel;
#define GL_ASYNC_TEX_IMAGE_SGIX 0x835C
#define GL_ASYNC_DRAW_PIXELS_SGIX 0x835D
#define GL_ASYNC_READ_PIXELS_SGIX 0x835E
#define GL_MAX_ASYNC_TEX_IMAGE_SGIX 0x835F
#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX 0x8360
#define GL_MAX_ASYNC_READ_PIXELS_SGIX 0x8361
int GL_NV_fragment_program_option;
int GL_ARB_explicit_attrib_location;
int GL_EXT_blend_color;
#define GL_CONSTANT_COLOR_EXT 0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR_EXT 0x8002
#define GL_CONSTANT_ALPHA_EXT 0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT 0x8004
#define GL_BLEND_COLOR_EXT 0x8005
typedef void (* fp_glBlendColorEXT)(GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glBlendColorEXT gladglBlendColorEXT;
#define glBlendColorEXT gladglBlendColorEXT
int GL_EXT_stencil_wrap;
#define GL_INCR_WRAP_EXT 0x8507
#define GL_DECR_WRAP_EXT 0x8508
int GL_EXT_index_array_formats;
#define GL_IUI_V2F_EXT 0x81AD
#define GL_IUI_V3F_EXT 0x81AE
#define GL_IUI_N3F_V2F_EXT 0x81AF
#define GL_IUI_N3F_V3F_EXT 0x81B0
#define GL_T2F_IUI_V2F_EXT 0x81B1
#define GL_T2F_IUI_V3F_EXT 0x81B2
#define GL_T2F_IUI_N3F_V2F_EXT 0x81B3
#define GL_T2F_IUI_N3F_V3F_EXT 0x81B4
int GL_EXT_histogram;
#define GL_HISTOGRAM_EXT 0x8024
#define GL_PROXY_HISTOGRAM_EXT 0x8025
#define GL_HISTOGRAM_WIDTH_EXT 0x8026
#define GL_HISTOGRAM_FORMAT_EXT 0x8027
#define GL_HISTOGRAM_RED_SIZE_EXT 0x8028
#define GL_HISTOGRAM_GREEN_SIZE_EXT 0x8029
#define GL_HISTOGRAM_BLUE_SIZE_EXT 0x802A
#define GL_HISTOGRAM_ALPHA_SIZE_EXT 0x802B
#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT 0x802C
#define GL_HISTOGRAM_SINK_EXT 0x802D
#define GL_MINMAX_EXT 0x802E
#define GL_MINMAX_FORMAT_EXT 0x802F
#define GL_MINMAX_SINK_EXT 0x8030
#define GL_TABLE_TOO_LARGE_EXT 0x8031
typedef void (* fp_glGetHistogramEXT)(GLenum, GLboolean, GLenum, GLenum, GLvoid*);
extern fp_glGetHistogramEXT gladglGetHistogramEXT;
#define glGetHistogramEXT gladglGetHistogramEXT
typedef void (* fp_glGetHistogramParameterfvEXT)(GLenum, GLenum, GLfloat*);
extern fp_glGetHistogramParameterfvEXT gladglGetHistogramParameterfvEXT;
#define glGetHistogramParameterfvEXT gladglGetHistogramParameterfvEXT
typedef void (* fp_glGetHistogramParameterivEXT)(GLenum, GLenum, GLint*);
extern fp_glGetHistogramParameterivEXT gladglGetHistogramParameterivEXT;
#define glGetHistogramParameterivEXT gladglGetHistogramParameterivEXT
typedef void (* fp_glGetMinmaxEXT)(GLenum, GLboolean, GLenum, GLenum, GLvoid*);
extern fp_glGetMinmaxEXT gladglGetMinmaxEXT;
#define glGetMinmaxEXT gladglGetMinmaxEXT
typedef void (* fp_glGetMinmaxParameterfvEXT)(GLenum, GLenum, GLfloat*);
extern fp_glGetMinmaxParameterfvEXT gladglGetMinmaxParameterfvEXT;
#define glGetMinmaxParameterfvEXT gladglGetMinmaxParameterfvEXT
typedef void (* fp_glGetMinmaxParameterivEXT)(GLenum, GLenum, GLint*);
extern fp_glGetMinmaxParameterivEXT gladglGetMinmaxParameterivEXT;
#define glGetMinmaxParameterivEXT gladglGetMinmaxParameterivEXT
typedef void (* fp_glHistogramEXT)(GLenum, GLsizei, GLenum, GLboolean);
extern fp_glHistogramEXT gladglHistogramEXT;
#define glHistogramEXT gladglHistogramEXT
typedef void (* fp_glMinmaxEXT)(GLenum, GLenum, GLboolean);
extern fp_glMinmaxEXT gladglMinmaxEXT;
#define glMinmaxEXT gladglMinmaxEXT
typedef void (* fp_glResetHistogramEXT)(GLenum);
extern fp_glResetHistogramEXT gladglResetHistogramEXT;
#define glResetHistogramEXT gladglResetHistogramEXT
typedef void (* fp_glResetMinmaxEXT)(GLenum);
extern fp_glResetMinmaxEXT gladglResetMinmaxEXT;
#define glResetMinmaxEXT gladglResetMinmaxEXT
int GL_SGIS_point_parameters;
#define GL_POINT_SIZE_MIN_SGIS 0x8126
#define GL_POINT_SIZE_MAX_SGIS 0x8127
#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS 0x8128
#define GL_DISTANCE_ATTENUATION_SGIS 0x8129
typedef void (* fp_glPointParameterfSGIS)(GLenum, GLfloat);
extern fp_glPointParameterfSGIS gladglPointParameterfSGIS;
#define glPointParameterfSGIS gladglPointParameterfSGIS
typedef void (* fp_glPointParameterfvSGIS)(GLenum, const GLfloat*);
extern fp_glPointParameterfvSGIS gladglPointParameterfvSGIS;
#define glPointParameterfvSGIS gladglPointParameterfvSGIS
int GL_EXT_direct_state_access;
#define GL_PROGRAM_MATRIX_EXT 0x8E2D
#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT 0x8E2E
#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT 0x8E2F
typedef void (* fp_glMatrixLoadfEXT)(GLenum, const GLfloat*);
extern fp_glMatrixLoadfEXT gladglMatrixLoadfEXT;
#define glMatrixLoadfEXT gladglMatrixLoadfEXT
typedef void (* fp_glMatrixLoaddEXT)(GLenum, const GLdouble*);
extern fp_glMatrixLoaddEXT gladglMatrixLoaddEXT;
#define glMatrixLoaddEXT gladglMatrixLoaddEXT
typedef void (* fp_glMatrixMultfEXT)(GLenum, const GLfloat*);
extern fp_glMatrixMultfEXT gladglMatrixMultfEXT;
#define glMatrixMultfEXT gladglMatrixMultfEXT
typedef void (* fp_glMatrixMultdEXT)(GLenum, const GLdouble*);
extern fp_glMatrixMultdEXT gladglMatrixMultdEXT;
#define glMatrixMultdEXT gladglMatrixMultdEXT
typedef void (* fp_glMatrixLoadIdentityEXT)(GLenum);
extern fp_glMatrixLoadIdentityEXT gladglMatrixLoadIdentityEXT;
#define glMatrixLoadIdentityEXT gladglMatrixLoadIdentityEXT
typedef void (* fp_glMatrixRotatefEXT)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glMatrixRotatefEXT gladglMatrixRotatefEXT;
#define glMatrixRotatefEXT gladglMatrixRotatefEXT
typedef void (* fp_glMatrixRotatedEXT)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glMatrixRotatedEXT gladglMatrixRotatedEXT;
#define glMatrixRotatedEXT gladglMatrixRotatedEXT
typedef void (* fp_glMatrixScalefEXT)(GLenum, GLfloat, GLfloat, GLfloat);
extern fp_glMatrixScalefEXT gladglMatrixScalefEXT;
#define glMatrixScalefEXT gladglMatrixScalefEXT
typedef void (* fp_glMatrixScaledEXT)(GLenum, GLdouble, GLdouble, GLdouble);
extern fp_glMatrixScaledEXT gladglMatrixScaledEXT;
#define glMatrixScaledEXT gladglMatrixScaledEXT
typedef void (* fp_glMatrixTranslatefEXT)(GLenum, GLfloat, GLfloat, GLfloat);
extern fp_glMatrixTranslatefEXT gladglMatrixTranslatefEXT;
#define glMatrixTranslatefEXT gladglMatrixTranslatefEXT
typedef void (* fp_glMatrixTranslatedEXT)(GLenum, GLdouble, GLdouble, GLdouble);
extern fp_glMatrixTranslatedEXT gladglMatrixTranslatedEXT;
#define glMatrixTranslatedEXT gladglMatrixTranslatedEXT
typedef void (* fp_glMatrixFrustumEXT)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glMatrixFrustumEXT gladglMatrixFrustumEXT;
#define glMatrixFrustumEXT gladglMatrixFrustumEXT
typedef void (* fp_glMatrixOrthoEXT)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glMatrixOrthoEXT gladglMatrixOrthoEXT;
#define glMatrixOrthoEXT gladglMatrixOrthoEXT
typedef void (* fp_glMatrixPopEXT)(GLenum);
extern fp_glMatrixPopEXT gladglMatrixPopEXT;
#define glMatrixPopEXT gladglMatrixPopEXT
typedef void (* fp_glMatrixPushEXT)(GLenum);
extern fp_glMatrixPushEXT gladglMatrixPushEXT;
#define glMatrixPushEXT gladglMatrixPushEXT
typedef void (* fp_glClientAttribDefaultEXT)(GLbitfield);
extern fp_glClientAttribDefaultEXT gladglClientAttribDefaultEXT;
#define glClientAttribDefaultEXT gladglClientAttribDefaultEXT
typedef void (* fp_glPushClientAttribDefaultEXT)(GLbitfield);
extern fp_glPushClientAttribDefaultEXT gladglPushClientAttribDefaultEXT;
#define glPushClientAttribDefaultEXT gladglPushClientAttribDefaultEXT
typedef void (* fp_glTextureParameterfEXT)(GLuint, GLenum, GLenum, GLfloat);
extern fp_glTextureParameterfEXT gladglTextureParameterfEXT;
#define glTextureParameterfEXT gladglTextureParameterfEXT
typedef void (* fp_glTextureParameterfvEXT)(GLuint, GLenum, GLenum, const GLfloat*);
extern fp_glTextureParameterfvEXT gladglTextureParameterfvEXT;
#define glTextureParameterfvEXT gladglTextureParameterfvEXT
typedef void (* fp_glTextureParameteriEXT)(GLuint, GLenum, GLenum, GLint);
extern fp_glTextureParameteriEXT gladglTextureParameteriEXT;
#define glTextureParameteriEXT gladglTextureParameteriEXT
typedef void (* fp_glTextureParameterivEXT)(GLuint, GLenum, GLenum, const GLint*);
extern fp_glTextureParameterivEXT gladglTextureParameterivEXT;
#define glTextureParameterivEXT gladglTextureParameterivEXT
typedef void (* fp_glTextureImage1DEXT)(GLuint, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
extern fp_glTextureImage1DEXT gladglTextureImage1DEXT;
#define glTextureImage1DEXT gladglTextureImage1DEXT
typedef void (* fp_glTextureImage2DEXT)(GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
extern fp_glTextureImage2DEXT gladglTextureImage2DEXT;
#define glTextureImage2DEXT gladglTextureImage2DEXT
typedef void (* fp_glTextureSubImage1DEXT)(GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glTextureSubImage1DEXT gladglTextureSubImage1DEXT;
#define glTextureSubImage1DEXT gladglTextureSubImage1DEXT
typedef void (* fp_glTextureSubImage2DEXT)(GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glTextureSubImage2DEXT gladglTextureSubImage2DEXT;
#define glTextureSubImage2DEXT gladglTextureSubImage2DEXT
typedef void (* fp_glCopyTextureImage1DEXT)(GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
extern fp_glCopyTextureImage1DEXT gladglCopyTextureImage1DEXT;
#define glCopyTextureImage1DEXT gladglCopyTextureImage1DEXT
typedef void (* fp_glCopyTextureImage2DEXT)(GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
extern fp_glCopyTextureImage2DEXT gladglCopyTextureImage2DEXT;
#define glCopyTextureImage2DEXT gladglCopyTextureImage2DEXT
typedef void (* fp_glCopyTextureSubImage1DEXT)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei);
extern fp_glCopyTextureSubImage1DEXT gladglCopyTextureSubImage1DEXT;
#define glCopyTextureSubImage1DEXT gladglCopyTextureSubImage1DEXT
typedef void (* fp_glCopyTextureSubImage2DEXT)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
extern fp_glCopyTextureSubImage2DEXT gladglCopyTextureSubImage2DEXT;
#define glCopyTextureSubImage2DEXT gladglCopyTextureSubImage2DEXT
typedef void (* fp_glGetTextureImageEXT)(GLuint, GLenum, GLint, GLenum, GLenum, GLvoid*);
extern fp_glGetTextureImageEXT gladglGetTextureImageEXT;
#define glGetTextureImageEXT gladglGetTextureImageEXT
typedef void (* fp_glGetTextureParameterfvEXT)(GLuint, GLenum, GLenum, GLfloat*);
extern fp_glGetTextureParameterfvEXT gladglGetTextureParameterfvEXT;
#define glGetTextureParameterfvEXT gladglGetTextureParameterfvEXT
typedef void (* fp_glGetTextureParameterivEXT)(GLuint, GLenum, GLenum, GLint*);
extern fp_glGetTextureParameterivEXT gladglGetTextureParameterivEXT;
#define glGetTextureParameterivEXT gladglGetTextureParameterivEXT
typedef void (* fp_glGetTextureLevelParameterfvEXT)(GLuint, GLenum, GLint, GLenum, GLfloat*);
extern fp_glGetTextureLevelParameterfvEXT gladglGetTextureLevelParameterfvEXT;
#define glGetTextureLevelParameterfvEXT gladglGetTextureLevelParameterfvEXT
typedef void (* fp_glGetTextureLevelParameterivEXT)(GLuint, GLenum, GLint, GLenum, GLint*);
extern fp_glGetTextureLevelParameterivEXT gladglGetTextureLevelParameterivEXT;
#define glGetTextureLevelParameterivEXT gladglGetTextureLevelParameterivEXT
typedef void (* fp_glTextureImage3DEXT)(GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
extern fp_glTextureImage3DEXT gladglTextureImage3DEXT;
#define glTextureImage3DEXT gladglTextureImage3DEXT
typedef void (* fp_glTextureSubImage3DEXT)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glTextureSubImage3DEXT gladglTextureSubImage3DEXT;
#define glTextureSubImage3DEXT gladglTextureSubImage3DEXT
typedef void (* fp_glCopyTextureSubImage3DEXT)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
extern fp_glCopyTextureSubImage3DEXT gladglCopyTextureSubImage3DEXT;
#define glCopyTextureSubImage3DEXT gladglCopyTextureSubImage3DEXT
typedef void (* fp_glBindMultiTextureEXT)(GLenum, GLenum, GLuint);
extern fp_glBindMultiTextureEXT gladglBindMultiTextureEXT;
#define glBindMultiTextureEXT gladglBindMultiTextureEXT
typedef void (* fp_glMultiTexCoordPointerEXT)(GLenum, GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glMultiTexCoordPointerEXT gladglMultiTexCoordPointerEXT;
#define glMultiTexCoordPointerEXT gladglMultiTexCoordPointerEXT
typedef void (* fp_glMultiTexEnvfEXT)(GLenum, GLenum, GLenum, GLfloat);
extern fp_glMultiTexEnvfEXT gladglMultiTexEnvfEXT;
#define glMultiTexEnvfEXT gladglMultiTexEnvfEXT
typedef void (* fp_glMultiTexEnvfvEXT)(GLenum, GLenum, GLenum, const GLfloat*);
extern fp_glMultiTexEnvfvEXT gladglMultiTexEnvfvEXT;
#define glMultiTexEnvfvEXT gladglMultiTexEnvfvEXT
typedef void (* fp_glMultiTexEnviEXT)(GLenum, GLenum, GLenum, GLint);
extern fp_glMultiTexEnviEXT gladglMultiTexEnviEXT;
#define glMultiTexEnviEXT gladglMultiTexEnviEXT
typedef void (* fp_glMultiTexEnvivEXT)(GLenum, GLenum, GLenum, const GLint*);
extern fp_glMultiTexEnvivEXT gladglMultiTexEnvivEXT;
#define glMultiTexEnvivEXT gladglMultiTexEnvivEXT
typedef void (* fp_glMultiTexGendEXT)(GLenum, GLenum, GLenum, GLdouble);
extern fp_glMultiTexGendEXT gladglMultiTexGendEXT;
#define glMultiTexGendEXT gladglMultiTexGendEXT
typedef void (* fp_glMultiTexGendvEXT)(GLenum, GLenum, GLenum, const GLdouble*);
extern fp_glMultiTexGendvEXT gladglMultiTexGendvEXT;
#define glMultiTexGendvEXT gladglMultiTexGendvEXT
typedef void (* fp_glMultiTexGenfEXT)(GLenum, GLenum, GLenum, GLfloat);
extern fp_glMultiTexGenfEXT gladglMultiTexGenfEXT;
#define glMultiTexGenfEXT gladglMultiTexGenfEXT
typedef void (* fp_glMultiTexGenfvEXT)(GLenum, GLenum, GLenum, const GLfloat*);
extern fp_glMultiTexGenfvEXT gladglMultiTexGenfvEXT;
#define glMultiTexGenfvEXT gladglMultiTexGenfvEXT
typedef void (* fp_glMultiTexGeniEXT)(GLenum, GLenum, GLenum, GLint);
extern fp_glMultiTexGeniEXT gladglMultiTexGeniEXT;
#define glMultiTexGeniEXT gladglMultiTexGeniEXT
typedef void (* fp_glMultiTexGenivEXT)(GLenum, GLenum, GLenum, const GLint*);
extern fp_glMultiTexGenivEXT gladglMultiTexGenivEXT;
#define glMultiTexGenivEXT gladglMultiTexGenivEXT
typedef void (* fp_glGetMultiTexEnvfvEXT)(GLenum, GLenum, GLenum, GLfloat*);
extern fp_glGetMultiTexEnvfvEXT gladglGetMultiTexEnvfvEXT;
#define glGetMultiTexEnvfvEXT gladglGetMultiTexEnvfvEXT
typedef void (* fp_glGetMultiTexEnvivEXT)(GLenum, GLenum, GLenum, GLint*);
extern fp_glGetMultiTexEnvivEXT gladglGetMultiTexEnvivEXT;
#define glGetMultiTexEnvivEXT gladglGetMultiTexEnvivEXT
typedef void (* fp_glGetMultiTexGendvEXT)(GLenum, GLenum, GLenum, GLdouble*);
extern fp_glGetMultiTexGendvEXT gladglGetMultiTexGendvEXT;
#define glGetMultiTexGendvEXT gladglGetMultiTexGendvEXT
typedef void (* fp_glGetMultiTexGenfvEXT)(GLenum, GLenum, GLenum, GLfloat*);
extern fp_glGetMultiTexGenfvEXT gladglGetMultiTexGenfvEXT;
#define glGetMultiTexGenfvEXT gladglGetMultiTexGenfvEXT
typedef void (* fp_glGetMultiTexGenivEXT)(GLenum, GLenum, GLenum, GLint*);
extern fp_glGetMultiTexGenivEXT gladglGetMultiTexGenivEXT;
#define glGetMultiTexGenivEXT gladglGetMultiTexGenivEXT
typedef void (* fp_glMultiTexParameteriEXT)(GLenum, GLenum, GLenum, GLint);
extern fp_glMultiTexParameteriEXT gladglMultiTexParameteriEXT;
#define glMultiTexParameteriEXT gladglMultiTexParameteriEXT
typedef void (* fp_glMultiTexParameterivEXT)(GLenum, GLenum, GLenum, const GLint*);
extern fp_glMultiTexParameterivEXT gladglMultiTexParameterivEXT;
#define glMultiTexParameterivEXT gladglMultiTexParameterivEXT
typedef void (* fp_glMultiTexParameterfEXT)(GLenum, GLenum, GLenum, GLfloat);
extern fp_glMultiTexParameterfEXT gladglMultiTexParameterfEXT;
#define glMultiTexParameterfEXT gladglMultiTexParameterfEXT
typedef void (* fp_glMultiTexParameterfvEXT)(GLenum, GLenum, GLenum, const GLfloat*);
extern fp_glMultiTexParameterfvEXT gladglMultiTexParameterfvEXT;
#define glMultiTexParameterfvEXT gladglMultiTexParameterfvEXT
typedef void (* fp_glMultiTexImage1DEXT)(GLenum, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
extern fp_glMultiTexImage1DEXT gladglMultiTexImage1DEXT;
#define glMultiTexImage1DEXT gladglMultiTexImage1DEXT
typedef void (* fp_glMultiTexImage2DEXT)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
extern fp_glMultiTexImage2DEXT gladglMultiTexImage2DEXT;
#define glMultiTexImage2DEXT gladglMultiTexImage2DEXT
typedef void (* fp_glMultiTexSubImage1DEXT)(GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glMultiTexSubImage1DEXT gladglMultiTexSubImage1DEXT;
#define glMultiTexSubImage1DEXT gladglMultiTexSubImage1DEXT
typedef void (* fp_glMultiTexSubImage2DEXT)(GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glMultiTexSubImage2DEXT gladglMultiTexSubImage2DEXT;
#define glMultiTexSubImage2DEXT gladglMultiTexSubImage2DEXT
typedef void (* fp_glCopyMultiTexImage1DEXT)(GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
extern fp_glCopyMultiTexImage1DEXT gladglCopyMultiTexImage1DEXT;
#define glCopyMultiTexImage1DEXT gladglCopyMultiTexImage1DEXT
typedef void (* fp_glCopyMultiTexImage2DEXT)(GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
extern fp_glCopyMultiTexImage2DEXT gladglCopyMultiTexImage2DEXT;
#define glCopyMultiTexImage2DEXT gladglCopyMultiTexImage2DEXT
typedef void (* fp_glCopyMultiTexSubImage1DEXT)(GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei);
extern fp_glCopyMultiTexSubImage1DEXT gladglCopyMultiTexSubImage1DEXT;
#define glCopyMultiTexSubImage1DEXT gladglCopyMultiTexSubImage1DEXT
typedef void (* fp_glCopyMultiTexSubImage2DEXT)(GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
extern fp_glCopyMultiTexSubImage2DEXT gladglCopyMultiTexSubImage2DEXT;
#define glCopyMultiTexSubImage2DEXT gladglCopyMultiTexSubImage2DEXT
typedef void (* fp_glGetMultiTexImageEXT)(GLenum, GLenum, GLint, GLenum, GLenum, GLvoid*);
extern fp_glGetMultiTexImageEXT gladglGetMultiTexImageEXT;
#define glGetMultiTexImageEXT gladglGetMultiTexImageEXT
typedef void (* fp_glGetMultiTexParameterfvEXT)(GLenum, GLenum, GLenum, GLfloat*);
extern fp_glGetMultiTexParameterfvEXT gladglGetMultiTexParameterfvEXT;
#define glGetMultiTexParameterfvEXT gladglGetMultiTexParameterfvEXT
typedef void (* fp_glGetMultiTexParameterivEXT)(GLenum, GLenum, GLenum, GLint*);
extern fp_glGetMultiTexParameterivEXT gladglGetMultiTexParameterivEXT;
#define glGetMultiTexParameterivEXT gladglGetMultiTexParameterivEXT
typedef void (* fp_glGetMultiTexLevelParameterfvEXT)(GLenum, GLenum, GLint, GLenum, GLfloat*);
extern fp_glGetMultiTexLevelParameterfvEXT gladglGetMultiTexLevelParameterfvEXT;
#define glGetMultiTexLevelParameterfvEXT gladglGetMultiTexLevelParameterfvEXT
typedef void (* fp_glGetMultiTexLevelParameterivEXT)(GLenum, GLenum, GLint, GLenum, GLint*);
extern fp_glGetMultiTexLevelParameterivEXT gladglGetMultiTexLevelParameterivEXT;
#define glGetMultiTexLevelParameterivEXT gladglGetMultiTexLevelParameterivEXT
typedef void (* fp_glMultiTexImage3DEXT)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
extern fp_glMultiTexImage3DEXT gladglMultiTexImage3DEXT;
#define glMultiTexImage3DEXT gladglMultiTexImage3DEXT
typedef void (* fp_glMultiTexSubImage3DEXT)(GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glMultiTexSubImage3DEXT gladglMultiTexSubImage3DEXT;
#define glMultiTexSubImage3DEXT gladglMultiTexSubImage3DEXT
typedef void (* fp_glCopyMultiTexSubImage3DEXT)(GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
extern fp_glCopyMultiTexSubImage3DEXT gladglCopyMultiTexSubImage3DEXT;
#define glCopyMultiTexSubImage3DEXT gladglCopyMultiTexSubImage3DEXT
typedef void (* fp_glEnableClientStateIndexedEXT)(GLenum, GLuint);
extern fp_glEnableClientStateIndexedEXT gladglEnableClientStateIndexedEXT;
#define glEnableClientStateIndexedEXT gladglEnableClientStateIndexedEXT
typedef void (* fp_glDisableClientStateIndexedEXT)(GLenum, GLuint);
extern fp_glDisableClientStateIndexedEXT gladglDisableClientStateIndexedEXT;
#define glDisableClientStateIndexedEXT gladglDisableClientStateIndexedEXT
typedef void (* fp_glGetFloatIndexedvEXT)(GLenum, GLuint, GLfloat*);
extern fp_glGetFloatIndexedvEXT gladglGetFloatIndexedvEXT;
#define glGetFloatIndexedvEXT gladglGetFloatIndexedvEXT
typedef void (* fp_glGetDoubleIndexedvEXT)(GLenum, GLuint, GLdouble*);
extern fp_glGetDoubleIndexedvEXT gladglGetDoubleIndexedvEXT;
#define glGetDoubleIndexedvEXT gladglGetDoubleIndexedvEXT
typedef void (* fp_glGetPointerIndexedvEXT)(GLenum, GLuint, GLvoid**);
extern fp_glGetPointerIndexedvEXT gladglGetPointerIndexedvEXT;
#define glGetPointerIndexedvEXT gladglGetPointerIndexedvEXT
typedef void (* fp_glCompressedTextureImage3DEXT)(GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid*);
extern fp_glCompressedTextureImage3DEXT gladglCompressedTextureImage3DEXT;
#define glCompressedTextureImage3DEXT gladglCompressedTextureImage3DEXT
typedef void (* fp_glCompressedTextureImage2DEXT)(GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid*);
extern fp_glCompressedTextureImage2DEXT gladglCompressedTextureImage2DEXT;
#define glCompressedTextureImage2DEXT gladglCompressedTextureImage2DEXT
typedef void (* fp_glCompressedTextureImage1DEXT)(GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const GLvoid*);
extern fp_glCompressedTextureImage1DEXT gladglCompressedTextureImage1DEXT;
#define glCompressedTextureImage1DEXT gladglCompressedTextureImage1DEXT
typedef void (* fp_glCompressedTextureSubImage3DEXT)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid*);
extern fp_glCompressedTextureSubImage3DEXT gladglCompressedTextureSubImage3DEXT;
#define glCompressedTextureSubImage3DEXT gladglCompressedTextureSubImage3DEXT
typedef void (* fp_glCompressedTextureSubImage2DEXT)(GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid*);
extern fp_glCompressedTextureSubImage2DEXT gladglCompressedTextureSubImage2DEXT;
#define glCompressedTextureSubImage2DEXT gladglCompressedTextureSubImage2DEXT
typedef void (* fp_glCompressedTextureSubImage1DEXT)(GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid*);
extern fp_glCompressedTextureSubImage1DEXT gladglCompressedTextureSubImage1DEXT;
#define glCompressedTextureSubImage1DEXT gladglCompressedTextureSubImage1DEXT
typedef void (* fp_glGetCompressedTextureImageEXT)(GLuint, GLenum, GLint, GLvoid*);
extern fp_glGetCompressedTextureImageEXT gladglGetCompressedTextureImageEXT;
#define glGetCompressedTextureImageEXT gladglGetCompressedTextureImageEXT
typedef void (* fp_glCompressedMultiTexImage3DEXT)(GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid*);
extern fp_glCompressedMultiTexImage3DEXT gladglCompressedMultiTexImage3DEXT;
#define glCompressedMultiTexImage3DEXT gladglCompressedMultiTexImage3DEXT
typedef void (* fp_glCompressedMultiTexImage2DEXT)(GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid*);
extern fp_glCompressedMultiTexImage2DEXT gladglCompressedMultiTexImage2DEXT;
#define glCompressedMultiTexImage2DEXT gladglCompressedMultiTexImage2DEXT
typedef void (* fp_glCompressedMultiTexImage1DEXT)(GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const GLvoid*);
extern fp_glCompressedMultiTexImage1DEXT gladglCompressedMultiTexImage1DEXT;
#define glCompressedMultiTexImage1DEXT gladglCompressedMultiTexImage1DEXT
typedef void (* fp_glCompressedMultiTexSubImage3DEXT)(GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid*);
extern fp_glCompressedMultiTexSubImage3DEXT gladglCompressedMultiTexSubImage3DEXT;
#define glCompressedMultiTexSubImage3DEXT gladglCompressedMultiTexSubImage3DEXT
typedef void (* fp_glCompressedMultiTexSubImage2DEXT)(GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid*);
extern fp_glCompressedMultiTexSubImage2DEXT gladglCompressedMultiTexSubImage2DEXT;
#define glCompressedMultiTexSubImage2DEXT gladglCompressedMultiTexSubImage2DEXT
typedef void (* fp_glCompressedMultiTexSubImage1DEXT)(GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid*);
extern fp_glCompressedMultiTexSubImage1DEXT gladglCompressedMultiTexSubImage1DEXT;
#define glCompressedMultiTexSubImage1DEXT gladglCompressedMultiTexSubImage1DEXT
typedef void (* fp_glGetCompressedMultiTexImageEXT)(GLenum, GLenum, GLint, GLvoid*);
extern fp_glGetCompressedMultiTexImageEXT gladglGetCompressedMultiTexImageEXT;
#define glGetCompressedMultiTexImageEXT gladglGetCompressedMultiTexImageEXT
typedef void (* fp_glMatrixLoadTransposefEXT)(GLenum, const GLfloat*);
extern fp_glMatrixLoadTransposefEXT gladglMatrixLoadTransposefEXT;
#define glMatrixLoadTransposefEXT gladglMatrixLoadTransposefEXT
typedef void (* fp_glMatrixLoadTransposedEXT)(GLenum, const GLdouble*);
extern fp_glMatrixLoadTransposedEXT gladglMatrixLoadTransposedEXT;
#define glMatrixLoadTransposedEXT gladglMatrixLoadTransposedEXT
typedef void (* fp_glMatrixMultTransposefEXT)(GLenum, const GLfloat*);
extern fp_glMatrixMultTransposefEXT gladglMatrixMultTransposefEXT;
#define glMatrixMultTransposefEXT gladglMatrixMultTransposefEXT
typedef void (* fp_glMatrixMultTransposedEXT)(GLenum, const GLdouble*);
extern fp_glMatrixMultTransposedEXT gladglMatrixMultTransposedEXT;
#define glMatrixMultTransposedEXT gladglMatrixMultTransposedEXT
typedef void (* fp_glNamedBufferDataEXT)(GLuint, GLsizeiptr, const GLvoid*, GLenum);
extern fp_glNamedBufferDataEXT gladglNamedBufferDataEXT;
#define glNamedBufferDataEXT gladglNamedBufferDataEXT
typedef void (* fp_glNamedBufferSubDataEXT)(GLuint, GLintptr, GLsizeiptr, const GLvoid*);
extern fp_glNamedBufferSubDataEXT gladglNamedBufferSubDataEXT;
#define glNamedBufferSubDataEXT gladglNamedBufferSubDataEXT
typedef void* (* fp_glMapNamedBufferEXT)(GLuint, GLenum);
extern fp_glMapNamedBufferEXT gladglMapNamedBufferEXT;
#define glMapNamedBufferEXT gladglMapNamedBufferEXT
typedef GLboolean (* fp_glUnmapNamedBufferEXT)(GLuint);
extern fp_glUnmapNamedBufferEXT gladglUnmapNamedBufferEXT;
#define glUnmapNamedBufferEXT gladglUnmapNamedBufferEXT
typedef void (* fp_glGetNamedBufferParameterivEXT)(GLuint, GLenum, GLint*);
extern fp_glGetNamedBufferParameterivEXT gladglGetNamedBufferParameterivEXT;
#define glGetNamedBufferParameterivEXT gladglGetNamedBufferParameterivEXT
typedef void (* fp_glGetNamedBufferPointervEXT)(GLuint, GLenum, GLvoid**);
extern fp_glGetNamedBufferPointervEXT gladglGetNamedBufferPointervEXT;
#define glGetNamedBufferPointervEXT gladglGetNamedBufferPointervEXT
typedef void (* fp_glGetNamedBufferSubDataEXT)(GLuint, GLintptr, GLsizeiptr, GLvoid*);
extern fp_glGetNamedBufferSubDataEXT gladglGetNamedBufferSubDataEXT;
#define glGetNamedBufferSubDataEXT gladglGetNamedBufferSubDataEXT
typedef void (* fp_glProgramUniformMatrix2x3fvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix2x3fvEXT gladglProgramUniformMatrix2x3fvEXT;
#define glProgramUniformMatrix2x3fvEXT gladglProgramUniformMatrix2x3fvEXT
typedef void (* fp_glProgramUniformMatrix3x2fvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix3x2fvEXT gladglProgramUniformMatrix3x2fvEXT;
#define glProgramUniformMatrix3x2fvEXT gladglProgramUniformMatrix3x2fvEXT
typedef void (* fp_glProgramUniformMatrix2x4fvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix2x4fvEXT gladglProgramUniformMatrix2x4fvEXT;
#define glProgramUniformMatrix2x4fvEXT gladglProgramUniformMatrix2x4fvEXT
typedef void (* fp_glProgramUniformMatrix4x2fvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix4x2fvEXT gladglProgramUniformMatrix4x2fvEXT;
#define glProgramUniformMatrix4x2fvEXT gladglProgramUniformMatrix4x2fvEXT
typedef void (* fp_glProgramUniformMatrix3x4fvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix3x4fvEXT gladglProgramUniformMatrix3x4fvEXT;
#define glProgramUniformMatrix3x4fvEXT gladglProgramUniformMatrix3x4fvEXT
typedef void (* fp_glProgramUniformMatrix4x3fvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLfloat*);
extern fp_glProgramUniformMatrix4x3fvEXT gladglProgramUniformMatrix4x3fvEXT;
#define glProgramUniformMatrix4x3fvEXT gladglProgramUniformMatrix4x3fvEXT
typedef void (* fp_glTextureBufferEXT)(GLuint, GLenum, GLenum, GLuint);
extern fp_glTextureBufferEXT gladglTextureBufferEXT;
#define glTextureBufferEXT gladglTextureBufferEXT
typedef void (* fp_glMultiTexBufferEXT)(GLenum, GLenum, GLenum, GLuint);
extern fp_glMultiTexBufferEXT gladglMultiTexBufferEXT;
#define glMultiTexBufferEXT gladglMultiTexBufferEXT
typedef void (* fp_glTextureParameterIivEXT)(GLuint, GLenum, GLenum, const GLint*);
extern fp_glTextureParameterIivEXT gladglTextureParameterIivEXT;
#define glTextureParameterIivEXT gladglTextureParameterIivEXT
typedef void (* fp_glTextureParameterIuivEXT)(GLuint, GLenum, GLenum, const GLuint*);
extern fp_glTextureParameterIuivEXT gladglTextureParameterIuivEXT;
#define glTextureParameterIuivEXT gladglTextureParameterIuivEXT
typedef void (* fp_glGetTextureParameterIivEXT)(GLuint, GLenum, GLenum, GLint*);
extern fp_glGetTextureParameterIivEXT gladglGetTextureParameterIivEXT;
#define glGetTextureParameterIivEXT gladglGetTextureParameterIivEXT
typedef void (* fp_glGetTextureParameterIuivEXT)(GLuint, GLenum, GLenum, GLuint*);
extern fp_glGetTextureParameterIuivEXT gladglGetTextureParameterIuivEXT;
#define glGetTextureParameterIuivEXT gladglGetTextureParameterIuivEXT
typedef void (* fp_glMultiTexParameterIivEXT)(GLenum, GLenum, GLenum, const GLint*);
extern fp_glMultiTexParameterIivEXT gladglMultiTexParameterIivEXT;
#define glMultiTexParameterIivEXT gladglMultiTexParameterIivEXT
typedef void (* fp_glMultiTexParameterIuivEXT)(GLenum, GLenum, GLenum, const GLuint*);
extern fp_glMultiTexParameterIuivEXT gladglMultiTexParameterIuivEXT;
#define glMultiTexParameterIuivEXT gladglMultiTexParameterIuivEXT
typedef void (* fp_glGetMultiTexParameterIivEXT)(GLenum, GLenum, GLenum, GLint*);
extern fp_glGetMultiTexParameterIivEXT gladglGetMultiTexParameterIivEXT;
#define glGetMultiTexParameterIivEXT gladglGetMultiTexParameterIivEXT
typedef void (* fp_glGetMultiTexParameterIuivEXT)(GLenum, GLenum, GLenum, GLuint*);
extern fp_glGetMultiTexParameterIuivEXT gladglGetMultiTexParameterIuivEXT;
#define glGetMultiTexParameterIuivEXT gladglGetMultiTexParameterIuivEXT
typedef void (* fp_glProgramUniform1uiEXT)(GLuint, GLint, GLuint);
extern fp_glProgramUniform1uiEXT gladglProgramUniform1uiEXT;
#define glProgramUniform1uiEXT gladglProgramUniform1uiEXT
typedef void (* fp_glProgramUniform2uiEXT)(GLuint, GLint, GLuint, GLuint);
extern fp_glProgramUniform2uiEXT gladglProgramUniform2uiEXT;
#define glProgramUniform2uiEXT gladglProgramUniform2uiEXT
typedef void (* fp_glProgramUniform3uiEXT)(GLuint, GLint, GLuint, GLuint, GLuint);
extern fp_glProgramUniform3uiEXT gladglProgramUniform3uiEXT;
#define glProgramUniform3uiEXT gladglProgramUniform3uiEXT
typedef void (* fp_glProgramUniform4uiEXT)(GLuint, GLint, GLuint, GLuint, GLuint, GLuint);
extern fp_glProgramUniform4uiEXT gladglProgramUniform4uiEXT;
#define glProgramUniform4uiEXT gladglProgramUniform4uiEXT
typedef void (* fp_glProgramUniform1uivEXT)(GLuint, GLint, GLsizei, const GLuint*);
extern fp_glProgramUniform1uivEXT gladglProgramUniform1uivEXT;
#define glProgramUniform1uivEXT gladglProgramUniform1uivEXT
typedef void (* fp_glProgramUniform2uivEXT)(GLuint, GLint, GLsizei, const GLuint*);
extern fp_glProgramUniform2uivEXT gladglProgramUniform2uivEXT;
#define glProgramUniform2uivEXT gladglProgramUniform2uivEXT
typedef void (* fp_glProgramUniform3uivEXT)(GLuint, GLint, GLsizei, const GLuint*);
extern fp_glProgramUniform3uivEXT gladglProgramUniform3uivEXT;
#define glProgramUniform3uivEXT gladglProgramUniform3uivEXT
typedef void (* fp_glProgramUniform4uivEXT)(GLuint, GLint, GLsizei, const GLuint*);
extern fp_glProgramUniform4uivEXT gladglProgramUniform4uivEXT;
#define glProgramUniform4uivEXT gladglProgramUniform4uivEXT
typedef void (* fp_glNamedProgramLocalParameters4fvEXT)(GLuint, GLenum, GLuint, GLsizei, const GLfloat*);
extern fp_glNamedProgramLocalParameters4fvEXT gladglNamedProgramLocalParameters4fvEXT;
#define glNamedProgramLocalParameters4fvEXT gladglNamedProgramLocalParameters4fvEXT
typedef void (* fp_glNamedProgramLocalParameterI4iEXT)(GLuint, GLenum, GLuint, GLint, GLint, GLint, GLint);
extern fp_glNamedProgramLocalParameterI4iEXT gladglNamedProgramLocalParameterI4iEXT;
#define glNamedProgramLocalParameterI4iEXT gladglNamedProgramLocalParameterI4iEXT
typedef void (* fp_glNamedProgramLocalParameterI4ivEXT)(GLuint, GLenum, GLuint, const GLint*);
extern fp_glNamedProgramLocalParameterI4ivEXT gladglNamedProgramLocalParameterI4ivEXT;
#define glNamedProgramLocalParameterI4ivEXT gladglNamedProgramLocalParameterI4ivEXT
typedef void (* fp_glNamedProgramLocalParametersI4ivEXT)(GLuint, GLenum, GLuint, GLsizei, const GLint*);
extern fp_glNamedProgramLocalParametersI4ivEXT gladglNamedProgramLocalParametersI4ivEXT;
#define glNamedProgramLocalParametersI4ivEXT gladglNamedProgramLocalParametersI4ivEXT
typedef void (* fp_glNamedProgramLocalParameterI4uiEXT)(GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint);
extern fp_glNamedProgramLocalParameterI4uiEXT gladglNamedProgramLocalParameterI4uiEXT;
#define glNamedProgramLocalParameterI4uiEXT gladglNamedProgramLocalParameterI4uiEXT
typedef void (* fp_glNamedProgramLocalParameterI4uivEXT)(GLuint, GLenum, GLuint, const GLuint*);
extern fp_glNamedProgramLocalParameterI4uivEXT gladglNamedProgramLocalParameterI4uivEXT;
#define glNamedProgramLocalParameterI4uivEXT gladglNamedProgramLocalParameterI4uivEXT
typedef void (* fp_glNamedProgramLocalParametersI4uivEXT)(GLuint, GLenum, GLuint, GLsizei, const GLuint*);
extern fp_glNamedProgramLocalParametersI4uivEXT gladglNamedProgramLocalParametersI4uivEXT;
#define glNamedProgramLocalParametersI4uivEXT gladglNamedProgramLocalParametersI4uivEXT
typedef void (* fp_glGetNamedProgramLocalParameterIivEXT)(GLuint, GLenum, GLuint, GLint*);
extern fp_glGetNamedProgramLocalParameterIivEXT gladglGetNamedProgramLocalParameterIivEXT;
#define glGetNamedProgramLocalParameterIivEXT gladglGetNamedProgramLocalParameterIivEXT
typedef void (* fp_glGetNamedProgramLocalParameterIuivEXT)(GLuint, GLenum, GLuint, GLuint*);
extern fp_glGetNamedProgramLocalParameterIuivEXT gladglGetNamedProgramLocalParameterIuivEXT;
#define glGetNamedProgramLocalParameterIuivEXT gladglGetNamedProgramLocalParameterIuivEXT
typedef void (* fp_glEnableClientStateiEXT)(GLenum, GLuint);
extern fp_glEnableClientStateiEXT gladglEnableClientStateiEXT;
#define glEnableClientStateiEXT gladglEnableClientStateiEXT
typedef void (* fp_glDisableClientStateiEXT)(GLenum, GLuint);
extern fp_glDisableClientStateiEXT gladglDisableClientStateiEXT;
#define glDisableClientStateiEXT gladglDisableClientStateiEXT
typedef void (* fp_glGetFloati_vEXT)(GLenum, GLuint, GLfloat*);
extern fp_glGetFloati_vEXT gladglGetFloati_vEXT;
#define glGetFloati_vEXT gladglGetFloati_vEXT
typedef void (* fp_glGetDoublei_vEXT)(GLenum, GLuint, GLdouble*);
extern fp_glGetDoublei_vEXT gladglGetDoublei_vEXT;
#define glGetDoublei_vEXT gladglGetDoublei_vEXT
typedef void (* fp_glGetPointeri_vEXT)(GLenum, GLuint, GLvoid**);
extern fp_glGetPointeri_vEXT gladglGetPointeri_vEXT;
#define glGetPointeri_vEXT gladglGetPointeri_vEXT
typedef void (* fp_glNamedProgramStringEXT)(GLuint, GLenum, GLenum, GLsizei, const GLvoid*);
extern fp_glNamedProgramStringEXT gladglNamedProgramStringEXT;
#define glNamedProgramStringEXT gladglNamedProgramStringEXT
typedef void (* fp_glNamedProgramLocalParameter4dEXT)(GLuint, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glNamedProgramLocalParameter4dEXT gladglNamedProgramLocalParameter4dEXT;
#define glNamedProgramLocalParameter4dEXT gladglNamedProgramLocalParameter4dEXT
typedef void (* fp_glNamedProgramLocalParameter4dvEXT)(GLuint, GLenum, GLuint, const GLdouble*);
extern fp_glNamedProgramLocalParameter4dvEXT gladglNamedProgramLocalParameter4dvEXT;
#define glNamedProgramLocalParameter4dvEXT gladglNamedProgramLocalParameter4dvEXT
typedef void (* fp_glNamedProgramLocalParameter4fEXT)(GLuint, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glNamedProgramLocalParameter4fEXT gladglNamedProgramLocalParameter4fEXT;
#define glNamedProgramLocalParameter4fEXT gladglNamedProgramLocalParameter4fEXT
typedef void (* fp_glNamedProgramLocalParameter4fvEXT)(GLuint, GLenum, GLuint, const GLfloat*);
extern fp_glNamedProgramLocalParameter4fvEXT gladglNamedProgramLocalParameter4fvEXT;
#define glNamedProgramLocalParameter4fvEXT gladglNamedProgramLocalParameter4fvEXT
typedef void (* fp_glGetNamedProgramLocalParameterdvEXT)(GLuint, GLenum, GLuint, GLdouble*);
extern fp_glGetNamedProgramLocalParameterdvEXT gladglGetNamedProgramLocalParameterdvEXT;
#define glGetNamedProgramLocalParameterdvEXT gladglGetNamedProgramLocalParameterdvEXT
typedef void (* fp_glGetNamedProgramLocalParameterfvEXT)(GLuint, GLenum, GLuint, GLfloat*);
extern fp_glGetNamedProgramLocalParameterfvEXT gladglGetNamedProgramLocalParameterfvEXT;
#define glGetNamedProgramLocalParameterfvEXT gladglGetNamedProgramLocalParameterfvEXT
typedef void (* fp_glGetNamedProgramivEXT)(GLuint, GLenum, GLenum, GLint*);
extern fp_glGetNamedProgramivEXT gladglGetNamedProgramivEXT;
#define glGetNamedProgramivEXT gladglGetNamedProgramivEXT
typedef void (* fp_glGetNamedProgramStringEXT)(GLuint, GLenum, GLenum, GLvoid*);
extern fp_glGetNamedProgramStringEXT gladglGetNamedProgramStringEXT;
#define glGetNamedProgramStringEXT gladglGetNamedProgramStringEXT
typedef void (* fp_glNamedRenderbufferStorageEXT)(GLuint, GLenum, GLsizei, GLsizei);
extern fp_glNamedRenderbufferStorageEXT gladglNamedRenderbufferStorageEXT;
#define glNamedRenderbufferStorageEXT gladglNamedRenderbufferStorageEXT
typedef void (* fp_glGetNamedRenderbufferParameterivEXT)(GLuint, GLenum, GLint*);
extern fp_glGetNamedRenderbufferParameterivEXT gladglGetNamedRenderbufferParameterivEXT;
#define glGetNamedRenderbufferParameterivEXT gladglGetNamedRenderbufferParameterivEXT
typedef void (* fp_glNamedRenderbufferStorageMultisampleEXT)(GLuint, GLsizei, GLenum, GLsizei, GLsizei);
extern fp_glNamedRenderbufferStorageMultisampleEXT gladglNamedRenderbufferStorageMultisampleEXT;
#define glNamedRenderbufferStorageMultisampleEXT gladglNamedRenderbufferStorageMultisampleEXT
typedef void (* fp_glNamedRenderbufferStorageMultisampleCoverageEXT)(GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei);
extern fp_glNamedRenderbufferStorageMultisampleCoverageEXT gladglNamedRenderbufferStorageMultisampleCoverageEXT;
#define glNamedRenderbufferStorageMultisampleCoverageEXT gladglNamedRenderbufferStorageMultisampleCoverageEXT
typedef GLenum (* fp_glCheckNamedFramebufferStatusEXT)(GLuint, GLenum);
extern fp_glCheckNamedFramebufferStatusEXT gladglCheckNamedFramebufferStatusEXT;
#define glCheckNamedFramebufferStatusEXT gladglCheckNamedFramebufferStatusEXT
typedef void (* fp_glNamedFramebufferTexture1DEXT)(GLuint, GLenum, GLenum, GLuint, GLint);
extern fp_glNamedFramebufferTexture1DEXT gladglNamedFramebufferTexture1DEXT;
#define glNamedFramebufferTexture1DEXT gladglNamedFramebufferTexture1DEXT
typedef void (* fp_glNamedFramebufferTexture2DEXT)(GLuint, GLenum, GLenum, GLuint, GLint);
extern fp_glNamedFramebufferTexture2DEXT gladglNamedFramebufferTexture2DEXT;
#define glNamedFramebufferTexture2DEXT gladglNamedFramebufferTexture2DEXT
typedef void (* fp_glNamedFramebufferTexture3DEXT)(GLuint, GLenum, GLenum, GLuint, GLint, GLint);
extern fp_glNamedFramebufferTexture3DEXT gladglNamedFramebufferTexture3DEXT;
#define glNamedFramebufferTexture3DEXT gladglNamedFramebufferTexture3DEXT
typedef void (* fp_glNamedFramebufferRenderbufferEXT)(GLuint, GLenum, GLenum, GLuint);
extern fp_glNamedFramebufferRenderbufferEXT gladglNamedFramebufferRenderbufferEXT;
#define glNamedFramebufferRenderbufferEXT gladglNamedFramebufferRenderbufferEXT
typedef void (* fp_glGetNamedFramebufferAttachmentParameterivEXT)(GLuint, GLenum, GLenum, GLint*);
extern fp_glGetNamedFramebufferAttachmentParameterivEXT gladglGetNamedFramebufferAttachmentParameterivEXT;
#define glGetNamedFramebufferAttachmentParameterivEXT gladglGetNamedFramebufferAttachmentParameterivEXT
typedef void (* fp_glGenerateTextureMipmapEXT)(GLuint, GLenum);
extern fp_glGenerateTextureMipmapEXT gladglGenerateTextureMipmapEXT;
#define glGenerateTextureMipmapEXT gladglGenerateTextureMipmapEXT
typedef void (* fp_glGenerateMultiTexMipmapEXT)(GLenum, GLenum);
extern fp_glGenerateMultiTexMipmapEXT gladglGenerateMultiTexMipmapEXT;
#define glGenerateMultiTexMipmapEXT gladglGenerateMultiTexMipmapEXT
typedef void (* fp_glFramebufferDrawBufferEXT)(GLuint, GLenum);
extern fp_glFramebufferDrawBufferEXT gladglFramebufferDrawBufferEXT;
#define glFramebufferDrawBufferEXT gladglFramebufferDrawBufferEXT
typedef void (* fp_glFramebufferDrawBuffersEXT)(GLuint, GLsizei, const GLenum*);
extern fp_glFramebufferDrawBuffersEXT gladglFramebufferDrawBuffersEXT;
#define glFramebufferDrawBuffersEXT gladglFramebufferDrawBuffersEXT
typedef void (* fp_glFramebufferReadBufferEXT)(GLuint, GLenum);
extern fp_glFramebufferReadBufferEXT gladglFramebufferReadBufferEXT;
#define glFramebufferReadBufferEXT gladglFramebufferReadBufferEXT
typedef void (* fp_glGetFramebufferParameterivEXT)(GLuint, GLenum, GLint*);
extern fp_glGetFramebufferParameterivEXT gladglGetFramebufferParameterivEXT;
#define glGetFramebufferParameterivEXT gladglGetFramebufferParameterivEXT
typedef void (* fp_glNamedCopyBufferSubDataEXT)(GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr);
extern fp_glNamedCopyBufferSubDataEXT gladglNamedCopyBufferSubDataEXT;
#define glNamedCopyBufferSubDataEXT gladglNamedCopyBufferSubDataEXT
typedef void (* fp_glNamedFramebufferTextureEXT)(GLuint, GLenum, GLuint, GLint);
extern fp_glNamedFramebufferTextureEXT gladglNamedFramebufferTextureEXT;
#define glNamedFramebufferTextureEXT gladglNamedFramebufferTextureEXT
typedef void (* fp_glNamedFramebufferTextureLayerEXT)(GLuint, GLenum, GLuint, GLint, GLint);
extern fp_glNamedFramebufferTextureLayerEXT gladglNamedFramebufferTextureLayerEXT;
#define glNamedFramebufferTextureLayerEXT gladglNamedFramebufferTextureLayerEXT
typedef void (* fp_glNamedFramebufferTextureFaceEXT)(GLuint, GLenum, GLuint, GLint, GLenum);
extern fp_glNamedFramebufferTextureFaceEXT gladglNamedFramebufferTextureFaceEXT;
#define glNamedFramebufferTextureFaceEXT gladglNamedFramebufferTextureFaceEXT
typedef void (* fp_glTextureRenderbufferEXT)(GLuint, GLenum, GLuint);
extern fp_glTextureRenderbufferEXT gladglTextureRenderbufferEXT;
#define glTextureRenderbufferEXT gladglTextureRenderbufferEXT
typedef void (* fp_glMultiTexRenderbufferEXT)(GLenum, GLenum, GLuint);
extern fp_glMultiTexRenderbufferEXT gladglMultiTexRenderbufferEXT;
#define glMultiTexRenderbufferEXT gladglMultiTexRenderbufferEXT
typedef void (* fp_glVertexArrayVertexOffsetEXT)(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr);
extern fp_glVertexArrayVertexOffsetEXT gladglVertexArrayVertexOffsetEXT;
#define glVertexArrayVertexOffsetEXT gladglVertexArrayVertexOffsetEXT
typedef void (* fp_glVertexArrayColorOffsetEXT)(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr);
extern fp_glVertexArrayColorOffsetEXT gladglVertexArrayColorOffsetEXT;
#define glVertexArrayColorOffsetEXT gladglVertexArrayColorOffsetEXT
typedef void (* fp_glVertexArrayEdgeFlagOffsetEXT)(GLuint, GLuint, GLsizei, GLintptr);
extern fp_glVertexArrayEdgeFlagOffsetEXT gladglVertexArrayEdgeFlagOffsetEXT;
#define glVertexArrayEdgeFlagOffsetEXT gladglVertexArrayEdgeFlagOffsetEXT
typedef void (* fp_glVertexArrayIndexOffsetEXT)(GLuint, GLuint, GLenum, GLsizei, GLintptr);
extern fp_glVertexArrayIndexOffsetEXT gladglVertexArrayIndexOffsetEXT;
#define glVertexArrayIndexOffsetEXT gladglVertexArrayIndexOffsetEXT
typedef void (* fp_glVertexArrayNormalOffsetEXT)(GLuint, GLuint, GLenum, GLsizei, GLintptr);
extern fp_glVertexArrayNormalOffsetEXT gladglVertexArrayNormalOffsetEXT;
#define glVertexArrayNormalOffsetEXT gladglVertexArrayNormalOffsetEXT
typedef void (* fp_glVertexArrayTexCoordOffsetEXT)(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr);
extern fp_glVertexArrayTexCoordOffsetEXT gladglVertexArrayTexCoordOffsetEXT;
#define glVertexArrayTexCoordOffsetEXT gladglVertexArrayTexCoordOffsetEXT
typedef void (* fp_glVertexArrayMultiTexCoordOffsetEXT)(GLuint, GLuint, GLenum, GLint, GLenum, GLsizei, GLintptr);
extern fp_glVertexArrayMultiTexCoordOffsetEXT gladglVertexArrayMultiTexCoordOffsetEXT;
#define glVertexArrayMultiTexCoordOffsetEXT gladglVertexArrayMultiTexCoordOffsetEXT
typedef void (* fp_glVertexArrayFogCoordOffsetEXT)(GLuint, GLuint, GLenum, GLsizei, GLintptr);
extern fp_glVertexArrayFogCoordOffsetEXT gladglVertexArrayFogCoordOffsetEXT;
#define glVertexArrayFogCoordOffsetEXT gladglVertexArrayFogCoordOffsetEXT
typedef void (* fp_glVertexArraySecondaryColorOffsetEXT)(GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr);
extern fp_glVertexArraySecondaryColorOffsetEXT gladglVertexArraySecondaryColorOffsetEXT;
#define glVertexArraySecondaryColorOffsetEXT gladglVertexArraySecondaryColorOffsetEXT
typedef void (* fp_glVertexArrayVertexAttribOffsetEXT)(GLuint, GLuint, GLuint, GLint, GLenum, GLboolean, GLsizei, GLintptr);
extern fp_glVertexArrayVertexAttribOffsetEXT gladglVertexArrayVertexAttribOffsetEXT;
#define glVertexArrayVertexAttribOffsetEXT gladglVertexArrayVertexAttribOffsetEXT
typedef void (* fp_glVertexArrayVertexAttribIOffsetEXT)(GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr);
extern fp_glVertexArrayVertexAttribIOffsetEXT gladglVertexArrayVertexAttribIOffsetEXT;
#define glVertexArrayVertexAttribIOffsetEXT gladglVertexArrayVertexAttribIOffsetEXT
typedef void (* fp_glEnableVertexArrayEXT)(GLuint, GLenum);
extern fp_glEnableVertexArrayEXT gladglEnableVertexArrayEXT;
#define glEnableVertexArrayEXT gladglEnableVertexArrayEXT
typedef void (* fp_glDisableVertexArrayEXT)(GLuint, GLenum);
extern fp_glDisableVertexArrayEXT gladglDisableVertexArrayEXT;
#define glDisableVertexArrayEXT gladglDisableVertexArrayEXT
typedef void (* fp_glEnableVertexArrayAttribEXT)(GLuint, GLuint);
extern fp_glEnableVertexArrayAttribEXT gladglEnableVertexArrayAttribEXT;
#define glEnableVertexArrayAttribEXT gladglEnableVertexArrayAttribEXT
typedef void (* fp_glDisableVertexArrayAttribEXT)(GLuint, GLuint);
extern fp_glDisableVertexArrayAttribEXT gladglDisableVertexArrayAttribEXT;
#define glDisableVertexArrayAttribEXT gladglDisableVertexArrayAttribEXT
typedef void (* fp_glGetVertexArrayIntegervEXT)(GLuint, GLenum, GLint*);
extern fp_glGetVertexArrayIntegervEXT gladglGetVertexArrayIntegervEXT;
#define glGetVertexArrayIntegervEXT gladglGetVertexArrayIntegervEXT
typedef void (* fp_glGetVertexArrayPointervEXT)(GLuint, GLenum, GLvoid**);
extern fp_glGetVertexArrayPointervEXT gladglGetVertexArrayPointervEXT;
#define glGetVertexArrayPointervEXT gladglGetVertexArrayPointervEXT
typedef void (* fp_glGetVertexArrayIntegeri_vEXT)(GLuint, GLuint, GLenum, GLint*);
extern fp_glGetVertexArrayIntegeri_vEXT gladglGetVertexArrayIntegeri_vEXT;
#define glGetVertexArrayIntegeri_vEXT gladglGetVertexArrayIntegeri_vEXT
typedef void (* fp_glGetVertexArrayPointeri_vEXT)(GLuint, GLuint, GLenum, GLvoid**);
extern fp_glGetVertexArrayPointeri_vEXT gladglGetVertexArrayPointeri_vEXT;
#define glGetVertexArrayPointeri_vEXT gladglGetVertexArrayPointeri_vEXT
typedef void* (* fp_glMapNamedBufferRangeEXT)(GLuint, GLintptr, GLsizeiptr, GLbitfield);
extern fp_glMapNamedBufferRangeEXT gladglMapNamedBufferRangeEXT;
#define glMapNamedBufferRangeEXT gladglMapNamedBufferRangeEXT
typedef void (* fp_glFlushMappedNamedBufferRangeEXT)(GLuint, GLintptr, GLsizeiptr);
extern fp_glFlushMappedNamedBufferRangeEXT gladglFlushMappedNamedBufferRangeEXT;
#define glFlushMappedNamedBufferRangeEXT gladglFlushMappedNamedBufferRangeEXT
typedef void (* fp_glClearNamedBufferDataEXT)(GLuint, GLenum, GLenum, GLenum, const void*);
extern fp_glClearNamedBufferDataEXT gladglClearNamedBufferDataEXT;
#define glClearNamedBufferDataEXT gladglClearNamedBufferDataEXT
typedef void (* fp_glClearNamedBufferSubDataEXT)(GLuint, GLenum, GLenum, GLenum, GLsizeiptr, GLsizeiptr, const void*);
extern fp_glClearNamedBufferSubDataEXT gladglClearNamedBufferSubDataEXT;
#define glClearNamedBufferSubDataEXT gladglClearNamedBufferSubDataEXT
typedef void (* fp_glNamedFramebufferParameteriEXT)(GLuint, GLenum, GLint);
extern fp_glNamedFramebufferParameteriEXT gladglNamedFramebufferParameteriEXT;
#define glNamedFramebufferParameteriEXT gladglNamedFramebufferParameteriEXT
typedef void (* fp_glGetNamedFramebufferParameterivEXT)(GLuint, GLenum, GLint*);
extern fp_glGetNamedFramebufferParameterivEXT gladglGetNamedFramebufferParameterivEXT;
#define glGetNamedFramebufferParameterivEXT gladglGetNamedFramebufferParameterivEXT
typedef void (* fp_glProgramUniform1dEXT)(GLuint, GLint, GLdouble);
extern fp_glProgramUniform1dEXT gladglProgramUniform1dEXT;
#define glProgramUniform1dEXT gladglProgramUniform1dEXT
typedef void (* fp_glProgramUniform2dEXT)(GLuint, GLint, GLdouble, GLdouble);
extern fp_glProgramUniform2dEXT gladglProgramUniform2dEXT;
#define glProgramUniform2dEXT gladglProgramUniform2dEXT
typedef void (* fp_glProgramUniform3dEXT)(GLuint, GLint, GLdouble, GLdouble, GLdouble);
extern fp_glProgramUniform3dEXT gladglProgramUniform3dEXT;
#define glProgramUniform3dEXT gladglProgramUniform3dEXT
typedef void (* fp_glProgramUniform4dEXT)(GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glProgramUniform4dEXT gladglProgramUniform4dEXT;
#define glProgramUniform4dEXT gladglProgramUniform4dEXT
typedef void (* fp_glProgramUniform1dvEXT)(GLuint, GLint, GLsizei, const GLdouble*);
extern fp_glProgramUniform1dvEXT gladglProgramUniform1dvEXT;
#define glProgramUniform1dvEXT gladglProgramUniform1dvEXT
typedef void (* fp_glProgramUniform2dvEXT)(GLuint, GLint, GLsizei, const GLdouble*);
extern fp_glProgramUniform2dvEXT gladglProgramUniform2dvEXT;
#define glProgramUniform2dvEXT gladglProgramUniform2dvEXT
typedef void (* fp_glProgramUniform3dvEXT)(GLuint, GLint, GLsizei, const GLdouble*);
extern fp_glProgramUniform3dvEXT gladglProgramUniform3dvEXT;
#define glProgramUniform3dvEXT gladglProgramUniform3dvEXT
typedef void (* fp_glProgramUniform4dvEXT)(GLuint, GLint, GLsizei, const GLdouble*);
extern fp_glProgramUniform4dvEXT gladglProgramUniform4dvEXT;
#define glProgramUniform4dvEXT gladglProgramUniform4dvEXT
typedef void (* fp_glProgramUniformMatrix2dvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix2dvEXT gladglProgramUniformMatrix2dvEXT;
#define glProgramUniformMatrix2dvEXT gladglProgramUniformMatrix2dvEXT
typedef void (* fp_glProgramUniformMatrix3dvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix3dvEXT gladglProgramUniformMatrix3dvEXT;
#define glProgramUniformMatrix3dvEXT gladglProgramUniformMatrix3dvEXT
typedef void (* fp_glProgramUniformMatrix4dvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix4dvEXT gladglProgramUniformMatrix4dvEXT;
#define glProgramUniformMatrix4dvEXT gladglProgramUniformMatrix4dvEXT
typedef void (* fp_glProgramUniformMatrix2x3dvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix2x3dvEXT gladglProgramUniformMatrix2x3dvEXT;
#define glProgramUniformMatrix2x3dvEXT gladglProgramUniformMatrix2x3dvEXT
typedef void (* fp_glProgramUniformMatrix2x4dvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix2x4dvEXT gladglProgramUniformMatrix2x4dvEXT;
#define glProgramUniformMatrix2x4dvEXT gladglProgramUniformMatrix2x4dvEXT
typedef void (* fp_glProgramUniformMatrix3x2dvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix3x2dvEXT gladglProgramUniformMatrix3x2dvEXT;
#define glProgramUniformMatrix3x2dvEXT gladglProgramUniformMatrix3x2dvEXT
typedef void (* fp_glProgramUniformMatrix3x4dvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix3x4dvEXT gladglProgramUniformMatrix3x4dvEXT;
#define glProgramUniformMatrix3x4dvEXT gladglProgramUniformMatrix3x4dvEXT
typedef void (* fp_glProgramUniformMatrix4x2dvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix4x2dvEXT gladglProgramUniformMatrix4x2dvEXT;
#define glProgramUniformMatrix4x2dvEXT gladglProgramUniformMatrix4x2dvEXT
typedef void (* fp_glProgramUniformMatrix4x3dvEXT)(GLuint, GLint, GLsizei, GLboolean, const GLdouble*);
extern fp_glProgramUniformMatrix4x3dvEXT gladglProgramUniformMatrix4x3dvEXT;
#define glProgramUniformMatrix4x3dvEXT gladglProgramUniformMatrix4x3dvEXT
typedef void (* fp_glTextureBufferRangeEXT)(GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr);
extern fp_glTextureBufferRangeEXT gladglTextureBufferRangeEXT;
#define glTextureBufferRangeEXT gladglTextureBufferRangeEXT
typedef void (* fp_glTextureStorage1DEXT)(GLuint, GLenum, GLsizei, GLenum, GLsizei);
extern fp_glTextureStorage1DEXT gladglTextureStorage1DEXT;
#define glTextureStorage1DEXT gladglTextureStorage1DEXT
typedef void (* fp_glTextureStorage2DEXT)(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei);
extern fp_glTextureStorage2DEXT gladglTextureStorage2DEXT;
#define glTextureStorage2DEXT gladglTextureStorage2DEXT
typedef void (* fp_glTextureStorage3DEXT)(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei);
extern fp_glTextureStorage3DEXT gladglTextureStorage3DEXT;
#define glTextureStorage3DEXT gladglTextureStorage3DEXT
typedef void (* fp_glTextureStorage2DMultisampleEXT)(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean);
extern fp_glTextureStorage2DMultisampleEXT gladglTextureStorage2DMultisampleEXT;
#define glTextureStorage2DMultisampleEXT gladglTextureStorage2DMultisampleEXT
typedef void (* fp_glTextureStorage3DMultisampleEXT)(GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean);
extern fp_glTextureStorage3DMultisampleEXT gladglTextureStorage3DMultisampleEXT;
#define glTextureStorage3DMultisampleEXT gladglTextureStorage3DMultisampleEXT
typedef void (* fp_glVertexArrayBindVertexBufferEXT)(GLuint, GLuint, GLuint, GLintptr, GLsizei);
extern fp_glVertexArrayBindVertexBufferEXT gladglVertexArrayBindVertexBufferEXT;
#define glVertexArrayBindVertexBufferEXT gladglVertexArrayBindVertexBufferEXT
typedef void (* fp_glVertexArrayVertexAttribFormatEXT)(GLuint, GLuint, GLint, GLenum, GLboolean, GLuint);
extern fp_glVertexArrayVertexAttribFormatEXT gladglVertexArrayVertexAttribFormatEXT;
#define glVertexArrayVertexAttribFormatEXT gladglVertexArrayVertexAttribFormatEXT
typedef void (* fp_glVertexArrayVertexAttribIFormatEXT)(GLuint, GLuint, GLint, GLenum, GLuint);
extern fp_glVertexArrayVertexAttribIFormatEXT gladglVertexArrayVertexAttribIFormatEXT;
#define glVertexArrayVertexAttribIFormatEXT gladglVertexArrayVertexAttribIFormatEXT
typedef void (* fp_glVertexArrayVertexAttribLFormatEXT)(GLuint, GLuint, GLint, GLenum, GLuint);
extern fp_glVertexArrayVertexAttribLFormatEXT gladglVertexArrayVertexAttribLFormatEXT;
#define glVertexArrayVertexAttribLFormatEXT gladglVertexArrayVertexAttribLFormatEXT
typedef void (* fp_glVertexArrayVertexAttribBindingEXT)(GLuint, GLuint, GLuint);
extern fp_glVertexArrayVertexAttribBindingEXT gladglVertexArrayVertexAttribBindingEXT;
#define glVertexArrayVertexAttribBindingEXT gladglVertexArrayVertexAttribBindingEXT
typedef void (* fp_glVertexArrayVertexBindingDivisorEXT)(GLuint, GLuint, GLuint);
extern fp_glVertexArrayVertexBindingDivisorEXT gladglVertexArrayVertexBindingDivisorEXT;
#define glVertexArrayVertexBindingDivisorEXT gladglVertexArrayVertexBindingDivisorEXT
typedef void (* fp_glVertexArrayVertexAttribLOffsetEXT)(GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr);
extern fp_glVertexArrayVertexAttribLOffsetEXT gladglVertexArrayVertexAttribLOffsetEXT;
#define glVertexArrayVertexAttribLOffsetEXT gladglVertexArrayVertexAttribLOffsetEXT
typedef void (* fp_glTexturePageCommitmentEXT)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean);
extern fp_glTexturePageCommitmentEXT gladglTexturePageCommitmentEXT;
#define glTexturePageCommitmentEXT gladglTexturePageCommitmentEXT
int GL_AMD_sample_positions;
#define GL_SUBSAMPLE_DISTANCE_AMD 0x883F
typedef void (* fp_glSetMultisamplefvAMD)(GLenum, GLuint, const GLfloat*);
extern fp_glSetMultisamplefvAMD gladglSetMultisamplefvAMD;
#define glSetMultisamplefvAMD gladglSetMultisamplefvAMD
int GL_NV_vertex_program;
#define GL_VERTEX_PROGRAM_NV 0x8620
#define GL_VERTEX_STATE_PROGRAM_NV 0x8621
#define GL_ATTRIB_ARRAY_SIZE_NV 0x8623
#define GL_ATTRIB_ARRAY_STRIDE_NV 0x8624
#define GL_ATTRIB_ARRAY_TYPE_NV 0x8625
#define GL_CURRENT_ATTRIB_NV 0x8626
#define GL_PROGRAM_LENGTH_NV 0x8627
#define GL_PROGRAM_STRING_NV 0x8628
#define GL_MODELVIEW_PROJECTION_NV 0x8629
#define GL_IDENTITY_NV 0x862A
#define GL_INVERSE_NV 0x862B
#define GL_TRANSPOSE_NV 0x862C
#define GL_INVERSE_TRANSPOSE_NV 0x862D
#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV 0x862E
#define GL_MAX_TRACK_MATRICES_NV 0x862F
#define GL_MATRIX0_NV 0x8630
#define GL_MATRIX1_NV 0x8631
#define GL_MATRIX2_NV 0x8632
#define GL_MATRIX3_NV 0x8633
#define GL_MATRIX4_NV 0x8634
#define GL_MATRIX5_NV 0x8635
#define GL_MATRIX6_NV 0x8636
#define GL_MATRIX7_NV 0x8637
#define GL_CURRENT_MATRIX_STACK_DEPTH_NV 0x8640
#define GL_CURRENT_MATRIX_NV 0x8641
#define GL_VERTEX_PROGRAM_POINT_SIZE_NV 0x8642
#define GL_VERTEX_PROGRAM_TWO_SIDE_NV 0x8643
#define GL_PROGRAM_PARAMETER_NV 0x8644
#define GL_ATTRIB_ARRAY_POINTER_NV 0x8645
#define GL_PROGRAM_TARGET_NV 0x8646
#define GL_PROGRAM_RESIDENT_NV 0x8647
#define GL_TRACK_MATRIX_NV 0x8648
#define GL_TRACK_MATRIX_TRANSFORM_NV 0x8649
#define GL_VERTEX_PROGRAM_BINDING_NV 0x864A
#define GL_PROGRAM_ERROR_POSITION_NV 0x864B
#define GL_VERTEX_ATTRIB_ARRAY0_NV 0x8650
#define GL_VERTEX_ATTRIB_ARRAY1_NV 0x8651
#define GL_VERTEX_ATTRIB_ARRAY2_NV 0x8652
#define GL_VERTEX_ATTRIB_ARRAY3_NV 0x8653
#define GL_VERTEX_ATTRIB_ARRAY4_NV 0x8654
#define GL_VERTEX_ATTRIB_ARRAY5_NV 0x8655
#define GL_VERTEX_ATTRIB_ARRAY6_NV 0x8656
#define GL_VERTEX_ATTRIB_ARRAY7_NV 0x8657
#define GL_VERTEX_ATTRIB_ARRAY8_NV 0x8658
#define GL_VERTEX_ATTRIB_ARRAY9_NV 0x8659
#define GL_VERTEX_ATTRIB_ARRAY10_NV 0x865A
#define GL_VERTEX_ATTRIB_ARRAY11_NV 0x865B
#define GL_VERTEX_ATTRIB_ARRAY12_NV 0x865C
#define GL_VERTEX_ATTRIB_ARRAY13_NV 0x865D
#define GL_VERTEX_ATTRIB_ARRAY14_NV 0x865E
#define GL_VERTEX_ATTRIB_ARRAY15_NV 0x865F
#define GL_MAP1_VERTEX_ATTRIB0_4_NV 0x8660
#define GL_MAP1_VERTEX_ATTRIB1_4_NV 0x8661
#define GL_MAP1_VERTEX_ATTRIB2_4_NV 0x8662
#define GL_MAP1_VERTEX_ATTRIB3_4_NV 0x8663
#define GL_MAP1_VERTEX_ATTRIB4_4_NV 0x8664
#define GL_MAP1_VERTEX_ATTRIB5_4_NV 0x8665
#define GL_MAP1_VERTEX_ATTRIB6_4_NV 0x8666
#define GL_MAP1_VERTEX_ATTRIB7_4_NV 0x8667
#define GL_MAP1_VERTEX_ATTRIB8_4_NV 0x8668
#define GL_MAP1_VERTEX_ATTRIB9_4_NV 0x8669
#define GL_MAP1_VERTEX_ATTRIB10_4_NV 0x866A
#define GL_MAP1_VERTEX_ATTRIB11_4_NV 0x866B
#define GL_MAP1_VERTEX_ATTRIB12_4_NV 0x866C
#define GL_MAP1_VERTEX_ATTRIB13_4_NV 0x866D
#define GL_MAP1_VERTEX_ATTRIB14_4_NV 0x866E
#define GL_MAP1_VERTEX_ATTRIB15_4_NV 0x866F
#define GL_MAP2_VERTEX_ATTRIB0_4_NV 0x8670
#define GL_MAP2_VERTEX_ATTRIB1_4_NV 0x8671
#define GL_MAP2_VERTEX_ATTRIB2_4_NV 0x8672
#define GL_MAP2_VERTEX_ATTRIB3_4_NV 0x8673
#define GL_MAP2_VERTEX_ATTRIB4_4_NV 0x8674
#define GL_MAP2_VERTEX_ATTRIB5_4_NV 0x8675
#define GL_MAP2_VERTEX_ATTRIB6_4_NV 0x8676
#define GL_MAP2_VERTEX_ATTRIB7_4_NV 0x8677
#define GL_MAP2_VERTEX_ATTRIB8_4_NV 0x8678
#define GL_MAP2_VERTEX_ATTRIB9_4_NV 0x8679
#define GL_MAP2_VERTEX_ATTRIB10_4_NV 0x867A
#define GL_MAP2_VERTEX_ATTRIB11_4_NV 0x867B
#define GL_MAP2_VERTEX_ATTRIB12_4_NV 0x867C
#define GL_MAP2_VERTEX_ATTRIB13_4_NV 0x867D
#define GL_MAP2_VERTEX_ATTRIB14_4_NV 0x867E
#define GL_MAP2_VERTEX_ATTRIB15_4_NV 0x867F
typedef GLboolean (* fp_glAreProgramsResidentNV)(GLsizei, const GLuint*, GLboolean*);
extern fp_glAreProgramsResidentNV gladglAreProgramsResidentNV;
#define glAreProgramsResidentNV gladglAreProgramsResidentNV
typedef void (* fp_glBindProgramNV)(GLenum, GLuint);
extern fp_glBindProgramNV gladglBindProgramNV;
#define glBindProgramNV gladglBindProgramNV
typedef void (* fp_glDeleteProgramsNV)(GLsizei, const GLuint*);
extern fp_glDeleteProgramsNV gladglDeleteProgramsNV;
#define glDeleteProgramsNV gladglDeleteProgramsNV
typedef void (* fp_glExecuteProgramNV)(GLenum, GLuint, const GLfloat*);
extern fp_glExecuteProgramNV gladglExecuteProgramNV;
#define glExecuteProgramNV gladglExecuteProgramNV
typedef void (* fp_glGenProgramsNV)(GLsizei, GLuint*);
extern fp_glGenProgramsNV gladglGenProgramsNV;
#define glGenProgramsNV gladglGenProgramsNV
typedef void (* fp_glGetProgramParameterdvNV)(GLenum, GLuint, GLenum, GLdouble*);
extern fp_glGetProgramParameterdvNV gladglGetProgramParameterdvNV;
#define glGetProgramParameterdvNV gladglGetProgramParameterdvNV
typedef void (* fp_glGetProgramParameterfvNV)(GLenum, GLuint, GLenum, GLfloat*);
extern fp_glGetProgramParameterfvNV gladglGetProgramParameterfvNV;
#define glGetProgramParameterfvNV gladglGetProgramParameterfvNV
typedef void (* fp_glGetProgramivNV)(GLuint, GLenum, GLint*);
extern fp_glGetProgramivNV gladglGetProgramivNV;
#define glGetProgramivNV gladglGetProgramivNV
typedef void (* fp_glGetProgramStringNV)(GLuint, GLenum, GLubyte*);
extern fp_glGetProgramStringNV gladglGetProgramStringNV;
#define glGetProgramStringNV gladglGetProgramStringNV
typedef void (* fp_glGetTrackMatrixivNV)(GLenum, GLuint, GLenum, GLint*);
extern fp_glGetTrackMatrixivNV gladglGetTrackMatrixivNV;
#define glGetTrackMatrixivNV gladglGetTrackMatrixivNV
typedef void (* fp_glGetVertexAttribdvNV)(GLuint, GLenum, GLdouble*);
extern fp_glGetVertexAttribdvNV gladglGetVertexAttribdvNV;
#define glGetVertexAttribdvNV gladglGetVertexAttribdvNV
typedef void (* fp_glGetVertexAttribfvNV)(GLuint, GLenum, GLfloat*);
extern fp_glGetVertexAttribfvNV gladglGetVertexAttribfvNV;
#define glGetVertexAttribfvNV gladglGetVertexAttribfvNV
typedef void (* fp_glGetVertexAttribivNV)(GLuint, GLenum, GLint*);
extern fp_glGetVertexAttribivNV gladglGetVertexAttribivNV;
#define glGetVertexAttribivNV gladglGetVertexAttribivNV
typedef void (* fp_glGetVertexAttribPointervNV)(GLuint, GLenum, GLvoid**);
extern fp_glGetVertexAttribPointervNV gladglGetVertexAttribPointervNV;
#define glGetVertexAttribPointervNV gladglGetVertexAttribPointervNV
typedef GLboolean (* fp_glIsProgramNV)(GLuint);
extern fp_glIsProgramNV gladglIsProgramNV;
#define glIsProgramNV gladglIsProgramNV
typedef void (* fp_glLoadProgramNV)(GLenum, GLuint, GLsizei, const GLubyte*);
extern fp_glLoadProgramNV gladglLoadProgramNV;
#define glLoadProgramNV gladglLoadProgramNV
typedef void (* fp_glProgramParameter4dNV)(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glProgramParameter4dNV gladglProgramParameter4dNV;
#define glProgramParameter4dNV gladglProgramParameter4dNV
typedef void (* fp_glProgramParameter4dvNV)(GLenum, GLuint, const GLdouble*);
extern fp_glProgramParameter4dvNV gladglProgramParameter4dvNV;
#define glProgramParameter4dvNV gladglProgramParameter4dvNV
typedef void (* fp_glProgramParameter4fNV)(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glProgramParameter4fNV gladglProgramParameter4fNV;
#define glProgramParameter4fNV gladglProgramParameter4fNV
typedef void (* fp_glProgramParameter4fvNV)(GLenum, GLuint, const GLfloat*);
extern fp_glProgramParameter4fvNV gladglProgramParameter4fvNV;
#define glProgramParameter4fvNV gladglProgramParameter4fvNV
typedef void (* fp_glProgramParameters4dvNV)(GLenum, GLuint, GLsizei, const GLdouble*);
extern fp_glProgramParameters4dvNV gladglProgramParameters4dvNV;
#define glProgramParameters4dvNV gladglProgramParameters4dvNV
typedef void (* fp_glProgramParameters4fvNV)(GLenum, GLuint, GLsizei, const GLfloat*);
extern fp_glProgramParameters4fvNV gladglProgramParameters4fvNV;
#define glProgramParameters4fvNV gladglProgramParameters4fvNV
typedef void (* fp_glRequestResidentProgramsNV)(GLsizei, const GLuint*);
extern fp_glRequestResidentProgramsNV gladglRequestResidentProgramsNV;
#define glRequestResidentProgramsNV gladglRequestResidentProgramsNV
typedef void (* fp_glTrackMatrixNV)(GLenum, GLuint, GLenum, GLenum);
extern fp_glTrackMatrixNV gladglTrackMatrixNV;
#define glTrackMatrixNV gladglTrackMatrixNV
typedef void (* fp_glVertexAttribPointerNV)(GLuint, GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glVertexAttribPointerNV gladglVertexAttribPointerNV;
#define glVertexAttribPointerNV gladglVertexAttribPointerNV
typedef void (* fp_glVertexAttrib1dNV)(GLuint, GLdouble);
extern fp_glVertexAttrib1dNV gladglVertexAttrib1dNV;
#define glVertexAttrib1dNV gladglVertexAttrib1dNV
typedef void (* fp_glVertexAttrib1dvNV)(GLuint, const GLdouble*);
extern fp_glVertexAttrib1dvNV gladglVertexAttrib1dvNV;
#define glVertexAttrib1dvNV gladglVertexAttrib1dvNV
typedef void (* fp_glVertexAttrib1fNV)(GLuint, GLfloat);
extern fp_glVertexAttrib1fNV gladglVertexAttrib1fNV;
#define glVertexAttrib1fNV gladglVertexAttrib1fNV
typedef void (* fp_glVertexAttrib1fvNV)(GLuint, const GLfloat*);
extern fp_glVertexAttrib1fvNV gladglVertexAttrib1fvNV;
#define glVertexAttrib1fvNV gladglVertexAttrib1fvNV
typedef void (* fp_glVertexAttrib1sNV)(GLuint, GLshort);
extern fp_glVertexAttrib1sNV gladglVertexAttrib1sNV;
#define glVertexAttrib1sNV gladglVertexAttrib1sNV
typedef void (* fp_glVertexAttrib1svNV)(GLuint, const GLshort*);
extern fp_glVertexAttrib1svNV gladglVertexAttrib1svNV;
#define glVertexAttrib1svNV gladglVertexAttrib1svNV
typedef void (* fp_glVertexAttrib2dNV)(GLuint, GLdouble, GLdouble);
extern fp_glVertexAttrib2dNV gladglVertexAttrib2dNV;
#define glVertexAttrib2dNV gladglVertexAttrib2dNV
typedef void (* fp_glVertexAttrib2dvNV)(GLuint, const GLdouble*);
extern fp_glVertexAttrib2dvNV gladglVertexAttrib2dvNV;
#define glVertexAttrib2dvNV gladglVertexAttrib2dvNV
typedef void (* fp_glVertexAttrib2fNV)(GLuint, GLfloat, GLfloat);
extern fp_glVertexAttrib2fNV gladglVertexAttrib2fNV;
#define glVertexAttrib2fNV gladglVertexAttrib2fNV
typedef void (* fp_glVertexAttrib2fvNV)(GLuint, const GLfloat*);
extern fp_glVertexAttrib2fvNV gladglVertexAttrib2fvNV;
#define glVertexAttrib2fvNV gladglVertexAttrib2fvNV
typedef void (* fp_glVertexAttrib2sNV)(GLuint, GLshort, GLshort);
extern fp_glVertexAttrib2sNV gladglVertexAttrib2sNV;
#define glVertexAttrib2sNV gladglVertexAttrib2sNV
typedef void (* fp_glVertexAttrib2svNV)(GLuint, const GLshort*);
extern fp_glVertexAttrib2svNV gladglVertexAttrib2svNV;
#define glVertexAttrib2svNV gladglVertexAttrib2svNV
typedef void (* fp_glVertexAttrib3dNV)(GLuint, GLdouble, GLdouble, GLdouble);
extern fp_glVertexAttrib3dNV gladglVertexAttrib3dNV;
#define glVertexAttrib3dNV gladglVertexAttrib3dNV
typedef void (* fp_glVertexAttrib3dvNV)(GLuint, const GLdouble*);
extern fp_glVertexAttrib3dvNV gladglVertexAttrib3dvNV;
#define glVertexAttrib3dvNV gladglVertexAttrib3dvNV
typedef void (* fp_glVertexAttrib3fNV)(GLuint, GLfloat, GLfloat, GLfloat);
extern fp_glVertexAttrib3fNV gladglVertexAttrib3fNV;
#define glVertexAttrib3fNV gladglVertexAttrib3fNV
typedef void (* fp_glVertexAttrib3fvNV)(GLuint, const GLfloat*);
extern fp_glVertexAttrib3fvNV gladglVertexAttrib3fvNV;
#define glVertexAttrib3fvNV gladglVertexAttrib3fvNV
typedef void (* fp_glVertexAttrib3sNV)(GLuint, GLshort, GLshort, GLshort);
extern fp_glVertexAttrib3sNV gladglVertexAttrib3sNV;
#define glVertexAttrib3sNV gladglVertexAttrib3sNV
typedef void (* fp_glVertexAttrib3svNV)(GLuint, const GLshort*);
extern fp_glVertexAttrib3svNV gladglVertexAttrib3svNV;
#define glVertexAttrib3svNV gladglVertexAttrib3svNV
typedef void (* fp_glVertexAttrib4dNV)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glVertexAttrib4dNV gladglVertexAttrib4dNV;
#define glVertexAttrib4dNV gladglVertexAttrib4dNV
typedef void (* fp_glVertexAttrib4dvNV)(GLuint, const GLdouble*);
extern fp_glVertexAttrib4dvNV gladglVertexAttrib4dvNV;
#define glVertexAttrib4dvNV gladglVertexAttrib4dvNV
typedef void (* fp_glVertexAttrib4fNV)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glVertexAttrib4fNV gladglVertexAttrib4fNV;
#define glVertexAttrib4fNV gladglVertexAttrib4fNV
typedef void (* fp_glVertexAttrib4fvNV)(GLuint, const GLfloat*);
extern fp_glVertexAttrib4fvNV gladglVertexAttrib4fvNV;
#define glVertexAttrib4fvNV gladglVertexAttrib4fvNV
typedef void (* fp_glVertexAttrib4sNV)(GLuint, GLshort, GLshort, GLshort, GLshort);
extern fp_glVertexAttrib4sNV gladglVertexAttrib4sNV;
#define glVertexAttrib4sNV gladglVertexAttrib4sNV
typedef void (* fp_glVertexAttrib4svNV)(GLuint, const GLshort*);
extern fp_glVertexAttrib4svNV gladglVertexAttrib4svNV;
#define glVertexAttrib4svNV gladglVertexAttrib4svNV
typedef void (* fp_glVertexAttrib4ubNV)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
extern fp_glVertexAttrib4ubNV gladglVertexAttrib4ubNV;
#define glVertexAttrib4ubNV gladglVertexAttrib4ubNV
typedef void (* fp_glVertexAttrib4ubvNV)(GLuint, const GLubyte*);
extern fp_glVertexAttrib4ubvNV gladglVertexAttrib4ubvNV;
#define glVertexAttrib4ubvNV gladglVertexAttrib4ubvNV
typedef void (* fp_glVertexAttribs1dvNV)(GLuint, GLsizei, const GLdouble*);
extern fp_glVertexAttribs1dvNV gladglVertexAttribs1dvNV;
#define glVertexAttribs1dvNV gladglVertexAttribs1dvNV
typedef void (* fp_glVertexAttribs1fvNV)(GLuint, GLsizei, const GLfloat*);
extern fp_glVertexAttribs1fvNV gladglVertexAttribs1fvNV;
#define glVertexAttribs1fvNV gladglVertexAttribs1fvNV
typedef void (* fp_glVertexAttribs1svNV)(GLuint, GLsizei, const GLshort*);
extern fp_glVertexAttribs1svNV gladglVertexAttribs1svNV;
#define glVertexAttribs1svNV gladglVertexAttribs1svNV
typedef void (* fp_glVertexAttribs2dvNV)(GLuint, GLsizei, const GLdouble*);
extern fp_glVertexAttribs2dvNV gladglVertexAttribs2dvNV;
#define glVertexAttribs2dvNV gladglVertexAttribs2dvNV
typedef void (* fp_glVertexAttribs2fvNV)(GLuint, GLsizei, const GLfloat*);
extern fp_glVertexAttribs2fvNV gladglVertexAttribs2fvNV;
#define glVertexAttribs2fvNV gladglVertexAttribs2fvNV
typedef void (* fp_glVertexAttribs2svNV)(GLuint, GLsizei, const GLshort*);
extern fp_glVertexAttribs2svNV gladglVertexAttribs2svNV;
#define glVertexAttribs2svNV gladglVertexAttribs2svNV
typedef void (* fp_glVertexAttribs3dvNV)(GLuint, GLsizei, const GLdouble*);
extern fp_glVertexAttribs3dvNV gladglVertexAttribs3dvNV;
#define glVertexAttribs3dvNV gladglVertexAttribs3dvNV
typedef void (* fp_glVertexAttribs3fvNV)(GLuint, GLsizei, const GLfloat*);
extern fp_glVertexAttribs3fvNV gladglVertexAttribs3fvNV;
#define glVertexAttribs3fvNV gladglVertexAttribs3fvNV
typedef void (* fp_glVertexAttribs3svNV)(GLuint, GLsizei, const GLshort*);
extern fp_glVertexAttribs3svNV gladglVertexAttribs3svNV;
#define glVertexAttribs3svNV gladglVertexAttribs3svNV
typedef void (* fp_glVertexAttribs4dvNV)(GLuint, GLsizei, const GLdouble*);
extern fp_glVertexAttribs4dvNV gladglVertexAttribs4dvNV;
#define glVertexAttribs4dvNV gladglVertexAttribs4dvNV
typedef void (* fp_glVertexAttribs4fvNV)(GLuint, GLsizei, const GLfloat*);
extern fp_glVertexAttribs4fvNV gladglVertexAttribs4fvNV;
#define glVertexAttribs4fvNV gladglVertexAttribs4fvNV
typedef void (* fp_glVertexAttribs4svNV)(GLuint, GLsizei, const GLshort*);
extern fp_glVertexAttribs4svNV gladglVertexAttribs4svNV;
#define glVertexAttribs4svNV gladglVertexAttribs4svNV
typedef void (* fp_glVertexAttribs4ubvNV)(GLuint, GLsizei, const GLubyte*);
extern fp_glVertexAttribs4ubvNV gladglVertexAttribs4ubvNV;
#define glVertexAttribs4ubvNV gladglVertexAttribs4ubvNV
int GL_NVX_conditional_render;
typedef void (* fp_glBeginConditionalRenderNVX)(GLuint);
extern fp_glBeginConditionalRenderNVX gladglBeginConditionalRenderNVX;
#define glBeginConditionalRenderNVX gladglBeginConditionalRenderNVX
typedef void (* fp_glEndConditionalRenderNVX)();
extern fp_glEndConditionalRenderNVX gladglEndConditionalRenderNVX;
#define glEndConditionalRenderNVX gladglEndConditionalRenderNVX
int GL_EXT_vertex_shader;
#define GL_VERTEX_SHADER_EXT 0x8780
#define GL_VERTEX_SHADER_BINDING_EXT 0x8781
#define GL_OP_INDEX_EXT 0x8782
#define GL_OP_NEGATE_EXT 0x8783
#define GL_OP_DOT3_EXT 0x8784
#define GL_OP_DOT4_EXT 0x8785
#define GL_OP_MUL_EXT 0x8786
#define GL_OP_ADD_EXT 0x8787
#define GL_OP_MADD_EXT 0x8788
#define GL_OP_FRAC_EXT 0x8789
#define GL_OP_MAX_EXT 0x878A
#define GL_OP_MIN_EXT 0x878B
#define GL_OP_SET_GE_EXT 0x878C
#define GL_OP_SET_LT_EXT 0x878D
#define GL_OP_CLAMP_EXT 0x878E
#define GL_OP_FLOOR_EXT 0x878F
#define GL_OP_ROUND_EXT 0x8790
#define GL_OP_EXP_BASE_2_EXT 0x8791
#define GL_OP_LOG_BASE_2_EXT 0x8792
#define GL_OP_POWER_EXT 0x8793
#define GL_OP_RECIP_EXT 0x8794
#define GL_OP_RECIP_SQRT_EXT 0x8795
#define GL_OP_SUB_EXT 0x8796
#define GL_OP_CROSS_PRODUCT_EXT 0x8797
#define GL_OP_MULTIPLY_MATRIX_EXT 0x8798
#define GL_OP_MOV_EXT 0x8799
#define GL_OUTPUT_VERTEX_EXT 0x879A
#define GL_OUTPUT_COLOR0_EXT 0x879B
#define GL_OUTPUT_COLOR1_EXT 0x879C
#define GL_OUTPUT_TEXTURE_COORD0_EXT 0x879D
#define GL_OUTPUT_TEXTURE_COORD1_EXT 0x879E
#define GL_OUTPUT_TEXTURE_COORD2_EXT 0x879F
#define GL_OUTPUT_TEXTURE_COORD3_EXT 0x87A0
#define GL_OUTPUT_TEXTURE_COORD4_EXT 0x87A1
#define GL_OUTPUT_TEXTURE_COORD5_EXT 0x87A2
#define GL_OUTPUT_TEXTURE_COORD6_EXT 0x87A3
#define GL_OUTPUT_TEXTURE_COORD7_EXT 0x87A4
#define GL_OUTPUT_TEXTURE_COORD8_EXT 0x87A5
#define GL_OUTPUT_TEXTURE_COORD9_EXT 0x87A6
#define GL_OUTPUT_TEXTURE_COORD10_EXT 0x87A7
#define GL_OUTPUT_TEXTURE_COORD11_EXT 0x87A8
#define GL_OUTPUT_TEXTURE_COORD12_EXT 0x87A9
#define GL_OUTPUT_TEXTURE_COORD13_EXT 0x87AA
#define GL_OUTPUT_TEXTURE_COORD14_EXT 0x87AB
#define GL_OUTPUT_TEXTURE_COORD15_EXT 0x87AC
#define GL_OUTPUT_TEXTURE_COORD16_EXT 0x87AD
#define GL_OUTPUT_TEXTURE_COORD17_EXT 0x87AE
#define GL_OUTPUT_TEXTURE_COORD18_EXT 0x87AF
#define GL_OUTPUT_TEXTURE_COORD19_EXT 0x87B0
#define GL_OUTPUT_TEXTURE_COORD20_EXT 0x87B1
#define GL_OUTPUT_TEXTURE_COORD21_EXT 0x87B2
#define GL_OUTPUT_TEXTURE_COORD22_EXT 0x87B3
#define GL_OUTPUT_TEXTURE_COORD23_EXT 0x87B4
#define GL_OUTPUT_TEXTURE_COORD24_EXT 0x87B5
#define GL_OUTPUT_TEXTURE_COORD25_EXT 0x87B6
#define GL_OUTPUT_TEXTURE_COORD26_EXT 0x87B7
#define GL_OUTPUT_TEXTURE_COORD27_EXT 0x87B8
#define GL_OUTPUT_TEXTURE_COORD28_EXT 0x87B9
#define GL_OUTPUT_TEXTURE_COORD29_EXT 0x87BA
#define GL_OUTPUT_TEXTURE_COORD30_EXT 0x87BB
#define GL_OUTPUT_TEXTURE_COORD31_EXT 0x87BC
#define GL_OUTPUT_FOG_EXT 0x87BD
#define GL_SCALAR_EXT 0x87BE
#define GL_VECTOR_EXT 0x87BF
#define GL_MATRIX_EXT 0x87C0
#define GL_VARIANT_EXT 0x87C1
#define GL_INVARIANT_EXT 0x87C2
#define GL_LOCAL_CONSTANT_EXT 0x87C3
#define GL_LOCAL_EXT 0x87C4
#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87C5
#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT 0x87C6
#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT 0x87C7
#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87C8
#define GL_MAX_VERTEX_SHADER_LOCALS_EXT 0x87C9
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CA
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT 0x87CB
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87CC
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT 0x87CD
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT 0x87CE
#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CF
#define GL_VERTEX_SHADER_VARIANTS_EXT 0x87D0
#define GL_VERTEX_SHADER_INVARIANTS_EXT 0x87D1
#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87D2
#define GL_VERTEX_SHADER_LOCALS_EXT 0x87D3
#define GL_VERTEX_SHADER_OPTIMIZED_EXT 0x87D4
#define GL_X_EXT 0x87D5
#define GL_Y_EXT 0x87D6
#define GL_Z_EXT 0x87D7
#define GL_W_EXT 0x87D8
#define GL_NEGATIVE_X_EXT 0x87D9
#define GL_NEGATIVE_Y_EXT 0x87DA
#define GL_NEGATIVE_Z_EXT 0x87DB
#define GL_NEGATIVE_W_EXT 0x87DC
#define GL_ZERO_EXT 0x87DD
#define GL_ONE_EXT 0x87DE
#define GL_NEGATIVE_ONE_EXT 0x87DF
#define GL_NORMALIZED_RANGE_EXT 0x87E0
#define GL_FULL_RANGE_EXT 0x87E1
#define GL_CURRENT_VERTEX_EXT 0x87E2
#define GL_MVP_MATRIX_EXT 0x87E3
#define GL_VARIANT_VALUE_EXT 0x87E4
#define GL_VARIANT_DATATYPE_EXT 0x87E5
#define GL_VARIANT_ARRAY_STRIDE_EXT 0x87E6
#define GL_VARIANT_ARRAY_TYPE_EXT 0x87E7
#define GL_VARIANT_ARRAY_EXT 0x87E8
#define GL_VARIANT_ARRAY_POINTER_EXT 0x87E9
#define GL_INVARIANT_VALUE_EXT 0x87EA
#define GL_INVARIANT_DATATYPE_EXT 0x87EB
#define GL_LOCAL_CONSTANT_VALUE_EXT 0x87EC
#define GL_LOCAL_CONSTANT_DATATYPE_EXT 0x87ED
typedef void (* fp_glBeginVertexShaderEXT)();
extern fp_glBeginVertexShaderEXT gladglBeginVertexShaderEXT;
#define glBeginVertexShaderEXT gladglBeginVertexShaderEXT
typedef void (* fp_glEndVertexShaderEXT)();
extern fp_glEndVertexShaderEXT gladglEndVertexShaderEXT;
#define glEndVertexShaderEXT gladglEndVertexShaderEXT
typedef void (* fp_glBindVertexShaderEXT)(GLuint);
extern fp_glBindVertexShaderEXT gladglBindVertexShaderEXT;
#define glBindVertexShaderEXT gladglBindVertexShaderEXT
typedef GLuint (* fp_glGenVertexShadersEXT)(GLuint);
extern fp_glGenVertexShadersEXT gladglGenVertexShadersEXT;
#define glGenVertexShadersEXT gladglGenVertexShadersEXT
typedef void (* fp_glDeleteVertexShaderEXT)(GLuint);
extern fp_glDeleteVertexShaderEXT gladglDeleteVertexShaderEXT;
#define glDeleteVertexShaderEXT gladglDeleteVertexShaderEXT
typedef void (* fp_glShaderOp1EXT)(GLenum, GLuint, GLuint);
extern fp_glShaderOp1EXT gladglShaderOp1EXT;
#define glShaderOp1EXT gladglShaderOp1EXT
typedef void (* fp_glShaderOp2EXT)(GLenum, GLuint, GLuint, GLuint);
extern fp_glShaderOp2EXT gladglShaderOp2EXT;
#define glShaderOp2EXT gladglShaderOp2EXT
typedef void (* fp_glShaderOp3EXT)(GLenum, GLuint, GLuint, GLuint, GLuint);
extern fp_glShaderOp3EXT gladglShaderOp3EXT;
#define glShaderOp3EXT gladglShaderOp3EXT
typedef void (* fp_glSwizzleEXT)(GLuint, GLuint, GLenum, GLenum, GLenum, GLenum);
extern fp_glSwizzleEXT gladglSwizzleEXT;
#define glSwizzleEXT gladglSwizzleEXT
typedef void (* fp_glWriteMaskEXT)(GLuint, GLuint, GLenum, GLenum, GLenum, GLenum);
extern fp_glWriteMaskEXT gladglWriteMaskEXT;
#define glWriteMaskEXT gladglWriteMaskEXT
typedef void (* fp_glInsertComponentEXT)(GLuint, GLuint, GLuint);
extern fp_glInsertComponentEXT gladglInsertComponentEXT;
#define glInsertComponentEXT gladglInsertComponentEXT
typedef void (* fp_glExtractComponentEXT)(GLuint, GLuint, GLuint);
extern fp_glExtractComponentEXT gladglExtractComponentEXT;
#define glExtractComponentEXT gladglExtractComponentEXT
typedef GLuint (* fp_glGenSymbolsEXT)(GLenum, GLenum, GLenum, GLuint);
extern fp_glGenSymbolsEXT gladglGenSymbolsEXT;
#define glGenSymbolsEXT gladglGenSymbolsEXT
typedef void (* fp_glSetInvariantEXT)(GLuint, GLenum, const GLvoid*);
extern fp_glSetInvariantEXT gladglSetInvariantEXT;
#define glSetInvariantEXT gladglSetInvariantEXT
typedef void (* fp_glSetLocalConstantEXT)(GLuint, GLenum, const GLvoid*);
extern fp_glSetLocalConstantEXT gladglSetLocalConstantEXT;
#define glSetLocalConstantEXT gladglSetLocalConstantEXT
typedef void (* fp_glVariantbvEXT)(GLuint, const GLbyte*);
extern fp_glVariantbvEXT gladglVariantbvEXT;
#define glVariantbvEXT gladglVariantbvEXT
typedef void (* fp_glVariantsvEXT)(GLuint, const GLshort*);
extern fp_glVariantsvEXT gladglVariantsvEXT;
#define glVariantsvEXT gladglVariantsvEXT
typedef void (* fp_glVariantivEXT)(GLuint, const GLint*);
extern fp_glVariantivEXT gladglVariantivEXT;
#define glVariantivEXT gladglVariantivEXT
typedef void (* fp_glVariantfvEXT)(GLuint, const GLfloat*);
extern fp_glVariantfvEXT gladglVariantfvEXT;
#define glVariantfvEXT gladglVariantfvEXT
typedef void (* fp_glVariantdvEXT)(GLuint, const GLdouble*);
extern fp_glVariantdvEXT gladglVariantdvEXT;
#define glVariantdvEXT gladglVariantdvEXT
typedef void (* fp_glVariantubvEXT)(GLuint, const GLubyte*);
extern fp_glVariantubvEXT gladglVariantubvEXT;
#define glVariantubvEXT gladglVariantubvEXT
typedef void (* fp_glVariantusvEXT)(GLuint, const GLushort*);
extern fp_glVariantusvEXT gladglVariantusvEXT;
#define glVariantusvEXT gladglVariantusvEXT
typedef void (* fp_glVariantuivEXT)(GLuint, const GLuint*);
extern fp_glVariantuivEXT gladglVariantuivEXT;
#define glVariantuivEXT gladglVariantuivEXT
typedef void (* fp_glVariantPointerEXT)(GLuint, GLenum, GLuint, const GLvoid*);
extern fp_glVariantPointerEXT gladglVariantPointerEXT;
#define glVariantPointerEXT gladglVariantPointerEXT
typedef void (* fp_glEnableVariantClientStateEXT)(GLuint);
extern fp_glEnableVariantClientStateEXT gladglEnableVariantClientStateEXT;
#define glEnableVariantClientStateEXT gladglEnableVariantClientStateEXT
typedef void (* fp_glDisableVariantClientStateEXT)(GLuint);
extern fp_glDisableVariantClientStateEXT gladglDisableVariantClientStateEXT;
#define glDisableVariantClientStateEXT gladglDisableVariantClientStateEXT
typedef GLuint (* fp_glBindLightParameterEXT)(GLenum, GLenum);
extern fp_glBindLightParameterEXT gladglBindLightParameterEXT;
#define glBindLightParameterEXT gladglBindLightParameterEXT
typedef GLuint (* fp_glBindMaterialParameterEXT)(GLenum, GLenum);
extern fp_glBindMaterialParameterEXT gladglBindMaterialParameterEXT;
#define glBindMaterialParameterEXT gladglBindMaterialParameterEXT
typedef GLuint (* fp_glBindTexGenParameterEXT)(GLenum, GLenum, GLenum);
extern fp_glBindTexGenParameterEXT gladglBindTexGenParameterEXT;
#define glBindTexGenParameterEXT gladglBindTexGenParameterEXT
typedef GLuint (* fp_glBindTextureUnitParameterEXT)(GLenum, GLenum);
extern fp_glBindTextureUnitParameterEXT gladglBindTextureUnitParameterEXT;
#define glBindTextureUnitParameterEXT gladglBindTextureUnitParameterEXT
typedef GLuint (* fp_glBindParameterEXT)(GLenum);
extern fp_glBindParameterEXT gladglBindParameterEXT;
#define glBindParameterEXT gladglBindParameterEXT
typedef GLboolean (* fp_glIsVariantEnabledEXT)(GLuint, GLenum);
extern fp_glIsVariantEnabledEXT gladglIsVariantEnabledEXT;
#define glIsVariantEnabledEXT gladglIsVariantEnabledEXT
typedef void (* fp_glGetVariantBooleanvEXT)(GLuint, GLenum, GLboolean*);
extern fp_glGetVariantBooleanvEXT gladglGetVariantBooleanvEXT;
#define glGetVariantBooleanvEXT gladglGetVariantBooleanvEXT
typedef void (* fp_glGetVariantIntegervEXT)(GLuint, GLenum, GLint*);
extern fp_glGetVariantIntegervEXT gladglGetVariantIntegervEXT;
#define glGetVariantIntegervEXT gladglGetVariantIntegervEXT
typedef void (* fp_glGetVariantFloatvEXT)(GLuint, GLenum, GLfloat*);
extern fp_glGetVariantFloatvEXT gladglGetVariantFloatvEXT;
#define glGetVariantFloatvEXT gladglGetVariantFloatvEXT
typedef void (* fp_glGetVariantPointervEXT)(GLuint, GLenum, GLvoid**);
extern fp_glGetVariantPointervEXT gladglGetVariantPointervEXT;
#define glGetVariantPointervEXT gladglGetVariantPointervEXT
typedef void (* fp_glGetInvariantBooleanvEXT)(GLuint, GLenum, GLboolean*);
extern fp_glGetInvariantBooleanvEXT gladglGetInvariantBooleanvEXT;
#define glGetInvariantBooleanvEXT gladglGetInvariantBooleanvEXT
typedef void (* fp_glGetInvariantIntegervEXT)(GLuint, GLenum, GLint*);
extern fp_glGetInvariantIntegervEXT gladglGetInvariantIntegervEXT;
#define glGetInvariantIntegervEXT gladglGetInvariantIntegervEXT
typedef void (* fp_glGetInvariantFloatvEXT)(GLuint, GLenum, GLfloat*);
extern fp_glGetInvariantFloatvEXT gladglGetInvariantFloatvEXT;
#define glGetInvariantFloatvEXT gladglGetInvariantFloatvEXT
typedef void (* fp_glGetLocalConstantBooleanvEXT)(GLuint, GLenum, GLboolean*);
extern fp_glGetLocalConstantBooleanvEXT gladglGetLocalConstantBooleanvEXT;
#define glGetLocalConstantBooleanvEXT gladglGetLocalConstantBooleanvEXT
typedef void (* fp_glGetLocalConstantIntegervEXT)(GLuint, GLenum, GLint*);
extern fp_glGetLocalConstantIntegervEXT gladglGetLocalConstantIntegervEXT;
#define glGetLocalConstantIntegervEXT gladglGetLocalConstantIntegervEXT
typedef void (* fp_glGetLocalConstantFloatvEXT)(GLuint, GLenum, GLfloat*);
extern fp_glGetLocalConstantFloatvEXT gladglGetLocalConstantFloatvEXT;
#define glGetLocalConstantFloatvEXT gladglGetLocalConstantFloatvEXT
int GL_EXT_blend_func_separate;
#define GL_BLEND_DST_RGB_EXT 0x80C8
#define GL_BLEND_SRC_RGB_EXT 0x80C9
#define GL_BLEND_DST_ALPHA_EXT 0x80CA
#define GL_BLEND_SRC_ALPHA_EXT 0x80CB
typedef void (* fp_glBlendFuncSeparateEXT)(GLenum, GLenum, GLenum, GLenum);
extern fp_glBlendFuncSeparateEXT gladglBlendFuncSeparateEXT;
#define glBlendFuncSeparateEXT gladglBlendFuncSeparateEXT
int GL_APPLE_fence;
#define GL_DRAW_PIXELS_APPLE 0x8A0A
#define GL_FENCE_APPLE 0x8A0B
typedef void (* fp_glGenFencesAPPLE)(GLsizei, GLuint*);
extern fp_glGenFencesAPPLE gladglGenFencesAPPLE;
#define glGenFencesAPPLE gladglGenFencesAPPLE
typedef void (* fp_glDeleteFencesAPPLE)(GLsizei, const GLuint*);
extern fp_glDeleteFencesAPPLE gladglDeleteFencesAPPLE;
#define glDeleteFencesAPPLE gladglDeleteFencesAPPLE
typedef void (* fp_glSetFenceAPPLE)(GLuint);
extern fp_glSetFenceAPPLE gladglSetFenceAPPLE;
#define glSetFenceAPPLE gladglSetFenceAPPLE
typedef GLboolean (* fp_glIsFenceAPPLE)(GLuint);
extern fp_glIsFenceAPPLE gladglIsFenceAPPLE;
#define glIsFenceAPPLE gladglIsFenceAPPLE
typedef GLboolean (* fp_glTestFenceAPPLE)(GLuint);
extern fp_glTestFenceAPPLE gladglTestFenceAPPLE;
#define glTestFenceAPPLE gladglTestFenceAPPLE
typedef void (* fp_glFinishFenceAPPLE)(GLuint);
extern fp_glFinishFenceAPPLE gladglFinishFenceAPPLE;
#define glFinishFenceAPPLE gladglFinishFenceAPPLE
typedef GLboolean (* fp_glTestObjectAPPLE)(GLenum, GLuint);
extern fp_glTestObjectAPPLE gladglTestObjectAPPLE;
#define glTestObjectAPPLE gladglTestObjectAPPLE
typedef void (* fp_glFinishObjectAPPLE)(GLenum, GLint);
extern fp_glFinishObjectAPPLE gladglFinishObjectAPPLE;
#define glFinishObjectAPPLE gladglFinishObjectAPPLE
int GL_OES_byte_coordinates;
typedef void (* fp_glMultiTexCoord1bOES)(GLenum, GLbyte);
extern fp_glMultiTexCoord1bOES gladglMultiTexCoord1bOES;
#define glMultiTexCoord1bOES gladglMultiTexCoord1bOES
typedef void (* fp_glMultiTexCoord1bvOES)(GLenum, const GLbyte*);
extern fp_glMultiTexCoord1bvOES gladglMultiTexCoord1bvOES;
#define glMultiTexCoord1bvOES gladglMultiTexCoord1bvOES
typedef void (* fp_glMultiTexCoord2bOES)(GLenum, GLbyte, GLbyte);
extern fp_glMultiTexCoord2bOES gladglMultiTexCoord2bOES;
#define glMultiTexCoord2bOES gladglMultiTexCoord2bOES
typedef void (* fp_glMultiTexCoord2bvOES)(GLenum, const GLbyte*);
extern fp_glMultiTexCoord2bvOES gladglMultiTexCoord2bvOES;
#define glMultiTexCoord2bvOES gladglMultiTexCoord2bvOES
typedef void (* fp_glMultiTexCoord3bOES)(GLenum, GLbyte, GLbyte, GLbyte);
extern fp_glMultiTexCoord3bOES gladglMultiTexCoord3bOES;
#define glMultiTexCoord3bOES gladglMultiTexCoord3bOES
typedef void (* fp_glMultiTexCoord3bvOES)(GLenum, const GLbyte*);
extern fp_glMultiTexCoord3bvOES gladglMultiTexCoord3bvOES;
#define glMultiTexCoord3bvOES gladglMultiTexCoord3bvOES
typedef void (* fp_glMultiTexCoord4bOES)(GLenum, GLbyte, GLbyte, GLbyte, GLbyte);
extern fp_glMultiTexCoord4bOES gladglMultiTexCoord4bOES;
#define glMultiTexCoord4bOES gladglMultiTexCoord4bOES
typedef void (* fp_glMultiTexCoord4bvOES)(GLenum, const GLbyte*);
extern fp_glMultiTexCoord4bvOES gladglMultiTexCoord4bvOES;
#define glMultiTexCoord4bvOES gladglMultiTexCoord4bvOES
typedef void (* fp_glTexCoord1bOES)(GLbyte);
extern fp_glTexCoord1bOES gladglTexCoord1bOES;
#define glTexCoord1bOES gladglTexCoord1bOES
typedef void (* fp_glTexCoord1bvOES)(const GLbyte*);
extern fp_glTexCoord1bvOES gladglTexCoord1bvOES;
#define glTexCoord1bvOES gladglTexCoord1bvOES
typedef void (* fp_glTexCoord2bOES)(GLbyte, GLbyte);
extern fp_glTexCoord2bOES gladglTexCoord2bOES;
#define glTexCoord2bOES gladglTexCoord2bOES
typedef void (* fp_glTexCoord2bvOES)(const GLbyte*);
extern fp_glTexCoord2bvOES gladglTexCoord2bvOES;
#define glTexCoord2bvOES gladglTexCoord2bvOES
typedef void (* fp_glTexCoord3bOES)(GLbyte, GLbyte, GLbyte);
extern fp_glTexCoord3bOES gladglTexCoord3bOES;
#define glTexCoord3bOES gladglTexCoord3bOES
typedef void (* fp_glTexCoord3bvOES)(const GLbyte*);
extern fp_glTexCoord3bvOES gladglTexCoord3bvOES;
#define glTexCoord3bvOES gladglTexCoord3bvOES
typedef void (* fp_glTexCoord4bOES)(GLbyte, GLbyte, GLbyte, GLbyte);
extern fp_glTexCoord4bOES gladglTexCoord4bOES;
#define glTexCoord4bOES gladglTexCoord4bOES
typedef void (* fp_glTexCoord4bvOES)(const GLbyte*);
extern fp_glTexCoord4bvOES gladglTexCoord4bvOES;
#define glTexCoord4bvOES gladglTexCoord4bvOES
typedef void (* fp_glVertex2bOES)(GLbyte);
extern fp_glVertex2bOES gladglVertex2bOES;
#define glVertex2bOES gladglVertex2bOES
typedef void (* fp_glVertex2bvOES)(const GLbyte*);
extern fp_glVertex2bvOES gladglVertex2bvOES;
#define glVertex2bvOES gladglVertex2bvOES
typedef void (* fp_glVertex3bOES)(GLbyte, GLbyte);
extern fp_glVertex3bOES gladglVertex3bOES;
#define glVertex3bOES gladglVertex3bOES
typedef void (* fp_glVertex3bvOES)(const GLbyte*);
extern fp_glVertex3bvOES gladglVertex3bvOES;
#define glVertex3bvOES gladglVertex3bvOES
typedef void (* fp_glVertex4bOES)(GLbyte, GLbyte, GLbyte);
extern fp_glVertex4bOES gladglVertex4bOES;
#define glVertex4bOES gladglVertex4bOES
typedef void (* fp_glVertex4bvOES)(const GLbyte*);
extern fp_glVertex4bvOES gladglVertex4bvOES;
#define glVertex4bvOES gladglVertex4bvOES
int GL_ARB_transpose_matrix;
#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 0x84E3
#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB 0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB 0x84E5
#define GL_TRANSPOSE_COLOR_MATRIX_ARB 0x84E6
typedef void (* fp_glLoadTransposeMatrixfARB)(const GLfloat*);
extern fp_glLoadTransposeMatrixfARB gladglLoadTransposeMatrixfARB;
#define glLoadTransposeMatrixfARB gladglLoadTransposeMatrixfARB
typedef void (* fp_glLoadTransposeMatrixdARB)(const GLdouble*);
extern fp_glLoadTransposeMatrixdARB gladglLoadTransposeMatrixdARB;
#define glLoadTransposeMatrixdARB gladglLoadTransposeMatrixdARB
typedef void (* fp_glMultTransposeMatrixfARB)(const GLfloat*);
extern fp_glMultTransposeMatrixfARB gladglMultTransposeMatrixfARB;
#define glMultTransposeMatrixfARB gladglMultTransposeMatrixfARB
typedef void (* fp_glMultTransposeMatrixdARB)(const GLdouble*);
extern fp_glMultTransposeMatrixdARB gladglMultTransposeMatrixdARB;
#define glMultTransposeMatrixdARB gladglMultTransposeMatrixdARB
int GL_ARB_provoking_vertex;
int GL_EXT_fog_coord;
#define GL_FOG_COORDINATE_SOURCE_EXT 0x8450
#define GL_FOG_COORDINATE_EXT 0x8451
#define GL_CURRENT_FOG_COORDINATE_EXT 0x8453
#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT 0x8454
#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 0x8455
#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT 0x8456
#define GL_FOG_COORDINATE_ARRAY_EXT 0x8457
typedef void (* fp_glFogCoordfEXT)(GLfloat);
extern fp_glFogCoordfEXT gladglFogCoordfEXT;
#define glFogCoordfEXT gladglFogCoordfEXT
typedef void (* fp_glFogCoordfvEXT)(const GLfloat*);
extern fp_glFogCoordfvEXT gladglFogCoordfvEXT;
#define glFogCoordfvEXT gladglFogCoordfvEXT
typedef void (* fp_glFogCoorddEXT)(GLdouble);
extern fp_glFogCoorddEXT gladglFogCoorddEXT;
#define glFogCoorddEXT gladglFogCoorddEXT
typedef void (* fp_glFogCoorddvEXT)(const GLdouble*);
extern fp_glFogCoorddvEXT gladglFogCoorddvEXT;
#define glFogCoorddvEXT gladglFogCoorddvEXT
typedef void (* fp_glFogCoordPointerEXT)(GLenum, GLsizei, const GLvoid*);
extern fp_glFogCoordPointerEXT gladglFogCoordPointerEXT;
#define glFogCoordPointerEXT gladglFogCoordPointerEXT
int GL_EXT_vertex_array;
#define GL_VERTEX_ARRAY_EXT 0x8074
#define GL_NORMAL_ARRAY_EXT 0x8075
#define GL_COLOR_ARRAY_EXT 0x8076
#define GL_INDEX_ARRAY_EXT 0x8077
#define GL_TEXTURE_COORD_ARRAY_EXT 0x8078
#define GL_EDGE_FLAG_ARRAY_EXT 0x8079
#define GL_VERTEX_ARRAY_SIZE_EXT 0x807A
#define GL_VERTEX_ARRAY_TYPE_EXT 0x807B
#define GL_VERTEX_ARRAY_STRIDE_EXT 0x807C
#define GL_VERTEX_ARRAY_COUNT_EXT 0x807D
#define GL_NORMAL_ARRAY_TYPE_EXT 0x807E
#define GL_NORMAL_ARRAY_STRIDE_EXT 0x807F
#define GL_NORMAL_ARRAY_COUNT_EXT 0x8080
#define GL_COLOR_ARRAY_SIZE_EXT 0x8081
#define GL_COLOR_ARRAY_TYPE_EXT 0x8082
#define GL_COLOR_ARRAY_STRIDE_EXT 0x8083
#define GL_COLOR_ARRAY_COUNT_EXT 0x8084
#define GL_INDEX_ARRAY_TYPE_EXT 0x8085
#define GL_INDEX_ARRAY_STRIDE_EXT 0x8086
#define GL_INDEX_ARRAY_COUNT_EXT 0x8087
#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT 0x8088
#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT 0x8089
#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT 0x808B
#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT 0x808C
#define GL_EDGE_FLAG_ARRAY_COUNT_EXT 0x808D
#define GL_VERTEX_ARRAY_POINTER_EXT 0x808E
#define GL_NORMAL_ARRAY_POINTER_EXT 0x808F
#define GL_COLOR_ARRAY_POINTER_EXT 0x8090
#define GL_INDEX_ARRAY_POINTER_EXT 0x8091
#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
#define GL_EDGE_FLAG_ARRAY_POINTER_EXT 0x8093
typedef void (* fp_glArrayElementEXT)(GLint);
extern fp_glArrayElementEXT gladglArrayElementEXT;
#define glArrayElementEXT gladglArrayElementEXT
typedef void (* fp_glColorPointerEXT)(GLint, GLenum, GLsizei, GLsizei, const GLvoid*);
extern fp_glColorPointerEXT gladglColorPointerEXT;
#define glColorPointerEXT gladglColorPointerEXT
typedef void (* fp_glDrawArraysEXT)(GLenum, GLint, GLsizei);
extern fp_glDrawArraysEXT gladglDrawArraysEXT;
#define glDrawArraysEXT gladglDrawArraysEXT
typedef void (* fp_glEdgeFlagPointerEXT)(GLsizei, GLsizei, const GLboolean*);
extern fp_glEdgeFlagPointerEXT gladglEdgeFlagPointerEXT;
#define glEdgeFlagPointerEXT gladglEdgeFlagPointerEXT
typedef void (* fp_glGetPointervEXT)(GLenum, GLvoid**);
extern fp_glGetPointervEXT gladglGetPointervEXT;
#define glGetPointervEXT gladglGetPointervEXT
typedef void (* fp_glIndexPointerEXT)(GLenum, GLsizei, GLsizei, const GLvoid*);
extern fp_glIndexPointerEXT gladglIndexPointerEXT;
#define glIndexPointerEXT gladglIndexPointerEXT
typedef void (* fp_glNormalPointerEXT)(GLenum, GLsizei, GLsizei, const GLvoid*);
extern fp_glNormalPointerEXT gladglNormalPointerEXT;
#define glNormalPointerEXT gladglNormalPointerEXT
typedef void (* fp_glTexCoordPointerEXT)(GLint, GLenum, GLsizei, GLsizei, const GLvoid*);
extern fp_glTexCoordPointerEXT gladglTexCoordPointerEXT;
#define glTexCoordPointerEXT gladglTexCoordPointerEXT
typedef void (* fp_glVertexPointerEXT)(GLint, GLenum, GLsizei, GLsizei, const GLvoid*);
extern fp_glVertexPointerEXT gladglVertexPointerEXT;
#define glVertexPointerEXT gladglVertexPointerEXT
int GL_ARB_half_float_vertex;
int GL_EXT_blend_equation_separate;
#define GL_BLEND_EQUATION_RGB_EXT 0x8009
#define GL_BLEND_EQUATION_ALPHA_EXT 0x883D
typedef void (* fp_glBlendEquationSeparateEXT)(GLenum, GLenum);
extern fp_glBlendEquationSeparateEXT gladglBlendEquationSeparateEXT;
#define glBlendEquationSeparateEXT gladglBlendEquationSeparateEXT
int GL_ARB_multi_draw_indirect;
int GL_NV_copy_image;
typedef void (* fp_glCopyImageSubDataNV)(GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei);
extern fp_glCopyImageSubDataNV gladglCopyImageSubDataNV;
#define glCopyImageSubDataNV gladglCopyImageSubDataNV
int GL_ARB_fragment_layer_viewport;
int GL_ARB_transform_feedback2;
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
int GL_ARB_transform_feedback3;
int GL_SGIX_ycrcba;
#define GL_YCRCB_SGIX 0x8318
#define GL_YCRCBA_SGIX 0x8319
int GL_EXT_bgra;
#define GL_BGR_EXT 0x80E0
#define GL_BGRA_EXT 0x80E1
int GL_EXT_texture_compression_s3tc;
#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT 0x83F0
#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT 0x83F1
#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT 0x83F2
#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT 0x83F3
int GL_EXT_pixel_transform;
#define GL_PIXEL_TRANSFORM_2D_EXT 0x8330
#define GL_PIXEL_MAG_FILTER_EXT 0x8331
#define GL_PIXEL_MIN_FILTER_EXT 0x8332
#define GL_PIXEL_CUBIC_WEIGHT_EXT 0x8333
#define GL_CUBIC_EXT 0x8334
#define GL_AVERAGE_EXT 0x8335
#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8336
#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8337
#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT 0x8338
typedef void (* fp_glPixelTransformParameteriEXT)(GLenum, GLenum, GLint);
extern fp_glPixelTransformParameteriEXT gladglPixelTransformParameteriEXT;
#define glPixelTransformParameteriEXT gladglPixelTransformParameteriEXT
typedef void (* fp_glPixelTransformParameterfEXT)(GLenum, GLenum, GLfloat);
extern fp_glPixelTransformParameterfEXT gladglPixelTransformParameterfEXT;
#define glPixelTransformParameterfEXT gladglPixelTransformParameterfEXT
typedef void (* fp_glPixelTransformParameterivEXT)(GLenum, GLenum, const GLint*);
extern fp_glPixelTransformParameterivEXT gladglPixelTransformParameterivEXT;
#define glPixelTransformParameterivEXT gladglPixelTransformParameterivEXT
typedef void (* fp_glPixelTransformParameterfvEXT)(GLenum, GLenum, const GLfloat*);
extern fp_glPixelTransformParameterfvEXT gladglPixelTransformParameterfvEXT;
#define glPixelTransformParameterfvEXT gladglPixelTransformParameterfvEXT
typedef void (* fp_glGetPixelTransformParameterivEXT)(GLenum, GLenum, GLint*);
extern fp_glGetPixelTransformParameterivEXT gladglGetPixelTransformParameterivEXT;
#define glGetPixelTransformParameterivEXT gladglGetPixelTransformParameterivEXT
typedef void (* fp_glGetPixelTransformParameterfvEXT)(GLenum, GLenum, GLfloat*);
extern fp_glGetPixelTransformParameterfvEXT gladglGetPixelTransformParameterfvEXT;
#define glGetPixelTransformParameterfvEXT gladglGetPixelTransformParameterfvEXT
int GL_ARB_conservative_depth;
int GL_ATI_fragment_shader;
#define GL_FRAGMENT_SHADER_ATI 0x8920
#define GL_REG_0_ATI 0x8921
#define GL_REG_1_ATI 0x8922
#define GL_REG_2_ATI 0x8923
#define GL_REG_3_ATI 0x8924
#define GL_REG_4_ATI 0x8925
#define GL_REG_5_ATI 0x8926
#define GL_REG_6_ATI 0x8927
#define GL_REG_7_ATI 0x8928
#define GL_REG_8_ATI 0x8929
#define GL_REG_9_ATI 0x892A
#define GL_REG_10_ATI 0x892B
#define GL_REG_11_ATI 0x892C
#define GL_REG_12_ATI 0x892D
#define GL_REG_13_ATI 0x892E
#define GL_REG_14_ATI 0x892F
#define GL_REG_15_ATI 0x8930
#define GL_REG_16_ATI 0x8931
#define GL_REG_17_ATI 0x8932
#define GL_REG_18_ATI 0x8933
#define GL_REG_19_ATI 0x8934
#define GL_REG_20_ATI 0x8935
#define GL_REG_21_ATI 0x8936
#define GL_REG_22_ATI 0x8937
#define GL_REG_23_ATI 0x8938
#define GL_REG_24_ATI 0x8939
#define GL_REG_25_ATI 0x893A
#define GL_REG_26_ATI 0x893B
#define GL_REG_27_ATI 0x893C
#define GL_REG_28_ATI 0x893D
#define GL_REG_29_ATI 0x893E
#define GL_REG_30_ATI 0x893F
#define GL_REG_31_ATI 0x8940
#define GL_CON_0_ATI 0x8941
#define GL_CON_1_ATI 0x8942
#define GL_CON_2_ATI 0x8943
#define GL_CON_3_ATI 0x8944
#define GL_CON_4_ATI 0x8945
#define GL_CON_5_ATI 0x8946
#define GL_CON_6_ATI 0x8947
#define GL_CON_7_ATI 0x8948
#define GL_CON_8_ATI 0x8949
#define GL_CON_9_ATI 0x894A
#define GL_CON_10_ATI 0x894B
#define GL_CON_11_ATI 0x894C
#define GL_CON_12_ATI 0x894D
#define GL_CON_13_ATI 0x894E
#define GL_CON_14_ATI 0x894F
#define GL_CON_15_ATI 0x8950
#define GL_CON_16_ATI 0x8951
#define GL_CON_17_ATI 0x8952
#define GL_CON_18_ATI 0x8953
#define GL_CON_19_ATI 0x8954
#define GL_CON_20_ATI 0x8955
#define GL_CON_21_ATI 0x8956
#define GL_CON_22_ATI 0x8957
#define GL_CON_23_ATI 0x8958
#define GL_CON_24_ATI 0x8959
#define GL_CON_25_ATI 0x895A
#define GL_CON_26_ATI 0x895B
#define GL_CON_27_ATI 0x895C
#define GL_CON_28_ATI 0x895D
#define GL_CON_29_ATI 0x895E
#define GL_CON_30_ATI 0x895F
#define GL_CON_31_ATI 0x8960
#define GL_MOV_ATI 0x8961
#define GL_ADD_ATI 0x8963
#define GL_MUL_ATI 0x8964
#define GL_SUB_ATI 0x8965
#define GL_DOT3_ATI 0x8966
#define GL_DOT4_ATI 0x8967
#define GL_MAD_ATI 0x8968
#define GL_LERP_ATI 0x8969
#define GL_CND_ATI 0x896A
#define GL_CND0_ATI 0x896B
#define GL_DOT2_ADD_ATI 0x896C
#define GL_SECONDARY_INTERPOLATOR_ATI 0x896D
#define GL_NUM_FRAGMENT_REGISTERS_ATI 0x896E
#define GL_NUM_FRAGMENT_CONSTANTS_ATI 0x896F
#define GL_NUM_PASSES_ATI 0x8970
#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI 0x8971
#define GL_NUM_INSTRUCTIONS_TOTAL_ATI 0x8972
#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI 0x8973
#define GL_NUM_LOOPBACK_COMPONENTS_ATI 0x8974
#define GL_COLOR_ALPHA_PAIRING_ATI 0x8975
#define GL_SWIZZLE_STR_ATI 0x8976
#define GL_SWIZZLE_STQ_ATI 0x8977
#define GL_SWIZZLE_STR_DR_ATI 0x8978
#define GL_SWIZZLE_STQ_DQ_ATI 0x8979
#define GL_SWIZZLE_STRQ_ATI 0x897A
#define GL_SWIZZLE_STRQ_DQ_ATI 0x897B
#define GL_RED_BIT_ATI 0x00000001
#define GL_GREEN_BIT_ATI 0x00000002
#define GL_BLUE_BIT_ATI 0x00000004
#define GL_2X_BIT_ATI 0x00000001
#define GL_4X_BIT_ATI 0x00000002
#define GL_8X_BIT_ATI 0x00000004
#define GL_HALF_BIT_ATI 0x00000008
#define GL_QUARTER_BIT_ATI 0x00000010
#define GL_EIGHTH_BIT_ATI 0x00000020
#define GL_SATURATE_BIT_ATI 0x00000040
#define GL_COMP_BIT_ATI 0x00000002
#define GL_NEGATE_BIT_ATI 0x00000004
#define GL_BIAS_BIT_ATI 0x00000008
typedef GLuint (* fp_glGenFragmentShadersATI)(GLuint);
extern fp_glGenFragmentShadersATI gladglGenFragmentShadersATI;
#define glGenFragmentShadersATI gladglGenFragmentShadersATI
typedef void (* fp_glBindFragmentShaderATI)(GLuint);
extern fp_glBindFragmentShaderATI gladglBindFragmentShaderATI;
#define glBindFragmentShaderATI gladglBindFragmentShaderATI
typedef void (* fp_glDeleteFragmentShaderATI)(GLuint);
extern fp_glDeleteFragmentShaderATI gladglDeleteFragmentShaderATI;
#define glDeleteFragmentShaderATI gladglDeleteFragmentShaderATI
typedef void (* fp_glBeginFragmentShaderATI)();
extern fp_glBeginFragmentShaderATI gladglBeginFragmentShaderATI;
#define glBeginFragmentShaderATI gladglBeginFragmentShaderATI
typedef void (* fp_glEndFragmentShaderATI)();
extern fp_glEndFragmentShaderATI gladglEndFragmentShaderATI;
#define glEndFragmentShaderATI gladglEndFragmentShaderATI
typedef void (* fp_glPassTexCoordATI)(GLuint, GLuint, GLenum);
extern fp_glPassTexCoordATI gladglPassTexCoordATI;
#define glPassTexCoordATI gladglPassTexCoordATI
typedef void (* fp_glSampleMapATI)(GLuint, GLuint, GLenum);
extern fp_glSampleMapATI gladglSampleMapATI;
#define glSampleMapATI gladglSampleMapATI
typedef void (* fp_glColorFragmentOp1ATI)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);
extern fp_glColorFragmentOp1ATI gladglColorFragmentOp1ATI;
#define glColorFragmentOp1ATI gladglColorFragmentOp1ATI
typedef void (* fp_glColorFragmentOp2ATI)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);
extern fp_glColorFragmentOp2ATI gladglColorFragmentOp2ATI;
#define glColorFragmentOp2ATI gladglColorFragmentOp2ATI
typedef void (* fp_glColorFragmentOp3ATI)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);
extern fp_glColorFragmentOp3ATI gladglColorFragmentOp3ATI;
#define glColorFragmentOp3ATI gladglColorFragmentOp3ATI
typedef void (* fp_glAlphaFragmentOp1ATI)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint);
extern fp_glAlphaFragmentOp1ATI gladglAlphaFragmentOp1ATI;
#define glAlphaFragmentOp1ATI gladglAlphaFragmentOp1ATI
typedef void (* fp_glAlphaFragmentOp2ATI)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);
extern fp_glAlphaFragmentOp2ATI gladglAlphaFragmentOp2ATI;
#define glAlphaFragmentOp2ATI gladglAlphaFragmentOp2ATI
typedef void (* fp_glAlphaFragmentOp3ATI)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);
extern fp_glAlphaFragmentOp3ATI gladglAlphaFragmentOp3ATI;
#define glAlphaFragmentOp3ATI gladglAlphaFragmentOp3ATI
typedef void (* fp_glSetFragmentShaderConstantATI)(GLuint, const GLfloat*);
extern fp_glSetFragmentShaderConstantATI gladglSetFragmentShaderConstantATI;
#define glSetFragmentShaderConstantATI gladglSetFragmentShaderConstantATI
int GL_ARB_vertex_array_object;
int GL_SUN_triangle_list;
#define GL_RESTART_SUN 0x0001
#define GL_REPLACE_MIDDLE_SUN 0x0002
#define GL_REPLACE_OLDEST_SUN 0x0003
#define GL_TRIANGLE_LIST_SUN 0x81D7
#define GL_REPLACEMENT_CODE_SUN 0x81D8
#define GL_REPLACEMENT_CODE_ARRAY_SUN 0x85C0
#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN 0x85C1
#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN 0x85C2
#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN 0x85C3
#define GL_R1UI_V3F_SUN 0x85C4
#define GL_R1UI_C4UB_V3F_SUN 0x85C5
#define GL_R1UI_C3F_V3F_SUN 0x85C6
#define GL_R1UI_N3F_V3F_SUN 0x85C7
#define GL_R1UI_C4F_N3F_V3F_SUN 0x85C8
#define GL_R1UI_T2F_V3F_SUN 0x85C9
#define GL_R1UI_T2F_N3F_V3F_SUN 0x85CA
#define GL_R1UI_T2F_C4F_N3F_V3F_SUN 0x85CB
typedef void (* fp_glReplacementCodeuiSUN)(GLuint);
extern fp_glReplacementCodeuiSUN gladglReplacementCodeuiSUN;
#define glReplacementCodeuiSUN gladglReplacementCodeuiSUN
typedef void (* fp_glReplacementCodeusSUN)(GLushort);
extern fp_glReplacementCodeusSUN gladglReplacementCodeusSUN;
#define glReplacementCodeusSUN gladglReplacementCodeusSUN
typedef void (* fp_glReplacementCodeubSUN)(GLubyte);
extern fp_glReplacementCodeubSUN gladglReplacementCodeubSUN;
#define glReplacementCodeubSUN gladglReplacementCodeubSUN
typedef void (* fp_glReplacementCodeuivSUN)(const GLuint*);
extern fp_glReplacementCodeuivSUN gladglReplacementCodeuivSUN;
#define glReplacementCodeuivSUN gladglReplacementCodeuivSUN
typedef void (* fp_glReplacementCodeusvSUN)(const GLushort*);
extern fp_glReplacementCodeusvSUN gladglReplacementCodeusvSUN;
#define glReplacementCodeusvSUN gladglReplacementCodeusvSUN
typedef void (* fp_glReplacementCodeubvSUN)(const GLubyte*);
extern fp_glReplacementCodeubvSUN gladglReplacementCodeubvSUN;
#define glReplacementCodeubvSUN gladglReplacementCodeubvSUN
typedef void (* fp_glReplacementCodePointerSUN)(GLenum, GLsizei, const GLvoid**);
extern fp_glReplacementCodePointerSUN gladglReplacementCodePointerSUN;
#define glReplacementCodePointerSUN gladglReplacementCodePointerSUN
int GL_EXT_texture_env_add;
int GL_EXT_packed_depth_stencil;
#define GL_DEPTH_STENCIL_EXT 0x84F9
#define GL_UNSIGNED_INT_24_8_EXT 0x84FA
#define GL_DEPTH24_STENCIL8_EXT 0x88F0
#define GL_TEXTURE_STENCIL_SIZE_EXT 0x88F1
int GL_EXT_texture_mirror_clamp;
#define GL_MIRROR_CLAMP_EXT 0x8742
#define GL_MIRROR_CLAMP_TO_EDGE_EXT 0x8743
#define GL_MIRROR_CLAMP_TO_BORDER_EXT 0x8912
int GL_NV_multisample_filter_hint;
#define GL_MULTISAMPLE_FILTER_HINT_NV 0x8534
int GL_APPLE_float_pixels;
#define GL_HALF_APPLE 0x140B
#define GL_RGBA_FLOAT32_APPLE 0x8814
#define GL_RGB_FLOAT32_APPLE 0x8815
#define GL_ALPHA_FLOAT32_APPLE 0x8816
#define GL_INTENSITY_FLOAT32_APPLE 0x8817
#define GL_LUMINANCE_FLOAT32_APPLE 0x8818
#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE 0x8819
#define GL_RGBA_FLOAT16_APPLE 0x881A
#define GL_RGB_FLOAT16_APPLE 0x881B
#define GL_ALPHA_FLOAT16_APPLE 0x881C
#define GL_INTENSITY_FLOAT16_APPLE 0x881D
#define GL_LUMINANCE_FLOAT16_APPLE 0x881E
#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE 0x881F
#define GL_COLOR_FLOAT_APPLE 0x8A0F
int GL_ARB_transform_feedback_instanced;
int GL_SGIX_async;
#define GL_ASYNC_MARKER_SGIX 0x8329
typedef void (* fp_glAsyncMarkerSGIX)(GLuint);
extern fp_glAsyncMarkerSGIX gladglAsyncMarkerSGIX;
#define glAsyncMarkerSGIX gladglAsyncMarkerSGIX
typedef GLint (* fp_glFinishAsyncSGIX)(GLuint*);
extern fp_glFinishAsyncSGIX gladglFinishAsyncSGIX;
#define glFinishAsyncSGIX gladglFinishAsyncSGIX
typedef GLint (* fp_glPollAsyncSGIX)(GLuint*);
extern fp_glPollAsyncSGIX gladglPollAsyncSGIX;
#define glPollAsyncSGIX gladglPollAsyncSGIX
typedef GLuint (* fp_glGenAsyncMarkersSGIX)(GLsizei);
extern fp_glGenAsyncMarkersSGIX gladglGenAsyncMarkersSGIX;
#define glGenAsyncMarkersSGIX gladglGenAsyncMarkersSGIX
typedef void (* fp_glDeleteAsyncMarkersSGIX)(GLuint, GLsizei);
extern fp_glDeleteAsyncMarkersSGIX gladglDeleteAsyncMarkersSGIX;
#define glDeleteAsyncMarkersSGIX gladglDeleteAsyncMarkersSGIX
typedef GLboolean (* fp_glIsAsyncMarkerSGIX)(GLuint);
extern fp_glIsAsyncMarkerSGIX gladglIsAsyncMarkerSGIX;
#define glIsAsyncMarkerSGIX gladglIsAsyncMarkerSGIX
int GL_EXT_texture_compression_latc;
#define GL_COMPRESSED_LUMINANCE_LATC1_EXT 0x8C70
#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT 0x8C71
#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT 0x8C72
#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT 0x8C73
int GL_NV_shader_atomic_float;
int GL_ARB_shading_language_100;
#define GL_SHADING_LANGUAGE_VERSION_ARB 0x8B8C
int GL_ARB_texture_mirror_clamp_to_edge;
int GL_NV_gpu_shader5;
#define GL_INT8_NV 0x8FE0
#define GL_INT8_VEC2_NV 0x8FE1
#define GL_INT8_VEC3_NV 0x8FE2
#define GL_INT8_VEC4_NV 0x8FE3
#define GL_INT16_NV 0x8FE4
#define GL_INT16_VEC2_NV 0x8FE5
#define GL_INT16_VEC3_NV 0x8FE6
#define GL_INT16_VEC4_NV 0x8FE7
#define GL_INT64_VEC2_NV 0x8FE9
#define GL_INT64_VEC3_NV 0x8FEA
#define GL_INT64_VEC4_NV 0x8FEB
#define GL_UNSIGNED_INT8_NV 0x8FEC
#define GL_UNSIGNED_INT8_VEC2_NV 0x8FED
#define GL_UNSIGNED_INT8_VEC3_NV 0x8FEE
#define GL_UNSIGNED_INT8_VEC4_NV 0x8FEF
#define GL_UNSIGNED_INT16_NV 0x8FF0
#define GL_UNSIGNED_INT16_VEC2_NV 0x8FF1
#define GL_UNSIGNED_INT16_VEC3_NV 0x8FF2
#define GL_UNSIGNED_INT16_VEC4_NV 0x8FF3
#define GL_UNSIGNED_INT64_VEC2_NV 0x8FF5
#define GL_UNSIGNED_INT64_VEC3_NV 0x8FF6
#define GL_UNSIGNED_INT64_VEC4_NV 0x8FF7
#define GL_FLOAT16_NV 0x8FF8
#define GL_FLOAT16_VEC2_NV 0x8FF9
#define GL_FLOAT16_VEC3_NV 0x8FFA
#define GL_FLOAT16_VEC4_NV 0x8FFB
typedef void (* fp_glUniform1i64NV)(GLint, GLint64EXT);
extern fp_glUniform1i64NV gladglUniform1i64NV;
#define glUniform1i64NV gladglUniform1i64NV
typedef void (* fp_glUniform2i64NV)(GLint, GLint64EXT, GLint64EXT);
extern fp_glUniform2i64NV gladglUniform2i64NV;
#define glUniform2i64NV gladglUniform2i64NV
typedef void (* fp_glUniform3i64NV)(GLint, GLint64EXT, GLint64EXT, GLint64EXT);
extern fp_glUniform3i64NV gladglUniform3i64NV;
#define glUniform3i64NV gladglUniform3i64NV
typedef void (* fp_glUniform4i64NV)(GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT);
extern fp_glUniform4i64NV gladglUniform4i64NV;
#define glUniform4i64NV gladglUniform4i64NV
typedef void (* fp_glUniform1i64vNV)(GLint, GLsizei, const GLint64EXT*);
extern fp_glUniform1i64vNV gladglUniform1i64vNV;
#define glUniform1i64vNV gladglUniform1i64vNV
typedef void (* fp_glUniform2i64vNV)(GLint, GLsizei, const GLint64EXT*);
extern fp_glUniform2i64vNV gladglUniform2i64vNV;
#define glUniform2i64vNV gladglUniform2i64vNV
typedef void (* fp_glUniform3i64vNV)(GLint, GLsizei, const GLint64EXT*);
extern fp_glUniform3i64vNV gladglUniform3i64vNV;
#define glUniform3i64vNV gladglUniform3i64vNV
typedef void (* fp_glUniform4i64vNV)(GLint, GLsizei, const GLint64EXT*);
extern fp_glUniform4i64vNV gladglUniform4i64vNV;
#define glUniform4i64vNV gladglUniform4i64vNV
typedef void (* fp_glUniform1ui64NV)(GLint, GLuint64EXT);
extern fp_glUniform1ui64NV gladglUniform1ui64NV;
#define glUniform1ui64NV gladglUniform1ui64NV
typedef void (* fp_glUniform2ui64NV)(GLint, GLuint64EXT, GLuint64EXT);
extern fp_glUniform2ui64NV gladglUniform2ui64NV;
#define glUniform2ui64NV gladglUniform2ui64NV
typedef void (* fp_glUniform3ui64NV)(GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT);
extern fp_glUniform3ui64NV gladglUniform3ui64NV;
#define glUniform3ui64NV gladglUniform3ui64NV
typedef void (* fp_glUniform4ui64NV)(GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT);
extern fp_glUniform4ui64NV gladglUniform4ui64NV;
#define glUniform4ui64NV gladglUniform4ui64NV
typedef void (* fp_glUniform1ui64vNV)(GLint, GLsizei, const GLuint64EXT*);
extern fp_glUniform1ui64vNV gladglUniform1ui64vNV;
#define glUniform1ui64vNV gladglUniform1ui64vNV
typedef void (* fp_glUniform2ui64vNV)(GLint, GLsizei, const GLuint64EXT*);
extern fp_glUniform2ui64vNV gladglUniform2ui64vNV;
#define glUniform2ui64vNV gladglUniform2ui64vNV
typedef void (* fp_glUniform3ui64vNV)(GLint, GLsizei, const GLuint64EXT*);
extern fp_glUniform3ui64vNV gladglUniform3ui64vNV;
#define glUniform3ui64vNV gladglUniform3ui64vNV
typedef void (* fp_glUniform4ui64vNV)(GLint, GLsizei, const GLuint64EXT*);
extern fp_glUniform4ui64vNV gladglUniform4ui64vNV;
#define glUniform4ui64vNV gladglUniform4ui64vNV
typedef void (* fp_glGetUniformi64vNV)(GLuint, GLint, GLint64EXT*);
extern fp_glGetUniformi64vNV gladglGetUniformi64vNV;
#define glGetUniformi64vNV gladglGetUniformi64vNV
typedef void (* fp_glProgramUniform1i64NV)(GLuint, GLint, GLint64EXT);
extern fp_glProgramUniform1i64NV gladglProgramUniform1i64NV;
#define glProgramUniform1i64NV gladglProgramUniform1i64NV
typedef void (* fp_glProgramUniform2i64NV)(GLuint, GLint, GLint64EXT, GLint64EXT);
extern fp_glProgramUniform2i64NV gladglProgramUniform2i64NV;
#define glProgramUniform2i64NV gladglProgramUniform2i64NV
typedef void (* fp_glProgramUniform3i64NV)(GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT);
extern fp_glProgramUniform3i64NV gladglProgramUniform3i64NV;
#define glProgramUniform3i64NV gladglProgramUniform3i64NV
typedef void (* fp_glProgramUniform4i64NV)(GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT);
extern fp_glProgramUniform4i64NV gladglProgramUniform4i64NV;
#define glProgramUniform4i64NV gladglProgramUniform4i64NV
typedef void (* fp_glProgramUniform1i64vNV)(GLuint, GLint, GLsizei, const GLint64EXT*);
extern fp_glProgramUniform1i64vNV gladglProgramUniform1i64vNV;
#define glProgramUniform1i64vNV gladglProgramUniform1i64vNV
typedef void (* fp_glProgramUniform2i64vNV)(GLuint, GLint, GLsizei, const GLint64EXT*);
extern fp_glProgramUniform2i64vNV gladglProgramUniform2i64vNV;
#define glProgramUniform2i64vNV gladglProgramUniform2i64vNV
typedef void (* fp_glProgramUniform3i64vNV)(GLuint, GLint, GLsizei, const GLint64EXT*);
extern fp_glProgramUniform3i64vNV gladglProgramUniform3i64vNV;
#define glProgramUniform3i64vNV gladglProgramUniform3i64vNV
typedef void (* fp_glProgramUniform4i64vNV)(GLuint, GLint, GLsizei, const GLint64EXT*);
extern fp_glProgramUniform4i64vNV gladglProgramUniform4i64vNV;
#define glProgramUniform4i64vNV gladglProgramUniform4i64vNV
typedef void (* fp_glProgramUniform1ui64NV)(GLuint, GLint, GLuint64EXT);
extern fp_glProgramUniform1ui64NV gladglProgramUniform1ui64NV;
#define glProgramUniform1ui64NV gladglProgramUniform1ui64NV
typedef void (* fp_glProgramUniform2ui64NV)(GLuint, GLint, GLuint64EXT, GLuint64EXT);
extern fp_glProgramUniform2ui64NV gladglProgramUniform2ui64NV;
#define glProgramUniform2ui64NV gladglProgramUniform2ui64NV
typedef void (* fp_glProgramUniform3ui64NV)(GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT);
extern fp_glProgramUniform3ui64NV gladglProgramUniform3ui64NV;
#define glProgramUniform3ui64NV gladglProgramUniform3ui64NV
typedef void (* fp_glProgramUniform4ui64NV)(GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT);
extern fp_glProgramUniform4ui64NV gladglProgramUniform4ui64NV;
#define glProgramUniform4ui64NV gladglProgramUniform4ui64NV
typedef void (* fp_glProgramUniform1ui64vNV)(GLuint, GLint, GLsizei, const GLuint64EXT*);
extern fp_glProgramUniform1ui64vNV gladglProgramUniform1ui64vNV;
#define glProgramUniform1ui64vNV gladglProgramUniform1ui64vNV
typedef void (* fp_glProgramUniform2ui64vNV)(GLuint, GLint, GLsizei, const GLuint64EXT*);
extern fp_glProgramUniform2ui64vNV gladglProgramUniform2ui64vNV;
#define glProgramUniform2ui64vNV gladglProgramUniform2ui64vNV
typedef void (* fp_glProgramUniform3ui64vNV)(GLuint, GLint, GLsizei, const GLuint64EXT*);
extern fp_glProgramUniform3ui64vNV gladglProgramUniform3ui64vNV;
#define glProgramUniform3ui64vNV gladglProgramUniform3ui64vNV
typedef void (* fp_glProgramUniform4ui64vNV)(GLuint, GLint, GLsizei, const GLuint64EXT*);
extern fp_glProgramUniform4ui64vNV gladglProgramUniform4ui64vNV;
#define glProgramUniform4ui64vNV gladglProgramUniform4ui64vNV
int GL_ARB_ES2_compatibility;
int GL_ARB_indirect_parameters;
#define GL_PARAMETER_BUFFER_ARB 0x80EE
#define GL_PARAMETER_BUFFER_BINDING_ARB 0x80EF
typedef void (* fp_glMultiDrawArraysIndirectCountARB)(GLenum, GLintptr, GLintptr, GLsizei, GLsizei);
extern fp_glMultiDrawArraysIndirectCountARB gladglMultiDrawArraysIndirectCountARB;
#define glMultiDrawArraysIndirectCountARB gladglMultiDrawArraysIndirectCountARB
typedef void (* fp_glMultiDrawElementsIndirectCountARB)(GLenum, GLenum, GLintptr, GLintptr, GLsizei, GLsizei);
extern fp_glMultiDrawElementsIndirectCountARB gladglMultiDrawElementsIndirectCountARB;
#define glMultiDrawElementsIndirectCountARB gladglMultiDrawElementsIndirectCountARB
int GL_NV_half_float;
#define GL_HALF_FLOAT_NV 0x140B
typedef void (* fp_glVertex2hNV)(GLhalfNV, GLhalfNV);
extern fp_glVertex2hNV gladglVertex2hNV;
#define glVertex2hNV gladglVertex2hNV
typedef void (* fp_glVertex2hvNV)(const GLhalfNV*);
extern fp_glVertex2hvNV gladglVertex2hvNV;
#define glVertex2hvNV gladglVertex2hvNV
typedef void (* fp_glVertex3hNV)(GLhalfNV, GLhalfNV, GLhalfNV);
extern fp_glVertex3hNV gladglVertex3hNV;
#define glVertex3hNV gladglVertex3hNV
typedef void (* fp_glVertex3hvNV)(const GLhalfNV*);
extern fp_glVertex3hvNV gladglVertex3hvNV;
#define glVertex3hvNV gladglVertex3hvNV
typedef void (* fp_glVertex4hNV)(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV);
extern fp_glVertex4hNV gladglVertex4hNV;
#define glVertex4hNV gladglVertex4hNV
typedef void (* fp_glVertex4hvNV)(const GLhalfNV*);
extern fp_glVertex4hvNV gladglVertex4hvNV;
#define glVertex4hvNV gladglVertex4hvNV
typedef void (* fp_glNormal3hNV)(GLhalfNV, GLhalfNV, GLhalfNV);
extern fp_glNormal3hNV gladglNormal3hNV;
#define glNormal3hNV gladglNormal3hNV
typedef void (* fp_glNormal3hvNV)(const GLhalfNV*);
extern fp_glNormal3hvNV gladglNormal3hvNV;
#define glNormal3hvNV gladglNormal3hvNV
typedef void (* fp_glColor3hNV)(GLhalfNV, GLhalfNV, GLhalfNV);
extern fp_glColor3hNV gladglColor3hNV;
#define glColor3hNV gladglColor3hNV
typedef void (* fp_glColor3hvNV)(const GLhalfNV*);
extern fp_glColor3hvNV gladglColor3hvNV;
#define glColor3hvNV gladglColor3hvNV
typedef void (* fp_glColor4hNV)(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV);
extern fp_glColor4hNV gladglColor4hNV;
#define glColor4hNV gladglColor4hNV
typedef void (* fp_glColor4hvNV)(const GLhalfNV*);
extern fp_glColor4hvNV gladglColor4hvNV;
#define glColor4hvNV gladglColor4hvNV
typedef void (* fp_glTexCoord1hNV)(GLhalfNV);
extern fp_glTexCoord1hNV gladglTexCoord1hNV;
#define glTexCoord1hNV gladglTexCoord1hNV
typedef void (* fp_glTexCoord1hvNV)(const GLhalfNV*);
extern fp_glTexCoord1hvNV gladglTexCoord1hvNV;
#define glTexCoord1hvNV gladglTexCoord1hvNV
typedef void (* fp_glTexCoord2hNV)(GLhalfNV, GLhalfNV);
extern fp_glTexCoord2hNV gladglTexCoord2hNV;
#define glTexCoord2hNV gladglTexCoord2hNV
typedef void (* fp_glTexCoord2hvNV)(const GLhalfNV*);
extern fp_glTexCoord2hvNV gladglTexCoord2hvNV;
#define glTexCoord2hvNV gladglTexCoord2hvNV
typedef void (* fp_glTexCoord3hNV)(GLhalfNV, GLhalfNV, GLhalfNV);
extern fp_glTexCoord3hNV gladglTexCoord3hNV;
#define glTexCoord3hNV gladglTexCoord3hNV
typedef void (* fp_glTexCoord3hvNV)(const GLhalfNV*);
extern fp_glTexCoord3hvNV gladglTexCoord3hvNV;
#define glTexCoord3hvNV gladglTexCoord3hvNV
typedef void (* fp_glTexCoord4hNV)(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV);
extern fp_glTexCoord4hNV gladglTexCoord4hNV;
#define glTexCoord4hNV gladglTexCoord4hNV
typedef void (* fp_glTexCoord4hvNV)(const GLhalfNV*);
extern fp_glTexCoord4hvNV gladglTexCoord4hvNV;
#define glTexCoord4hvNV gladglTexCoord4hvNV
typedef void (* fp_glMultiTexCoord1hNV)(GLenum, GLhalfNV);
extern fp_glMultiTexCoord1hNV gladglMultiTexCoord1hNV;
#define glMultiTexCoord1hNV gladglMultiTexCoord1hNV
typedef void (* fp_glMultiTexCoord1hvNV)(GLenum, const GLhalfNV*);
extern fp_glMultiTexCoord1hvNV gladglMultiTexCoord1hvNV;
#define glMultiTexCoord1hvNV gladglMultiTexCoord1hvNV
typedef void (* fp_glMultiTexCoord2hNV)(GLenum, GLhalfNV, GLhalfNV);
extern fp_glMultiTexCoord2hNV gladglMultiTexCoord2hNV;
#define glMultiTexCoord2hNV gladglMultiTexCoord2hNV
typedef void (* fp_glMultiTexCoord2hvNV)(GLenum, const GLhalfNV*);
extern fp_glMultiTexCoord2hvNV gladglMultiTexCoord2hvNV;
#define glMultiTexCoord2hvNV gladglMultiTexCoord2hvNV
typedef void (* fp_glMultiTexCoord3hNV)(GLenum, GLhalfNV, GLhalfNV, GLhalfNV);
extern fp_glMultiTexCoord3hNV gladglMultiTexCoord3hNV;
#define glMultiTexCoord3hNV gladglMultiTexCoord3hNV
typedef void (* fp_glMultiTexCoord3hvNV)(GLenum, const GLhalfNV*);
extern fp_glMultiTexCoord3hvNV gladglMultiTexCoord3hvNV;
#define glMultiTexCoord3hvNV gladglMultiTexCoord3hvNV
typedef void (* fp_glMultiTexCoord4hNV)(GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV);
extern fp_glMultiTexCoord4hNV gladglMultiTexCoord4hNV;
#define glMultiTexCoord4hNV gladglMultiTexCoord4hNV
typedef void (* fp_glMultiTexCoord4hvNV)(GLenum, const GLhalfNV*);
extern fp_glMultiTexCoord4hvNV gladglMultiTexCoord4hvNV;
#define glMultiTexCoord4hvNV gladglMultiTexCoord4hvNV
typedef void (* fp_glFogCoordhNV)(GLhalfNV);
extern fp_glFogCoordhNV gladglFogCoordhNV;
#define glFogCoordhNV gladglFogCoordhNV
typedef void (* fp_glFogCoordhvNV)(const GLhalfNV*);
extern fp_glFogCoordhvNV gladglFogCoordhvNV;
#define glFogCoordhvNV gladglFogCoordhvNV
typedef void (* fp_glSecondaryColor3hNV)(GLhalfNV, GLhalfNV, GLhalfNV);
extern fp_glSecondaryColor3hNV gladglSecondaryColor3hNV;
#define glSecondaryColor3hNV gladglSecondaryColor3hNV
typedef void (* fp_glSecondaryColor3hvNV)(const GLhalfNV*);
extern fp_glSecondaryColor3hvNV gladglSecondaryColor3hvNV;
#define glSecondaryColor3hvNV gladglSecondaryColor3hvNV
typedef void (* fp_glVertexWeighthNV)(GLhalfNV);
extern fp_glVertexWeighthNV gladglVertexWeighthNV;
#define glVertexWeighthNV gladglVertexWeighthNV
typedef void (* fp_glVertexWeighthvNV)(const GLhalfNV*);
extern fp_glVertexWeighthvNV gladglVertexWeighthvNV;
#define glVertexWeighthvNV gladglVertexWeighthvNV
typedef void (* fp_glVertexAttrib1hNV)(GLuint, GLhalfNV);
extern fp_glVertexAttrib1hNV gladglVertexAttrib1hNV;
#define glVertexAttrib1hNV gladglVertexAttrib1hNV
typedef void (* fp_glVertexAttrib1hvNV)(GLuint, const GLhalfNV*);
extern fp_glVertexAttrib1hvNV gladglVertexAttrib1hvNV;
#define glVertexAttrib1hvNV gladglVertexAttrib1hvNV
typedef void (* fp_glVertexAttrib2hNV)(GLuint, GLhalfNV, GLhalfNV);
extern fp_glVertexAttrib2hNV gladglVertexAttrib2hNV;
#define glVertexAttrib2hNV gladglVertexAttrib2hNV
typedef void (* fp_glVertexAttrib2hvNV)(GLuint, const GLhalfNV*);
extern fp_glVertexAttrib2hvNV gladglVertexAttrib2hvNV;
#define glVertexAttrib2hvNV gladglVertexAttrib2hvNV
typedef void (* fp_glVertexAttrib3hNV)(GLuint, GLhalfNV, GLhalfNV, GLhalfNV);
extern fp_glVertexAttrib3hNV gladglVertexAttrib3hNV;
#define glVertexAttrib3hNV gladglVertexAttrib3hNV
typedef void (* fp_glVertexAttrib3hvNV)(GLuint, const GLhalfNV*);
extern fp_glVertexAttrib3hvNV gladglVertexAttrib3hvNV;
#define glVertexAttrib3hvNV gladglVertexAttrib3hvNV
typedef void (* fp_glVertexAttrib4hNV)(GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV);
extern fp_glVertexAttrib4hNV gladglVertexAttrib4hNV;
#define glVertexAttrib4hNV gladglVertexAttrib4hNV
typedef void (* fp_glVertexAttrib4hvNV)(GLuint, const GLhalfNV*);
extern fp_glVertexAttrib4hvNV gladglVertexAttrib4hvNV;
#define glVertexAttrib4hvNV gladglVertexAttrib4hvNV
typedef void (* fp_glVertexAttribs1hvNV)(GLuint, GLsizei, const GLhalfNV*);
extern fp_glVertexAttribs1hvNV gladglVertexAttribs1hvNV;
#define glVertexAttribs1hvNV gladglVertexAttribs1hvNV
typedef void (* fp_glVertexAttribs2hvNV)(GLuint, GLsizei, const GLhalfNV*);
extern fp_glVertexAttribs2hvNV gladglVertexAttribs2hvNV;
#define glVertexAttribs2hvNV gladglVertexAttribs2hvNV
typedef void (* fp_glVertexAttribs3hvNV)(GLuint, GLsizei, const GLhalfNV*);
extern fp_glVertexAttribs3hvNV gladglVertexAttribs3hvNV;
#define glVertexAttribs3hvNV gladglVertexAttribs3hvNV
typedef void (* fp_glVertexAttribs4hvNV)(GLuint, GLsizei, const GLhalfNV*);
extern fp_glVertexAttribs4hvNV gladglVertexAttribs4hvNV;
#define glVertexAttribs4hvNV gladglVertexAttribs4hvNV
int GL_EXT_coordinate_frame;
#define GL_TANGENT_ARRAY_EXT 0x8439
#define GL_BINORMAL_ARRAY_EXT 0x843A
#define GL_CURRENT_TANGENT_EXT 0x843B
#define GL_CURRENT_BINORMAL_EXT 0x843C
#define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#define GL_MAP1_TANGENT_EXT 0x8444
#define GL_MAP2_TANGENT_EXT 0x8445
#define GL_MAP1_BINORMAL_EXT 0x8446
#define GL_MAP2_BINORMAL_EXT 0x8447
typedef void (* fp_glTangent3bEXT)(GLbyte, GLbyte, GLbyte);
extern fp_glTangent3bEXT gladglTangent3bEXT;
#define glTangent3bEXT gladglTangent3bEXT
typedef void (* fp_glTangent3bvEXT)(const GLbyte*);
extern fp_glTangent3bvEXT gladglTangent3bvEXT;
#define glTangent3bvEXT gladglTangent3bvEXT
typedef void (* fp_glTangent3dEXT)(GLdouble, GLdouble, GLdouble);
extern fp_glTangent3dEXT gladglTangent3dEXT;
#define glTangent3dEXT gladglTangent3dEXT
typedef void (* fp_glTangent3dvEXT)(const GLdouble*);
extern fp_glTangent3dvEXT gladglTangent3dvEXT;
#define glTangent3dvEXT gladglTangent3dvEXT
typedef void (* fp_glTangent3fEXT)(GLfloat, GLfloat, GLfloat);
extern fp_glTangent3fEXT gladglTangent3fEXT;
#define glTangent3fEXT gladglTangent3fEXT
typedef void (* fp_glTangent3fvEXT)(const GLfloat*);
extern fp_glTangent3fvEXT gladglTangent3fvEXT;
#define glTangent3fvEXT gladglTangent3fvEXT
typedef void (* fp_glTangent3iEXT)(GLint, GLint, GLint);
extern fp_glTangent3iEXT gladglTangent3iEXT;
#define glTangent3iEXT gladglTangent3iEXT
typedef void (* fp_glTangent3ivEXT)(const GLint*);
extern fp_glTangent3ivEXT gladglTangent3ivEXT;
#define glTangent3ivEXT gladglTangent3ivEXT
typedef void (* fp_glTangent3sEXT)(GLshort, GLshort, GLshort);
extern fp_glTangent3sEXT gladglTangent3sEXT;
#define glTangent3sEXT gladglTangent3sEXT
typedef void (* fp_glTangent3svEXT)(const GLshort*);
extern fp_glTangent3svEXT gladglTangent3svEXT;
#define glTangent3svEXT gladglTangent3svEXT
typedef void (* fp_glBinormal3bEXT)(GLbyte, GLbyte, GLbyte);
extern fp_glBinormal3bEXT gladglBinormal3bEXT;
#define glBinormal3bEXT gladglBinormal3bEXT
typedef void (* fp_glBinormal3bvEXT)(const GLbyte*);
extern fp_glBinormal3bvEXT gladglBinormal3bvEXT;
#define glBinormal3bvEXT gladglBinormal3bvEXT
typedef void (* fp_glBinormal3dEXT)(GLdouble, GLdouble, GLdouble);
extern fp_glBinormal3dEXT gladglBinormal3dEXT;
#define glBinormal3dEXT gladglBinormal3dEXT
typedef void (* fp_glBinormal3dvEXT)(const GLdouble*);
extern fp_glBinormal3dvEXT gladglBinormal3dvEXT;
#define glBinormal3dvEXT gladglBinormal3dvEXT
typedef void (* fp_glBinormal3fEXT)(GLfloat, GLfloat, GLfloat);
extern fp_glBinormal3fEXT gladglBinormal3fEXT;
#define glBinormal3fEXT gladglBinormal3fEXT
typedef void (* fp_glBinormal3fvEXT)(const GLfloat*);
extern fp_glBinormal3fvEXT gladglBinormal3fvEXT;
#define glBinormal3fvEXT gladglBinormal3fvEXT
typedef void (* fp_glBinormal3iEXT)(GLint, GLint, GLint);
extern fp_glBinormal3iEXT gladglBinormal3iEXT;
#define glBinormal3iEXT gladglBinormal3iEXT
typedef void (* fp_glBinormal3ivEXT)(const GLint*);
extern fp_glBinormal3ivEXT gladglBinormal3ivEXT;
#define glBinormal3ivEXT gladglBinormal3ivEXT
typedef void (* fp_glBinormal3sEXT)(GLshort, GLshort, GLshort);
extern fp_glBinormal3sEXT gladglBinormal3sEXT;
#define glBinormal3sEXT gladglBinormal3sEXT
typedef void (* fp_glBinormal3svEXT)(const GLshort*);
extern fp_glBinormal3svEXT gladglBinormal3svEXT;
#define glBinormal3svEXT gladglBinormal3svEXT
typedef void (* fp_glTangentPointerEXT)(GLenum, GLsizei, const GLvoid*);
extern fp_glTangentPointerEXT gladglTangentPointerEXT;
#define glTangentPointerEXT gladglTangentPointerEXT
typedef void (* fp_glBinormalPointerEXT)(GLenum, GLsizei, const GLvoid*);
extern fp_glBinormalPointerEXT gladglBinormalPointerEXT;
#define glBinormalPointerEXT gladglBinormalPointerEXT
int GL_ATI_texture_mirror_once;
#define GL_MIRROR_CLAMP_ATI 0x8742
#define GL_MIRROR_CLAMP_TO_EDGE_ATI 0x8743
int GL_IBM_rasterpos_clip;
#define GL_RASTER_POSITION_UNCLIPPED_IBM 0x19262
int GL_SGIX_shadow;
#define GL_TEXTURE_COMPARE_SGIX 0x819A
#define GL_TEXTURE_COMPARE_OPERATOR_SGIX 0x819B
#define GL_TEXTURE_LEQUAL_R_SGIX 0x819C
#define GL_TEXTURE_GEQUAL_R_SGIX 0x819D
int GL_NV_deep_texture3D;
#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV 0x90D0
#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV 0x90D1
int GL_ARB_shader_draw_parameters;
int GL_SGIX_calligraphic_fragment;
#define GL_CALLIGRAPHIC_FRAGMENT_SGIX 0x8183
int GL_ARB_shader_bit_encoding;
int GL_EXT_compiled_vertex_array;
#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT 0x81A8
#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT 0x81A9
typedef void (* fp_glLockArraysEXT)(GLint, GLsizei);
extern fp_glLockArraysEXT gladglLockArraysEXT;
#define glLockArraysEXT gladglLockArraysEXT
typedef void (* fp_glUnlockArraysEXT)();
extern fp_glUnlockArraysEXT gladglUnlockArraysEXT;
#define glUnlockArraysEXT gladglUnlockArraysEXT
int GL_NV_depth_buffer_float;
#define GL_DEPTH_COMPONENT32F_NV 0x8DAB
#define GL_DEPTH32F_STENCIL8_NV 0x8DAC
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV 0x8DAD
#define GL_DEPTH_BUFFER_FLOAT_MODE_NV 0x8DAF
typedef void (* fp_glDepthRangedNV)(GLdouble, GLdouble);
extern fp_glDepthRangedNV gladglDepthRangedNV;
#define glDepthRangedNV gladglDepthRangedNV
typedef void (* fp_glClearDepthdNV)(GLdouble);
extern fp_glClearDepthdNV gladglClearDepthdNV;
#define glClearDepthdNV gladglClearDepthdNV
typedef void (* fp_glDepthBoundsdNV)(GLdouble, GLdouble);
extern fp_glDepthBoundsdNV gladglDepthBoundsdNV;
#define glDepthBoundsdNV gladglDepthBoundsdNV
int GL_NV_occlusion_query;
#define GL_PIXEL_COUNTER_BITS_NV 0x8864
#define GL_CURRENT_OCCLUSION_QUERY_ID_NV 0x8865
#define GL_PIXEL_COUNT_NV 0x8866
#define GL_PIXEL_COUNT_AVAILABLE_NV 0x8867
typedef void (* fp_glGenOcclusionQueriesNV)(GLsizei, GLuint*);
extern fp_glGenOcclusionQueriesNV gladglGenOcclusionQueriesNV;
#define glGenOcclusionQueriesNV gladglGenOcclusionQueriesNV
typedef void (* fp_glDeleteOcclusionQueriesNV)(GLsizei, const GLuint*);
extern fp_glDeleteOcclusionQueriesNV gladglDeleteOcclusionQueriesNV;
#define glDeleteOcclusionQueriesNV gladglDeleteOcclusionQueriesNV
typedef GLboolean (* fp_glIsOcclusionQueryNV)(GLuint);
extern fp_glIsOcclusionQueryNV gladglIsOcclusionQueryNV;
#define glIsOcclusionQueryNV gladglIsOcclusionQueryNV
typedef void (* fp_glBeginOcclusionQueryNV)(GLuint);
extern fp_glBeginOcclusionQueryNV gladglBeginOcclusionQueryNV;
#define glBeginOcclusionQueryNV gladglBeginOcclusionQueryNV
typedef void (* fp_glEndOcclusionQueryNV)();
extern fp_glEndOcclusionQueryNV gladglEndOcclusionQueryNV;
#define glEndOcclusionQueryNV gladglEndOcclusionQueryNV
typedef void (* fp_glGetOcclusionQueryivNV)(GLuint, GLenum, GLint*);
extern fp_glGetOcclusionQueryivNV gladglGetOcclusionQueryivNV;
#define glGetOcclusionQueryivNV gladglGetOcclusionQueryivNV
typedef void (* fp_glGetOcclusionQueryuivNV)(GLuint, GLenum, GLuint*);
extern fp_glGetOcclusionQueryuivNV gladglGetOcclusionQueryuivNV;
#define glGetOcclusionQueryuivNV gladglGetOcclusionQueryuivNV
int GL_APPLE_flush_buffer_range;
#define GL_BUFFER_SERIALIZED_MODIFY_APPLE 0x8A12
#define GL_BUFFER_FLUSHING_UNMAP_APPLE 0x8A13
typedef void (* fp_glBufferParameteriAPPLE)(GLenum, GLenum, GLint);
extern fp_glBufferParameteriAPPLE gladglBufferParameteriAPPLE;
#define glBufferParameteriAPPLE gladglBufferParameteriAPPLE
typedef void (* fp_glFlushMappedBufferRangeAPPLE)(GLenum, GLintptr, GLsizeiptr);
extern fp_glFlushMappedBufferRangeAPPLE gladglFlushMappedBufferRangeAPPLE;
#define glFlushMappedBufferRangeAPPLE gladglFlushMappedBufferRangeAPPLE
int GL_ARB_imaging;
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_EQUATION 0x8009
#define GL_CONVOLUTION_1D 0x8010
#define GL_CONVOLUTION_2D 0x8011
#define GL_SEPARABLE_2D 0x8012
#define GL_CONVOLUTION_BORDER_MODE 0x8013
#define GL_CONVOLUTION_FILTER_SCALE 0x8014
#define GL_CONVOLUTION_FILTER_BIAS 0x8015
#define GL_REDUCE 0x8016
#define GL_CONVOLUTION_FORMAT 0x8017
#define GL_CONVOLUTION_WIDTH 0x8018
#define GL_CONVOLUTION_HEIGHT 0x8019
#define GL_MAX_CONVOLUTION_WIDTH 0x801A
#define GL_MAX_CONVOLUTION_HEIGHT 0x801B
#define GL_POST_CONVOLUTION_RED_SCALE 0x801C
#define GL_POST_CONVOLUTION_GREEN_SCALE 0x801D
#define GL_POST_CONVOLUTION_BLUE_SCALE 0x801E
#define GL_POST_CONVOLUTION_ALPHA_SCALE 0x801F
#define GL_POST_CONVOLUTION_RED_BIAS 0x8020
#define GL_POST_CONVOLUTION_GREEN_BIAS 0x8021
#define GL_POST_CONVOLUTION_BLUE_BIAS 0x8022
#define GL_POST_CONVOLUTION_ALPHA_BIAS 0x8023
#define GL_HISTOGRAM 0x8024
#define GL_PROXY_HISTOGRAM 0x8025
#define GL_HISTOGRAM_WIDTH 0x8026
#define GL_HISTOGRAM_FORMAT 0x8027
#define GL_HISTOGRAM_RED_SIZE 0x8028
#define GL_HISTOGRAM_GREEN_SIZE 0x8029
#define GL_HISTOGRAM_BLUE_SIZE 0x802A
#define GL_HISTOGRAM_ALPHA_SIZE 0x802B
#define GL_HISTOGRAM_LUMINANCE_SIZE 0x802C
#define GL_HISTOGRAM_SINK 0x802D
#define GL_MINMAX 0x802E
#define GL_MINMAX_FORMAT 0x802F
#define GL_MINMAX_SINK 0x8030
#define GL_TABLE_TOO_LARGE 0x8031
#define GL_COLOR_MATRIX 0x80B1
#define GL_COLOR_MATRIX_STACK_DEPTH 0x80B2
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH 0x80B3
#define GL_POST_COLOR_MATRIX_RED_SCALE 0x80B4
#define GL_POST_COLOR_MATRIX_GREEN_SCALE 0x80B5
#define GL_POST_COLOR_MATRIX_BLUE_SCALE 0x80B6
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE 0x80B7
#define GL_POST_COLOR_MATRIX_RED_BIAS 0x80B8
#define GL_POST_COLOR_MATRIX_GREEN_BIAS 0x80B9
#define GL_POST_COLOR_MATRIX_BLUE_BIAS 0x80BA
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS 0x80BB
#define GL_COLOR_TABLE 0x80D0
#define GL_POST_CONVOLUTION_COLOR_TABLE 0x80D1
#define GL_POST_COLOR_MATRIX_COLOR_TABLE 0x80D2
#define GL_PROXY_COLOR_TABLE 0x80D3
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
#define GL_COLOR_TABLE_SCALE 0x80D6
#define GL_COLOR_TABLE_BIAS 0x80D7
#define GL_COLOR_TABLE_FORMAT 0x80D8
#define GL_COLOR_TABLE_WIDTH 0x80D9
#define GL_COLOR_TABLE_RED_SIZE 0x80DA
#define GL_COLOR_TABLE_GREEN_SIZE 0x80DB
#define GL_COLOR_TABLE_BLUE_SIZE 0x80DC
#define GL_COLOR_TABLE_ALPHA_SIZE 0x80DD
#define GL_COLOR_TABLE_LUMINANCE_SIZE 0x80DE
#define GL_COLOR_TABLE_INTENSITY_SIZE 0x80DF
#define GL_CONSTANT_BORDER 0x8151
#define GL_REPLICATE_BORDER 0x8153
#define GL_CONVOLUTION_BORDER_COLOR 0x8154
typedef void (* fp_glColorTable)(GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glColorTable gladglColorTable;
#define glColorTable gladglColorTable
typedef void (* fp_glColorTableParameterfv)(GLenum, GLenum, const GLfloat*);
extern fp_glColorTableParameterfv gladglColorTableParameterfv;
#define glColorTableParameterfv gladglColorTableParameterfv
typedef void (* fp_glColorTableParameteriv)(GLenum, GLenum, const GLint*);
extern fp_glColorTableParameteriv gladglColorTableParameteriv;
#define glColorTableParameteriv gladglColorTableParameteriv
typedef void (* fp_glCopyColorTable)(GLenum, GLenum, GLint, GLint, GLsizei);
extern fp_glCopyColorTable gladglCopyColorTable;
#define glCopyColorTable gladglCopyColorTable
typedef void (* fp_glGetColorTable)(GLenum, GLenum, GLenum, GLvoid*);
extern fp_glGetColorTable gladglGetColorTable;
#define glGetColorTable gladglGetColorTable
typedef void (* fp_glGetColorTableParameterfv)(GLenum, GLenum, GLfloat*);
extern fp_glGetColorTableParameterfv gladglGetColorTableParameterfv;
#define glGetColorTableParameterfv gladglGetColorTableParameterfv
typedef void (* fp_glGetColorTableParameteriv)(GLenum, GLenum, GLint*);
extern fp_glGetColorTableParameteriv gladglGetColorTableParameteriv;
#define glGetColorTableParameteriv gladglGetColorTableParameteriv
typedef void (* fp_glColorSubTable)(GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glColorSubTable gladglColorSubTable;
#define glColorSubTable gladglColorSubTable
typedef void (* fp_glCopyColorSubTable)(GLenum, GLsizei, GLint, GLint, GLsizei);
extern fp_glCopyColorSubTable gladglCopyColorSubTable;
#define glCopyColorSubTable gladglCopyColorSubTable
typedef void (* fp_glConvolutionFilter1D)(GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glConvolutionFilter1D gladglConvolutionFilter1D;
#define glConvolutionFilter1D gladglConvolutionFilter1D
typedef void (* fp_glConvolutionFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glConvolutionFilter2D gladglConvolutionFilter2D;
#define glConvolutionFilter2D gladglConvolutionFilter2D
typedef void (* fp_glConvolutionParameterf)(GLenum, GLenum, GLfloat);
extern fp_glConvolutionParameterf gladglConvolutionParameterf;
#define glConvolutionParameterf gladglConvolutionParameterf
typedef void (* fp_glConvolutionParameterfv)(GLenum, GLenum, const GLfloat*);
extern fp_glConvolutionParameterfv gladglConvolutionParameterfv;
#define glConvolutionParameterfv gladglConvolutionParameterfv
typedef void (* fp_glConvolutionParameteri)(GLenum, GLenum, GLint);
extern fp_glConvolutionParameteri gladglConvolutionParameteri;
#define glConvolutionParameteri gladglConvolutionParameteri
typedef void (* fp_glConvolutionParameteriv)(GLenum, GLenum, const GLint*);
extern fp_glConvolutionParameteriv gladglConvolutionParameteriv;
#define glConvolutionParameteriv gladglConvolutionParameteriv
typedef void (* fp_glCopyConvolutionFilter1D)(GLenum, GLenum, GLint, GLint, GLsizei);
extern fp_glCopyConvolutionFilter1D gladglCopyConvolutionFilter1D;
#define glCopyConvolutionFilter1D gladglCopyConvolutionFilter1D
typedef void (* fp_glCopyConvolutionFilter2D)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
extern fp_glCopyConvolutionFilter2D gladglCopyConvolutionFilter2D;
#define glCopyConvolutionFilter2D gladglCopyConvolutionFilter2D
typedef void (* fp_glGetConvolutionFilter)(GLenum, GLenum, GLenum, GLvoid*);
extern fp_glGetConvolutionFilter gladglGetConvolutionFilter;
#define glGetConvolutionFilter gladglGetConvolutionFilter
typedef void (* fp_glGetConvolutionParameterfv)(GLenum, GLenum, GLfloat*);
extern fp_glGetConvolutionParameterfv gladglGetConvolutionParameterfv;
#define glGetConvolutionParameterfv gladglGetConvolutionParameterfv
typedef void (* fp_glGetConvolutionParameteriv)(GLenum, GLenum, GLint*);
extern fp_glGetConvolutionParameteriv gladglGetConvolutionParameteriv;
#define glGetConvolutionParameteriv gladglGetConvolutionParameteriv
typedef void (* fp_glGetSeparableFilter)(GLenum, GLenum, GLenum, GLvoid*, GLvoid*, GLvoid*);
extern fp_glGetSeparableFilter gladglGetSeparableFilter;
#define glGetSeparableFilter gladglGetSeparableFilter
typedef void (* fp_glSeparableFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*, const GLvoid*);
extern fp_glSeparableFilter2D gladglSeparableFilter2D;
#define glSeparableFilter2D gladglSeparableFilter2D
typedef void (* fp_glGetHistogram)(GLenum, GLboolean, GLenum, GLenum, GLvoid*);
extern fp_glGetHistogram gladglGetHistogram;
#define glGetHistogram gladglGetHistogram
typedef void (* fp_glGetHistogramParameterfv)(GLenum, GLenum, GLfloat*);
extern fp_glGetHistogramParameterfv gladglGetHistogramParameterfv;
#define glGetHistogramParameterfv gladglGetHistogramParameterfv
typedef void (* fp_glGetHistogramParameteriv)(GLenum, GLenum, GLint*);
extern fp_glGetHistogramParameteriv gladglGetHistogramParameteriv;
#define glGetHistogramParameteriv gladglGetHistogramParameteriv
typedef void (* fp_glGetMinmax)(GLenum, GLboolean, GLenum, GLenum, GLvoid*);
extern fp_glGetMinmax gladglGetMinmax;
#define glGetMinmax gladglGetMinmax
typedef void (* fp_glGetMinmaxParameterfv)(GLenum, GLenum, GLfloat*);
extern fp_glGetMinmaxParameterfv gladglGetMinmaxParameterfv;
#define glGetMinmaxParameterfv gladglGetMinmaxParameterfv
typedef void (* fp_glGetMinmaxParameteriv)(GLenum, GLenum, GLint*);
extern fp_glGetMinmaxParameteriv gladglGetMinmaxParameteriv;
#define glGetMinmaxParameteriv gladglGetMinmaxParameteriv
typedef void (* fp_glHistogram)(GLenum, GLsizei, GLenum, GLboolean);
extern fp_glHistogram gladglHistogram;
#define glHistogram gladglHistogram
typedef void (* fp_glMinmax)(GLenum, GLenum, GLboolean);
extern fp_glMinmax gladglMinmax;
#define glMinmax gladglMinmax
typedef void (* fp_glResetHistogram)(GLenum);
extern fp_glResetHistogram gladglResetHistogram;
#define glResetHistogram gladglResetHistogram
typedef void (* fp_glResetMinmax)(GLenum);
extern fp_glResetMinmax gladglResetMinmax;
#define glResetMinmax gladglResetMinmax
int GL_ARB_draw_buffers_blend;
typedef void (* fp_glBlendEquationiARB)(GLuint, GLenum);
extern fp_glBlendEquationiARB gladglBlendEquationiARB;
#define glBlendEquationiARB gladglBlendEquationiARB
typedef void (* fp_glBlendEquationSeparateiARB)(GLuint, GLenum, GLenum);
extern fp_glBlendEquationSeparateiARB gladglBlendEquationSeparateiARB;
#define glBlendEquationSeparateiARB gladglBlendEquationSeparateiARB
typedef void (* fp_glBlendFunciARB)(GLuint, GLenum, GLenum);
extern fp_glBlendFunciARB gladglBlendFunciARB;
#define glBlendFunciARB gladglBlendFunciARB
typedef void (* fp_glBlendFuncSeparateiARB)(GLuint, GLenum, GLenum, GLenum, GLenum);
extern fp_glBlendFuncSeparateiARB gladglBlendFuncSeparateiARB;
#define glBlendFuncSeparateiARB gladglBlendFuncSeparateiARB
int GL_NV_blend_square;
int GL_AMD_blend_minmax_factor;
#define GL_FACTOR_MIN_AMD 0x901C
#define GL_FACTOR_MAX_AMD 0x901D
int GL_EXT_texture_sRGB_decode;
#define GL_TEXTURE_SRGB_DECODE_EXT 0x8A48
#define GL_DECODE_EXT 0x8A49
#define GL_SKIP_DECODE_EXT 0x8A4A
int GL_ARB_shading_language_420pack;
int GL_ATI_meminfo;
#define GL_VBO_FREE_MEMORY_ATI 0x87FB
#define GL_TEXTURE_FREE_MEMORY_ATI 0x87FC
#define GL_RENDERBUFFER_FREE_MEMORY_ATI 0x87FD
int GL_EXT_abgr;
#define GL_ABGR_EXT 0x8000
int GL_AMD_pinned_memory;
#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD 0x9160
int GL_EXT_texture_snorm;
#define GL_ALPHA_SNORM 0x9010
#define GL_LUMINANCE_SNORM 0x9011
#define GL_LUMINANCE_ALPHA_SNORM 0x9012
#define GL_INTENSITY_SNORM 0x9013
#define GL_ALPHA8_SNORM 0x9014
#define GL_LUMINANCE8_SNORM 0x9015
#define GL_LUMINANCE8_ALPHA8_SNORM 0x9016
#define GL_INTENSITY8_SNORM 0x9017
#define GL_ALPHA16_SNORM 0x9018
#define GL_LUMINANCE16_SNORM 0x9019
#define GL_LUMINANCE16_ALPHA16_SNORM 0x901A
#define GL_INTENSITY16_SNORM 0x901B
#define GL_RED_SNORM 0x8F90
#define GL_RG_SNORM 0x8F91
#define GL_RGB_SNORM 0x8F92
#define GL_RGBA_SNORM 0x8F93
int GL_SGIX_texture_coordinate_clamp;
#define GL_TEXTURE_MAX_CLAMP_S_SGIX 0x8369
#define GL_TEXTURE_MAX_CLAMP_T_SGIX 0x836A
#define GL_TEXTURE_MAX_CLAMP_R_SGIX 0x836B
int GL_ARB_clear_buffer_object;
int GL_ARB_multisample;
#define GL_MULTISAMPLE_ARB 0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE_ARB 0x809F
#define GL_SAMPLE_COVERAGE_ARB 0x80A0
#define GL_SAMPLE_BUFFERS_ARB 0x80A8
#define GL_SAMPLE_COVERAGE_VALUE_ARB 0x80AA
#define GL_SAMPLE_COVERAGE_INVERT_ARB 0x80AB
#define GL_MULTISAMPLE_BIT_ARB 0x20000000
typedef void (* fp_glSampleCoverageARB)(GLfloat, GLboolean);
extern fp_glSampleCoverageARB gladglSampleCoverageARB;
#define glSampleCoverageARB gladglSampleCoverageARB
int GL_ARB_sample_shading;
#define GL_SAMPLE_SHADING_ARB 0x8C36
#define GL_MIN_SAMPLE_SHADING_VALUE_ARB 0x8C37
typedef void (* fp_glMinSampleShadingARB)(GLfloat);
extern fp_glMinSampleShadingARB gladglMinSampleShadingARB;
#define glMinSampleShadingARB gladglMinSampleShadingARB
int GL_INTEL_map_texture;
#define GL_TEXTURE_MEMORY_LAYOUT_INTEL 0x83FF
#define GL_LAYOUT_DEFAULT_INTEL 0
#define GL_LAYOUT_LINEAR_INTEL 1
#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL 2
typedef void (* fp_glSyncTextureINTEL)(GLuint);
extern fp_glSyncTextureINTEL gladglSyncTextureINTEL;
#define glSyncTextureINTEL gladglSyncTextureINTEL
typedef void (* fp_glUnmapTexture2DINTEL)(GLuint, GLint);
extern fp_glUnmapTexture2DINTEL gladglUnmapTexture2DINTEL;
#define glUnmapTexture2DINTEL gladglUnmapTexture2DINTEL
typedef void* (* fp_glMapTexture2DINTEL)(GLuint, GLint, GLbitfield, const GLint*, const GLenum*);
extern fp_glMapTexture2DINTEL gladglMapTexture2DINTEL;
#define glMapTexture2DINTEL gladglMapTexture2DINTEL
int GL_ARB_texture_env_crossbar;
int GL_EXT_422_pixels;
#define GL_422_EXT 0x80CC
#define GL_422_REV_EXT 0x80CD
#define GL_422_AVERAGE_EXT 0x80CE
#define GL_422_REV_AVERAGE_EXT 0x80CF
int GL_ARB_compute_shader;
#define GL_COMPUTE_SHADER_BIT 0x00000020
int GL_EXT_blend_logic_op;
int GL_IBM_cull_vertex;
#define GL_CULL_VERTEX_IBM 103050
int GL_IBM_vertex_array_lists;
#define GL_VERTEX_ARRAY_LIST_IBM 103070
#define GL_NORMAL_ARRAY_LIST_IBM 103071
#define GL_COLOR_ARRAY_LIST_IBM 103072
#define GL_INDEX_ARRAY_LIST_IBM 103073
#define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
typedef void (* fp_glColorPointerListIBM)(GLint, GLenum, GLint, const GLvoid**, GLint);
extern fp_glColorPointerListIBM gladglColorPointerListIBM;
#define glColorPointerListIBM gladglColorPointerListIBM
typedef void (* fp_glSecondaryColorPointerListIBM)(GLint, GLenum, GLint, const GLvoid**, GLint);
extern fp_glSecondaryColorPointerListIBM gladglSecondaryColorPointerListIBM;
#define glSecondaryColorPointerListIBM gladglSecondaryColorPointerListIBM
typedef void (* fp_glEdgeFlagPointerListIBM)(GLint, const GLboolean**, GLint);
extern fp_glEdgeFlagPointerListIBM gladglEdgeFlagPointerListIBM;
#define glEdgeFlagPointerListIBM gladglEdgeFlagPointerListIBM
typedef void (* fp_glFogCoordPointerListIBM)(GLenum, GLint, const GLvoid**, GLint);
extern fp_glFogCoordPointerListIBM gladglFogCoordPointerListIBM;
#define glFogCoordPointerListIBM gladglFogCoordPointerListIBM
typedef void (* fp_glIndexPointerListIBM)(GLenum, GLint, const GLvoid**, GLint);
extern fp_glIndexPointerListIBM gladglIndexPointerListIBM;
#define glIndexPointerListIBM gladglIndexPointerListIBM
typedef void (* fp_glNormalPointerListIBM)(GLenum, GLint, const GLvoid**, GLint);
extern fp_glNormalPointerListIBM gladglNormalPointerListIBM;
#define glNormalPointerListIBM gladglNormalPointerListIBM
typedef void (* fp_glTexCoordPointerListIBM)(GLint, GLenum, GLint, const GLvoid**, GLint);
extern fp_glTexCoordPointerListIBM gladglTexCoordPointerListIBM;
#define glTexCoordPointerListIBM gladglTexCoordPointerListIBM
typedef void (* fp_glVertexPointerListIBM)(GLint, GLenum, GLint, const GLvoid**, GLint);
extern fp_glVertexPointerListIBM gladglVertexPointerListIBM;
#define glVertexPointerListIBM gladglVertexPointerListIBM
int GL_ARB_color_buffer_float;
#define GL_RGBA_FLOAT_MODE_ARB 0x8820
#define GL_CLAMP_VERTEX_COLOR_ARB 0x891A
#define GL_CLAMP_FRAGMENT_COLOR_ARB 0x891B
#define GL_CLAMP_READ_COLOR_ARB 0x891C
#define GL_FIXED_ONLY_ARB 0x891D
typedef void (* fp_glClampColorARB)(GLenum, GLenum);
extern fp_glClampColorARB gladglClampColorARB;
#define glClampColorARB gladglClampColorARB
int GL_ARB_bindless_texture;
#define GL_UNSIGNED_INT64_ARB 0x140F
typedef GLuint64 (* fp_glGetTextureHandleARB)(GLuint);
extern fp_glGetTextureHandleARB gladglGetTextureHandleARB;
#define glGetTextureHandleARB gladglGetTextureHandleARB
typedef GLuint64 (* fp_glGetTextureSamplerHandleARB)(GLuint, GLuint);
extern fp_glGetTextureSamplerHandleARB gladglGetTextureSamplerHandleARB;
#define glGetTextureSamplerHandleARB gladglGetTextureSamplerHandleARB
typedef void (* fp_glMakeTextureHandleResidentARB)(GLuint64);
extern fp_glMakeTextureHandleResidentARB gladglMakeTextureHandleResidentARB;
#define glMakeTextureHandleResidentARB gladglMakeTextureHandleResidentARB
typedef void (* fp_glMakeTextureHandleNonResidentARB)(GLuint64);
extern fp_glMakeTextureHandleNonResidentARB gladglMakeTextureHandleNonResidentARB;
#define glMakeTextureHandleNonResidentARB gladglMakeTextureHandleNonResidentARB
typedef GLuint64 (* fp_glGetImageHandleARB)(GLuint, GLint, GLboolean, GLint, GLenum);
extern fp_glGetImageHandleARB gladglGetImageHandleARB;
#define glGetImageHandleARB gladglGetImageHandleARB
typedef void (* fp_glMakeImageHandleResidentARB)(GLuint64, GLenum);
extern fp_glMakeImageHandleResidentARB gladglMakeImageHandleResidentARB;
#define glMakeImageHandleResidentARB gladglMakeImageHandleResidentARB
typedef void (* fp_glMakeImageHandleNonResidentARB)(GLuint64);
extern fp_glMakeImageHandleNonResidentARB gladglMakeImageHandleNonResidentARB;
#define glMakeImageHandleNonResidentARB gladglMakeImageHandleNonResidentARB
typedef void (* fp_glUniformHandleui64ARB)(GLint, GLuint64);
extern fp_glUniformHandleui64ARB gladglUniformHandleui64ARB;
#define glUniformHandleui64ARB gladglUniformHandleui64ARB
typedef void (* fp_glUniformHandleui64vARB)(GLint, GLsizei, const GLuint64*);
extern fp_glUniformHandleui64vARB gladglUniformHandleui64vARB;
#define glUniformHandleui64vARB gladglUniformHandleui64vARB
typedef void (* fp_glProgramUniformHandleui64ARB)(GLuint, GLint, GLuint64);
extern fp_glProgramUniformHandleui64ARB gladglProgramUniformHandleui64ARB;
#define glProgramUniformHandleui64ARB gladglProgramUniformHandleui64ARB
typedef void (* fp_glProgramUniformHandleui64vARB)(GLuint, GLint, GLsizei, const GLuint64*);
extern fp_glProgramUniformHandleui64vARB gladglProgramUniformHandleui64vARB;
#define glProgramUniformHandleui64vARB gladglProgramUniformHandleui64vARB
typedef GLboolean (* fp_glIsTextureHandleResidentARB)(GLuint64);
extern fp_glIsTextureHandleResidentARB gladglIsTextureHandleResidentARB;
#define glIsTextureHandleResidentARB gladglIsTextureHandleResidentARB
typedef GLboolean (* fp_glIsImageHandleResidentARB)(GLuint64);
extern fp_glIsImageHandleResidentARB gladglIsImageHandleResidentARB;
#define glIsImageHandleResidentARB gladglIsImageHandleResidentARB
typedef void (* fp_glVertexAttribL1ui64ARB)(GLuint, GLuint64EXT);
extern fp_glVertexAttribL1ui64ARB gladglVertexAttribL1ui64ARB;
#define glVertexAttribL1ui64ARB gladglVertexAttribL1ui64ARB
typedef void (* fp_glVertexAttribL1ui64vARB)(GLuint, const GLuint64EXT*);
extern fp_glVertexAttribL1ui64vARB gladglVertexAttribL1ui64vARB;
#define glVertexAttribL1ui64vARB gladglVertexAttribL1ui64vARB
typedef void (* fp_glGetVertexAttribLui64vARB)(GLuint, GLenum, GLuint64EXT*);
extern fp_glGetVertexAttribLui64vARB gladglGetVertexAttribLui64vARB;
#define glGetVertexAttribLui64vARB gladglGetVertexAttribLui64vARB
int GL_ARB_window_pos;
typedef void (* fp_glWindowPos2dARB)(GLdouble, GLdouble);
extern fp_glWindowPos2dARB gladglWindowPos2dARB;
#define glWindowPos2dARB gladglWindowPos2dARB
typedef void (* fp_glWindowPos2dvARB)(const GLdouble*);
extern fp_glWindowPos2dvARB gladglWindowPos2dvARB;
#define glWindowPos2dvARB gladglWindowPos2dvARB
typedef void (* fp_glWindowPos2fARB)(GLfloat, GLfloat);
extern fp_glWindowPos2fARB gladglWindowPos2fARB;
#define glWindowPos2fARB gladglWindowPos2fARB
typedef void (* fp_glWindowPos2fvARB)(const GLfloat*);
extern fp_glWindowPos2fvARB gladglWindowPos2fvARB;
#define glWindowPos2fvARB gladglWindowPos2fvARB
typedef void (* fp_glWindowPos2iARB)(GLint, GLint);
extern fp_glWindowPos2iARB gladglWindowPos2iARB;
#define glWindowPos2iARB gladglWindowPos2iARB
typedef void (* fp_glWindowPos2ivARB)(const GLint*);
extern fp_glWindowPos2ivARB gladglWindowPos2ivARB;
#define glWindowPos2ivARB gladglWindowPos2ivARB
typedef void (* fp_glWindowPos2sARB)(GLshort, GLshort);
extern fp_glWindowPos2sARB gladglWindowPos2sARB;
#define glWindowPos2sARB gladglWindowPos2sARB
typedef void (* fp_glWindowPos2svARB)(const GLshort*);
extern fp_glWindowPos2svARB gladglWindowPos2svARB;
#define glWindowPos2svARB gladglWindowPos2svARB
typedef void (* fp_glWindowPos3dARB)(GLdouble, GLdouble, GLdouble);
extern fp_glWindowPos3dARB gladglWindowPos3dARB;
#define glWindowPos3dARB gladglWindowPos3dARB
typedef void (* fp_glWindowPos3dvARB)(const GLdouble*);
extern fp_glWindowPos3dvARB gladglWindowPos3dvARB;
#define glWindowPos3dvARB gladglWindowPos3dvARB
typedef void (* fp_glWindowPos3fARB)(GLfloat, GLfloat, GLfloat);
extern fp_glWindowPos3fARB gladglWindowPos3fARB;
#define glWindowPos3fARB gladglWindowPos3fARB
typedef void (* fp_glWindowPos3fvARB)(const GLfloat*);
extern fp_glWindowPos3fvARB gladglWindowPos3fvARB;
#define glWindowPos3fvARB gladglWindowPos3fvARB
typedef void (* fp_glWindowPos3iARB)(GLint, GLint, GLint);
extern fp_glWindowPos3iARB gladglWindowPos3iARB;
#define glWindowPos3iARB gladglWindowPos3iARB
typedef void (* fp_glWindowPos3ivARB)(const GLint*);
extern fp_glWindowPos3ivARB gladglWindowPos3ivARB;
#define glWindowPos3ivARB gladglWindowPos3ivARB
typedef void (* fp_glWindowPos3sARB)(GLshort, GLshort, GLshort);
extern fp_glWindowPos3sARB gladglWindowPos3sARB;
#define glWindowPos3sARB gladglWindowPos3sARB
typedef void (* fp_glWindowPos3svARB)(const GLshort*);
extern fp_glWindowPos3svARB gladglWindowPos3svARB;
#define glWindowPos3svARB gladglWindowPos3svARB
int GL_ARB_internalformat_query;
typedef void (* fp_glGetInternalformativ)(GLenum, GLenum, GLenum, GLsizei, GLint*);
extern fp_glGetInternalformativ gladglGetInternalformativ;
#define glGetInternalformativ gladglGetInternalformativ
int GL_ARB_shadow;
#define GL_TEXTURE_COMPARE_MODE_ARB 0x884C
#define GL_TEXTURE_COMPARE_FUNC_ARB 0x884D
#define GL_COMPARE_R_TO_TEXTURE_ARB 0x884E
int GL_ARB_texture_mirrored_repeat;
#define GL_MIRRORED_REPEAT_ARB 0x8370
int GL_EXT_shader_image_load_store;
#define GL_MAX_IMAGE_UNITS_EXT 0x8F38
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT 0x8F39
#define GL_IMAGE_BINDING_NAME_EXT 0x8F3A
#define GL_IMAGE_BINDING_LEVEL_EXT 0x8F3B
#define GL_IMAGE_BINDING_LAYERED_EXT 0x8F3C
#define GL_IMAGE_BINDING_LAYER_EXT 0x8F3D
#define GL_IMAGE_BINDING_ACCESS_EXT 0x8F3E
#define GL_IMAGE_1D_EXT 0x904C
#define GL_IMAGE_2D_EXT 0x904D
#define GL_IMAGE_3D_EXT 0x904E
#define GL_IMAGE_2D_RECT_EXT 0x904F
#define GL_IMAGE_CUBE_EXT 0x9050
#define GL_IMAGE_BUFFER_EXT 0x9051
#define GL_IMAGE_1D_ARRAY_EXT 0x9052
#define GL_IMAGE_2D_ARRAY_EXT 0x9053
#define GL_IMAGE_CUBE_MAP_ARRAY_EXT 0x9054
#define GL_IMAGE_2D_MULTISAMPLE_EXT 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9056
#define GL_INT_IMAGE_1D_EXT 0x9057
#define GL_INT_IMAGE_2D_EXT 0x9058
#define GL_INT_IMAGE_3D_EXT 0x9059
#define GL_INT_IMAGE_2D_RECT_EXT 0x905A
#define GL_INT_IMAGE_CUBE_EXT 0x905B
#define GL_INT_IMAGE_BUFFER_EXT 0x905C
#define GL_INT_IMAGE_1D_ARRAY_EXT 0x905D
#define GL_INT_IMAGE_2D_ARRAY_EXT 0x905E
#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x905F
#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9061
#define GL_UNSIGNED_INT_IMAGE_1D_EXT 0x9062
#define GL_UNSIGNED_INT_IMAGE_2D_EXT 0x9063
#define GL_UNSIGNED_INT_IMAGE_3D_EXT 0x9064
#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT 0x9065
#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT 0x9066
#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT 0x9067
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT 0x9068
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT 0x9069
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x906A
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x906C
#define GL_MAX_IMAGE_SAMPLES_EXT 0x906D
#define GL_IMAGE_BINDING_FORMAT_EXT 0x906E
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT 0x00000001
#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT 0x00000002
#define GL_UNIFORM_BARRIER_BIT_EXT 0x00000004
#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT 0x00000008
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT 0x00000020
#define GL_COMMAND_BARRIER_BIT_EXT 0x00000040
#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT 0x00000080
#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT 0x00000100
#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT 0x00000200
#define GL_FRAMEBUFFER_BARRIER_BIT_EXT 0x00000400
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT 0x00000800
#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT 0x00001000
#define GL_ALL_BARRIER_BITS_EXT 0xFFFFFFFF
typedef void (* fp_glBindImageTextureEXT)(GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLint);
extern fp_glBindImageTextureEXT gladglBindImageTextureEXT;
#define glBindImageTextureEXT gladglBindImageTextureEXT
typedef void (* fp_glMemoryBarrierEXT)(GLbitfield);
extern fp_glMemoryBarrierEXT gladglMemoryBarrierEXT;
#define glMemoryBarrierEXT gladglMemoryBarrierEXT
int GL_EXT_copy_texture;
typedef void (* fp_glCopyTexImage1DEXT)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
extern fp_glCopyTexImage1DEXT gladglCopyTexImage1DEXT;
#define glCopyTexImage1DEXT gladglCopyTexImage1DEXT
typedef void (* fp_glCopyTexImage2DEXT)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
extern fp_glCopyTexImage2DEXT gladglCopyTexImage2DEXT;
#define glCopyTexImage2DEXT gladglCopyTexImage2DEXT
typedef void (* fp_glCopyTexSubImage1DEXT)(GLenum, GLint, GLint, GLint, GLint, GLsizei);
extern fp_glCopyTexSubImage1DEXT gladglCopyTexSubImage1DEXT;
#define glCopyTexSubImage1DEXT gladglCopyTexSubImage1DEXT
typedef void (* fp_glCopyTexSubImage2DEXT)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
extern fp_glCopyTexSubImage2DEXT gladglCopyTexSubImage2DEXT;
#define glCopyTexSubImage2DEXT gladglCopyTexSubImage2DEXT
typedef void (* fp_glCopyTexSubImage3DEXT)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
extern fp_glCopyTexSubImage3DEXT gladglCopyTexSubImage3DEXT;
#define glCopyTexSubImage3DEXT gladglCopyTexSubImage3DEXT
int GL_NV_register_combiners2;
#define GL_PER_STAGE_CONSTANTS_NV 0x8535
typedef void (* fp_glCombinerStageParameterfvNV)(GLenum, GLenum, const GLfloat*);
extern fp_glCombinerStageParameterfvNV gladglCombinerStageParameterfvNV;
#define glCombinerStageParameterfvNV gladglCombinerStageParameterfvNV
typedef void (* fp_glGetCombinerStageParameterfvNV)(GLenum, GLenum, GLfloat*);
extern fp_glGetCombinerStageParameterfvNV gladglGetCombinerStageParameterfvNV;
#define glGetCombinerStageParameterfvNV gladglGetCombinerStageParameterfvNV
int GL_SGIX_ir_instrument1;
#define GL_IR_INSTRUMENT1_SGIX 0x817F
int GL_NV_draw_texture;
typedef void (* fp_glDrawTextureNV)(GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glDrawTextureNV gladglDrawTextureNV;
#define glDrawTextureNV gladglDrawTextureNV
int GL_EXT_texture_shared_exponent;
#define GL_RGB9_E5_EXT 0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT 0x8C3E
#define GL_TEXTURE_SHARED_SIZE_EXT 0x8C3F
int GL_EXT_draw_instanced;
typedef void (* fp_glDrawArraysInstancedEXT)(GLenum, GLint, GLsizei, GLsizei);
extern fp_glDrawArraysInstancedEXT gladglDrawArraysInstancedEXT;
#define glDrawArraysInstancedEXT gladglDrawArraysInstancedEXT
typedef void (* fp_glDrawElementsInstancedEXT)(GLenum, GLsizei, GLenum, const GLvoid*, GLsizei);
extern fp_glDrawElementsInstancedEXT gladglDrawElementsInstancedEXT;
#define glDrawElementsInstancedEXT gladglDrawElementsInstancedEXT
int GL_NV_copy_depth_to_color;
#define GL_DEPTH_STENCIL_TO_RGBA_NV 0x886E
#define GL_DEPTH_STENCIL_TO_BGRA_NV 0x886F
int GL_ARB_viewport_array;
int GL_ARB_separate_shader_objects;
int GL_EXT_depth_bounds_test;
#define GL_DEPTH_BOUNDS_TEST_EXT 0x8890
#define GL_DEPTH_BOUNDS_EXT 0x8891
typedef void (* fp_glDepthBoundsEXT)(GLclampd, GLclampd);
extern fp_glDepthBoundsEXT gladglDepthBoundsEXT;
#define glDepthBoundsEXT gladglDepthBoundsEXT
int GL_HP_image_transform;
#define GL_IMAGE_SCALE_X_HP 0x8155
#define GL_IMAGE_SCALE_Y_HP 0x8156
#define GL_IMAGE_TRANSLATE_X_HP 0x8157
#define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#define GL_IMAGE_MAG_FILTER_HP 0x815C
#define GL_IMAGE_MIN_FILTER_HP 0x815D
#define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#define GL_CUBIC_HP 0x815F
#define GL_AVERAGE_HP 0x8160
#define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
typedef void (* fp_glImageTransformParameteriHP)(GLenum, GLenum, GLint);
extern fp_glImageTransformParameteriHP gladglImageTransformParameteriHP;
#define glImageTransformParameteriHP gladglImageTransformParameteriHP
typedef void (* fp_glImageTransformParameterfHP)(GLenum, GLenum, GLfloat);
extern fp_glImageTransformParameterfHP gladglImageTransformParameterfHP;
#define glImageTransformParameterfHP gladglImageTransformParameterfHP
typedef void (* fp_glImageTransformParameterivHP)(GLenum, GLenum, const GLint*);
extern fp_glImageTransformParameterivHP gladglImageTransformParameterivHP;
#define glImageTransformParameterivHP gladglImageTransformParameterivHP
typedef void (* fp_glImageTransformParameterfvHP)(GLenum, GLenum, const GLfloat*);
extern fp_glImageTransformParameterfvHP gladglImageTransformParameterfvHP;
#define glImageTransformParameterfvHP gladglImageTransformParameterfvHP
typedef void (* fp_glGetImageTransformParameterivHP)(GLenum, GLenum, GLint*);
extern fp_glGetImageTransformParameterivHP gladglGetImageTransformParameterivHP;
#define glGetImageTransformParameterivHP gladglGetImageTransformParameterivHP
typedef void (* fp_glGetImageTransformParameterfvHP)(GLenum, GLenum, GLfloat*);
extern fp_glGetImageTransformParameterfvHP gladglGetImageTransformParameterfvHP;
#define glGetImageTransformParameterfvHP gladglGetImageTransformParameterfvHP
int GL_ARB_texture_env_add;
int GL_NV_video_capture;
#define GL_VIDEO_BUFFER_NV 0x9020
#define GL_VIDEO_BUFFER_BINDING_NV 0x9021
#define GL_FIELD_UPPER_NV 0x9022
#define GL_FIELD_LOWER_NV 0x9023
#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV 0x9024
#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV 0x9025
#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV 0x9026
#define GL_LAST_VIDEO_CAPTURE_STATUS_NV 0x9027
#define GL_VIDEO_BUFFER_PITCH_NV 0x9028
#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV 0x9029
#define GL_VIDEO_COLOR_CONVERSION_MAX_NV 0x902A
#define GL_VIDEO_COLOR_CONVERSION_MIN_NV 0x902B
#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV 0x902C
#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV 0x902D
#define GL_PARTIAL_SUCCESS_NV 0x902E
#define GL_SUCCESS_NV 0x902F
#define GL_FAILURE_NV 0x9030
#define GL_YCBYCR8_422_NV 0x9031
#define GL_YCBAYCR8A_4224_NV 0x9032
#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV 0x9033
#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV 0x9034
#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV 0x9035
#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV 0x9036
#define GL_Z4Y12Z4CB12Z4CR12_444_NV 0x9037
#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV 0x9038
#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV 0x9039
#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV 0x903A
#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV 0x903B
#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV 0x903C
typedef void (* fp_glBeginVideoCaptureNV)(GLuint);
extern fp_glBeginVideoCaptureNV gladglBeginVideoCaptureNV;
#define glBeginVideoCaptureNV gladglBeginVideoCaptureNV
typedef void (* fp_glBindVideoCaptureStreamBufferNV)(GLuint, GLuint, GLenum, GLintptrARB);
extern fp_glBindVideoCaptureStreamBufferNV gladglBindVideoCaptureStreamBufferNV;
#define glBindVideoCaptureStreamBufferNV gladglBindVideoCaptureStreamBufferNV
typedef void (* fp_glBindVideoCaptureStreamTextureNV)(GLuint, GLuint, GLenum, GLenum, GLuint);
extern fp_glBindVideoCaptureStreamTextureNV gladglBindVideoCaptureStreamTextureNV;
#define glBindVideoCaptureStreamTextureNV gladglBindVideoCaptureStreamTextureNV
typedef void (* fp_glEndVideoCaptureNV)(GLuint);
extern fp_glEndVideoCaptureNV gladglEndVideoCaptureNV;
#define glEndVideoCaptureNV gladglEndVideoCaptureNV
typedef void (* fp_glGetVideoCaptureivNV)(GLuint, GLenum, GLint*);
extern fp_glGetVideoCaptureivNV gladglGetVideoCaptureivNV;
#define glGetVideoCaptureivNV gladglGetVideoCaptureivNV
typedef void (* fp_glGetVideoCaptureStreamivNV)(GLuint, GLuint, GLenum, GLint*);
extern fp_glGetVideoCaptureStreamivNV gladglGetVideoCaptureStreamivNV;
#define glGetVideoCaptureStreamivNV gladglGetVideoCaptureStreamivNV
typedef void (* fp_glGetVideoCaptureStreamfvNV)(GLuint, GLuint, GLenum, GLfloat*);
extern fp_glGetVideoCaptureStreamfvNV gladglGetVideoCaptureStreamfvNV;
#define glGetVideoCaptureStreamfvNV gladglGetVideoCaptureStreamfvNV
typedef void (* fp_glGetVideoCaptureStreamdvNV)(GLuint, GLuint, GLenum, GLdouble*);
extern fp_glGetVideoCaptureStreamdvNV gladglGetVideoCaptureStreamdvNV;
#define glGetVideoCaptureStreamdvNV gladglGetVideoCaptureStreamdvNV
typedef GLenum (* fp_glVideoCaptureNV)(GLuint, GLuint*, GLuint64EXT*);
extern fp_glVideoCaptureNV gladglVideoCaptureNV;
#define glVideoCaptureNV gladglVideoCaptureNV
typedef void (* fp_glVideoCaptureStreamParameterivNV)(GLuint, GLuint, GLenum, const GLint*);
extern fp_glVideoCaptureStreamParameterivNV gladglVideoCaptureStreamParameterivNV;
#define glVideoCaptureStreamParameterivNV gladglVideoCaptureStreamParameterivNV
typedef void (* fp_glVideoCaptureStreamParameterfvNV)(GLuint, GLuint, GLenum, const GLfloat*);
extern fp_glVideoCaptureStreamParameterfvNV gladglVideoCaptureStreamParameterfvNV;
#define glVideoCaptureStreamParameterfvNV gladglVideoCaptureStreamParameterfvNV
typedef void (* fp_glVideoCaptureStreamParameterdvNV)(GLuint, GLuint, GLenum, const GLdouble*);
extern fp_glVideoCaptureStreamParameterdvNV gladglVideoCaptureStreamParameterdvNV;
#define glVideoCaptureStreamParameterdvNV gladglVideoCaptureStreamParameterdvNV
int GL_ARB_sampler_objects;
int GL_ARB_matrix_palette;
#define GL_MATRIX_PALETTE_ARB 0x8840
#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
typedef void (* fp_glCurrentPaletteMatrixARB)(GLint);
extern fp_glCurrentPaletteMatrixARB gladglCurrentPaletteMatrixARB;
#define glCurrentPaletteMatrixARB gladglCurrentPaletteMatrixARB
typedef void (* fp_glMatrixIndexubvARB)(GLint, const GLubyte*);
extern fp_glMatrixIndexubvARB gladglMatrixIndexubvARB;
#define glMatrixIndexubvARB gladglMatrixIndexubvARB
typedef void (* fp_glMatrixIndexusvARB)(GLint, const GLushort*);
extern fp_glMatrixIndexusvARB gladglMatrixIndexusvARB;
#define glMatrixIndexusvARB gladglMatrixIndexusvARB
typedef void (* fp_glMatrixIndexuivARB)(GLint, const GLuint*);
extern fp_glMatrixIndexuivARB gladglMatrixIndexuivARB;
#define glMatrixIndexuivARB gladglMatrixIndexuivARB
typedef void (* fp_glMatrixIndexPointerARB)(GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glMatrixIndexPointerARB gladglMatrixIndexPointerARB;
#define glMatrixIndexPointerARB gladglMatrixIndexPointerARB
int GL_SGIS_texture_color_mask;
#define GL_TEXTURE_COLOR_WRITEMASK_SGIS 0x81EF
typedef void (* fp_glTextureColorMaskSGIS)(GLboolean, GLboolean, GLboolean, GLboolean);
extern fp_glTextureColorMaskSGIS gladglTextureColorMaskSGIS;
#define glTextureColorMaskSGIS gladglTextureColorMaskSGIS
int GL_EXT_packed_pixels;
#define GL_UNSIGNED_BYTE_3_3_2_EXT 0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4_EXT 0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1_EXT 0x8034
#define GL_UNSIGNED_INT_8_8_8_8_EXT 0x8035
#define GL_UNSIGNED_INT_10_10_10_2_EXT 0x8036
int GL_ARB_texture_compression;
#define GL_COMPRESSED_ALPHA_ARB 0x84E9
#define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#define GL_COMPRESSED_RGB_ARB 0x84ED
#define GL_COMPRESSED_RGBA_ARB 0x84EE
#define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
typedef void (* fp_glCompressedTexImage3DARB)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid*);
extern fp_glCompressedTexImage3DARB gladglCompressedTexImage3DARB;
#define glCompressedTexImage3DARB gladglCompressedTexImage3DARB
typedef void (* fp_glCompressedTexImage2DARB)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid*);
extern fp_glCompressedTexImage2DARB gladglCompressedTexImage2DARB;
#define glCompressedTexImage2DARB gladglCompressedTexImage2DARB
typedef void (* fp_glCompressedTexImage1DARB)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const GLvoid*);
extern fp_glCompressedTexImage1DARB gladglCompressedTexImage1DARB;
#define glCompressedTexImage1DARB gladglCompressedTexImage1DARB
typedef void (* fp_glCompressedTexSubImage3DARB)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid*);
extern fp_glCompressedTexSubImage3DARB gladglCompressedTexSubImage3DARB;
#define glCompressedTexSubImage3DARB gladglCompressedTexSubImage3DARB
typedef void (* fp_glCompressedTexSubImage2DARB)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid*);
extern fp_glCompressedTexSubImage2DARB gladglCompressedTexSubImage2DARB;
#define glCompressedTexSubImage2DARB gladglCompressedTexSubImage2DARB
typedef void (* fp_glCompressedTexSubImage1DARB)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid*);
extern fp_glCompressedTexSubImage1DARB gladglCompressedTexSubImage1DARB;
#define glCompressedTexSubImage1DARB gladglCompressedTexSubImage1DARB
typedef void (* fp_glGetCompressedTexImageARB)(GLenum, GLint, GLvoid*);
extern fp_glGetCompressedTexImageARB gladglGetCompressedTexImageARB;
#define glGetCompressedTexImageARB gladglGetCompressedTexImageARB
int GL_APPLE_aux_depth_stencil;
#define GL_AUX_DEPTH_STENCIL_APPLE 0x8A14
int GL_ARB_shader_subroutine;
int GL_EXT_framebuffer_sRGB;
#define GL_FRAMEBUFFER_SRGB_EXT 0x8DB9
#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT 0x8DBA
int GL_ARB_texture_storage_multisample;
int GL_EXT_vertex_attrib_64bit;
#define GL_DOUBLE_VEC2_EXT 0x8FFC
#define GL_DOUBLE_VEC3_EXT 0x8FFD
#define GL_DOUBLE_VEC4_EXT 0x8FFE
#define GL_DOUBLE_MAT2_EXT 0x8F46
#define GL_DOUBLE_MAT3_EXT 0x8F47
#define GL_DOUBLE_MAT4_EXT 0x8F48
#define GL_DOUBLE_MAT2x3_EXT 0x8F49
#define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#define GL_DOUBLE_MAT4x3_EXT 0x8F4E
typedef void (* fp_glVertexAttribL1dEXT)(GLuint, GLdouble);
extern fp_glVertexAttribL1dEXT gladglVertexAttribL1dEXT;
#define glVertexAttribL1dEXT gladglVertexAttribL1dEXT
typedef void (* fp_glVertexAttribL2dEXT)(GLuint, GLdouble, GLdouble);
extern fp_glVertexAttribL2dEXT gladglVertexAttribL2dEXT;
#define glVertexAttribL2dEXT gladglVertexAttribL2dEXT
typedef void (* fp_glVertexAttribL3dEXT)(GLuint, GLdouble, GLdouble, GLdouble);
extern fp_glVertexAttribL3dEXT gladglVertexAttribL3dEXT;
#define glVertexAttribL3dEXT gladglVertexAttribL3dEXT
typedef void (* fp_glVertexAttribL4dEXT)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glVertexAttribL4dEXT gladglVertexAttribL4dEXT;
#define glVertexAttribL4dEXT gladglVertexAttribL4dEXT
typedef void (* fp_glVertexAttribL1dvEXT)(GLuint, const GLdouble*);
extern fp_glVertexAttribL1dvEXT gladglVertexAttribL1dvEXT;
#define glVertexAttribL1dvEXT gladglVertexAttribL1dvEXT
typedef void (* fp_glVertexAttribL2dvEXT)(GLuint, const GLdouble*);
extern fp_glVertexAttribL2dvEXT gladglVertexAttribL2dvEXT;
#define glVertexAttribL2dvEXT gladglVertexAttribL2dvEXT
typedef void (* fp_glVertexAttribL3dvEXT)(GLuint, const GLdouble*);
extern fp_glVertexAttribL3dvEXT gladglVertexAttribL3dvEXT;
#define glVertexAttribL3dvEXT gladglVertexAttribL3dvEXT
typedef void (* fp_glVertexAttribL4dvEXT)(GLuint, const GLdouble*);
extern fp_glVertexAttribL4dvEXT gladglVertexAttribL4dvEXT;
#define glVertexAttribL4dvEXT gladglVertexAttribL4dvEXT
typedef void (* fp_glVertexAttribLPointerEXT)(GLuint, GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glVertexAttribLPointerEXT gladglVertexAttribLPointerEXT;
#define glVertexAttribLPointerEXT gladglVertexAttribLPointerEXT
typedef void (* fp_glGetVertexAttribLdvEXT)(GLuint, GLenum, GLdouble*);
extern fp_glGetVertexAttribLdvEXT gladglGetVertexAttribLdvEXT;
#define glGetVertexAttribLdvEXT gladglGetVertexAttribLdvEXT
int GL_ARB_depth_texture;
#define GL_DEPTH_COMPONENT16_ARB 0x81A5
#define GL_DEPTH_COMPONENT24_ARB 0x81A6
#define GL_DEPTH_COMPONENT32_ARB 0x81A7
#define GL_TEXTURE_DEPTH_SIZE_ARB 0x884A
#define GL_DEPTH_TEXTURE_MODE_ARB 0x884B
int GL_NV_shader_buffer_store;
#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV 0x00000010
int GL_OES_query_matrix;
typedef GLbitfield (* fp_glQueryMatrixxOES)(GLfixed*, GLint*);
extern fp_glQueryMatrixxOES gladglQueryMatrixxOES;
#define glQueryMatrixxOES gladglQueryMatrixxOES
int GL_APPLE_texture_range;
#define GL_TEXTURE_RANGE_LENGTH_APPLE 0x85B7
#define GL_TEXTURE_RANGE_POINTER_APPLE 0x85B8
#define GL_TEXTURE_STORAGE_HINT_APPLE 0x85BC
#define GL_STORAGE_PRIVATE_APPLE 0x85BD
#define GL_STORAGE_CACHED_APPLE 0x85BE
#define GL_STORAGE_SHARED_APPLE 0x85BF
typedef void (* fp_glTextureRangeAPPLE)(GLenum, GLsizei, const GLvoid*);
extern fp_glTextureRangeAPPLE gladglTextureRangeAPPLE;
#define glTextureRangeAPPLE gladglTextureRangeAPPLE
typedef void (* fp_glGetTexParameterPointervAPPLE)(GLenum, GLenum, GLvoid**);
extern fp_glGetTexParameterPointervAPPLE gladglGetTexParameterPointervAPPLE;
#define glGetTexParameterPointervAPPLE gladglGetTexParameterPointervAPPLE
int GL_NV_shader_storage_buffer_object;
int GL_ARB_texture_query_lod;
int GL_ARB_copy_buffer;
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
int GL_ARB_shader_image_size;
int GL_NV_shader_atomic_counters;
int GL_APPLE_object_purgeable;
#define GL_BUFFER_OBJECT_APPLE 0x85B3
#define GL_RELEASED_APPLE 0x8A19
#define GL_VOLATILE_APPLE 0x8A1A
#define GL_RETAINED_APPLE 0x8A1B
#define GL_UNDEFINED_APPLE 0x8A1C
#define GL_PURGEABLE_APPLE 0x8A1D
typedef GLenum (* fp_glObjectPurgeableAPPLE)(GLenum, GLuint, GLenum);
extern fp_glObjectPurgeableAPPLE gladglObjectPurgeableAPPLE;
#define glObjectPurgeableAPPLE gladglObjectPurgeableAPPLE
typedef GLenum (* fp_glObjectUnpurgeableAPPLE)(GLenum, GLuint, GLenum);
extern fp_glObjectUnpurgeableAPPLE gladglObjectUnpurgeableAPPLE;
#define glObjectUnpurgeableAPPLE gladglObjectUnpurgeableAPPLE
typedef void (* fp_glGetObjectParameterivAPPLE)(GLenum, GLuint, GLenum, GLint*);
extern fp_glGetObjectParameterivAPPLE gladglGetObjectParameterivAPPLE;
#define glGetObjectParameterivAPPLE gladglGetObjectParameterivAPPLE
int GL_ARB_occlusion_query;
#define GL_QUERY_COUNTER_BITS_ARB 0x8864
#define GL_CURRENT_QUERY_ARB 0x8865
#define GL_QUERY_RESULT_ARB 0x8866
#define GL_QUERY_RESULT_AVAILABLE_ARB 0x8867
#define GL_SAMPLES_PASSED_ARB 0x8914
typedef void (* fp_glGenQueriesARB)(GLsizei, GLuint*);
extern fp_glGenQueriesARB gladglGenQueriesARB;
#define glGenQueriesARB gladglGenQueriesARB
typedef void (* fp_glDeleteQueriesARB)(GLsizei, const GLuint*);
extern fp_glDeleteQueriesARB gladglDeleteQueriesARB;
#define glDeleteQueriesARB gladglDeleteQueriesARB
typedef GLboolean (* fp_glIsQueryARB)(GLuint);
extern fp_glIsQueryARB gladglIsQueryARB;
#define glIsQueryARB gladglIsQueryARB
typedef void (* fp_glBeginQueryARB)(GLenum, GLuint);
extern fp_glBeginQueryARB gladglBeginQueryARB;
#define glBeginQueryARB gladglBeginQueryARB
typedef void (* fp_glEndQueryARB)(GLenum);
extern fp_glEndQueryARB gladglEndQueryARB;
#define glEndQueryARB gladglEndQueryARB
typedef void (* fp_glGetQueryivARB)(GLenum, GLenum, GLint*);
extern fp_glGetQueryivARB gladglGetQueryivARB;
#define glGetQueryivARB gladglGetQueryivARB
typedef void (* fp_glGetQueryObjectivARB)(GLuint, GLenum, GLint*);
extern fp_glGetQueryObjectivARB gladglGetQueryObjectivARB;
#define glGetQueryObjectivARB gladglGetQueryObjectivARB
typedef void (* fp_glGetQueryObjectuivARB)(GLuint, GLenum, GLuint*);
extern fp_glGetQueryObjectuivARB gladglGetQueryObjectuivARB;
#define glGetQueryObjectuivARB gladglGetQueryObjectuivARB
int GL_INGR_color_clamp;
#define GL_RED_MIN_CLAMP_INGR 0x8560
#define GL_GREEN_MIN_CLAMP_INGR 0x8561
#define GL_BLUE_MIN_CLAMP_INGR 0x8562
#define GL_ALPHA_MIN_CLAMP_INGR 0x8563
#define GL_RED_MAX_CLAMP_INGR 0x8564
#define GL_GREEN_MAX_CLAMP_INGR 0x8565
#define GL_BLUE_MAX_CLAMP_INGR 0x8566
#define GL_ALPHA_MAX_CLAMP_INGR 0x8567
int GL_SGI_color_table;
#define GL_COLOR_TABLE_SGI 0x80D0
#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D1
#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D2
#define GL_PROXY_COLOR_TABLE_SGI 0x80D3
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D4
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D5
#define GL_COLOR_TABLE_SCALE_SGI 0x80D6
#define GL_COLOR_TABLE_BIAS_SGI 0x80D7
#define GL_COLOR_TABLE_FORMAT_SGI 0x80D8
#define GL_COLOR_TABLE_WIDTH_SGI 0x80D9
#define GL_COLOR_TABLE_RED_SIZE_SGI 0x80DA
#define GL_COLOR_TABLE_GREEN_SIZE_SGI 0x80DB
#define GL_COLOR_TABLE_BLUE_SIZE_SGI 0x80DC
#define GL_COLOR_TABLE_ALPHA_SIZE_SGI 0x80DD
#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE
#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF
typedef void (* fp_glColorTableSGI)(GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glColorTableSGI gladglColorTableSGI;
#define glColorTableSGI gladglColorTableSGI
typedef void (* fp_glColorTableParameterfvSGI)(GLenum, GLenum, const GLfloat*);
extern fp_glColorTableParameterfvSGI gladglColorTableParameterfvSGI;
#define glColorTableParameterfvSGI gladglColorTableParameterfvSGI
typedef void (* fp_glColorTableParameterivSGI)(GLenum, GLenum, const GLint*);
extern fp_glColorTableParameterivSGI gladglColorTableParameterivSGI;
#define glColorTableParameterivSGI gladglColorTableParameterivSGI
typedef void (* fp_glCopyColorTableSGI)(GLenum, GLenum, GLint, GLint, GLsizei);
extern fp_glCopyColorTableSGI gladglCopyColorTableSGI;
#define glCopyColorTableSGI gladglCopyColorTableSGI
typedef void (* fp_glGetColorTableSGI)(GLenum, GLenum, GLenum, GLvoid*);
extern fp_glGetColorTableSGI gladglGetColorTableSGI;
#define glGetColorTableSGI gladglGetColorTableSGI
typedef void (* fp_glGetColorTableParameterfvSGI)(GLenum, GLenum, GLfloat*);
extern fp_glGetColorTableParameterfvSGI gladglGetColorTableParameterfvSGI;
#define glGetColorTableParameterfvSGI gladglGetColorTableParameterfvSGI
typedef void (* fp_glGetColorTableParameterivSGI)(GLenum, GLenum, GLint*);
extern fp_glGetColorTableParameterivSGI gladglGetColorTableParameterivSGI;
#define glGetColorTableParameterivSGI gladglGetColorTableParameterivSGI
int GL_NV_gpu_program5_mem_extended;
int GL_ARB_texture_cube_map_array;
#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB 0x9009
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB 0x900A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB 0x900B
#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB 0x900D
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900E
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900F
int GL_SGIX_scalebias_hint;
#define GL_SCALEBIAS_HINT_SGIX 0x8322
int GL_EXT_gpu_shader4;
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT 0x88FD
#define GL_SAMPLER_1D_ARRAY_EXT 0x8DC0
#define GL_SAMPLER_2D_ARRAY_EXT 0x8DC1
#define GL_SAMPLER_BUFFER_EXT 0x8DC2
#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT 0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT 0x8DC4
#define GL_SAMPLER_CUBE_SHADOW_EXT 0x8DC5
#define GL_UNSIGNED_INT_VEC2_EXT 0x8DC6
#define GL_UNSIGNED_INT_VEC3_EXT 0x8DC7
#define GL_UNSIGNED_INT_VEC4_EXT 0x8DC8
#define GL_INT_SAMPLER_1D_EXT 0x8DC9
#define GL_INT_SAMPLER_2D_EXT 0x8DCA
#define GL_INT_SAMPLER_3D_EXT 0x8DCB
#define GL_INT_SAMPLER_CUBE_EXT 0x8DCC
#define GL_INT_SAMPLER_2D_RECT_EXT 0x8DCD
#define GL_INT_SAMPLER_1D_ARRAY_EXT 0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY_EXT 0x8DCF
#define GL_INT_SAMPLER_BUFFER_EXT 0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_1D_EXT 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D_EXT 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D_EXT 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
#define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT 0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT 0x8905
typedef void (* fp_glGetUniformuivEXT)(GLuint, GLint, GLuint*);
extern fp_glGetUniformuivEXT gladglGetUniformuivEXT;
#define glGetUniformuivEXT gladglGetUniformuivEXT
typedef void (* fp_glBindFragDataLocationEXT)(GLuint, GLuint, const GLchar*);
extern fp_glBindFragDataLocationEXT gladglBindFragDataLocationEXT;
#define glBindFragDataLocationEXT gladglBindFragDataLocationEXT
typedef GLint (* fp_glGetFragDataLocationEXT)(GLuint, const GLchar*);
extern fp_glGetFragDataLocationEXT gladglGetFragDataLocationEXT;
#define glGetFragDataLocationEXT gladglGetFragDataLocationEXT
typedef void (* fp_glUniform1uiEXT)(GLint, GLuint);
extern fp_glUniform1uiEXT gladglUniform1uiEXT;
#define glUniform1uiEXT gladglUniform1uiEXT
typedef void (* fp_glUniform2uiEXT)(GLint, GLuint, GLuint);
extern fp_glUniform2uiEXT gladglUniform2uiEXT;
#define glUniform2uiEXT gladglUniform2uiEXT
typedef void (* fp_glUniform3uiEXT)(GLint, GLuint, GLuint, GLuint);
extern fp_glUniform3uiEXT gladglUniform3uiEXT;
#define glUniform3uiEXT gladglUniform3uiEXT
typedef void (* fp_glUniform4uiEXT)(GLint, GLuint, GLuint, GLuint, GLuint);
extern fp_glUniform4uiEXT gladglUniform4uiEXT;
#define glUniform4uiEXT gladglUniform4uiEXT
typedef void (* fp_glUniform1uivEXT)(GLint, GLsizei, const GLuint*);
extern fp_glUniform1uivEXT gladglUniform1uivEXT;
#define glUniform1uivEXT gladglUniform1uivEXT
typedef void (* fp_glUniform2uivEXT)(GLint, GLsizei, const GLuint*);
extern fp_glUniform2uivEXT gladglUniform2uivEXT;
#define glUniform2uivEXT gladglUniform2uivEXT
typedef void (* fp_glUniform3uivEXT)(GLint, GLsizei, const GLuint*);
extern fp_glUniform3uivEXT gladglUniform3uivEXT;
#define glUniform3uivEXT gladglUniform3uivEXT
typedef void (* fp_glUniform4uivEXT)(GLint, GLsizei, const GLuint*);
extern fp_glUniform4uivEXT gladglUniform4uivEXT;
#define glUniform4uivEXT gladglUniform4uivEXT
int GL_NV_geometry_program4;
#define GL_GEOMETRY_PROGRAM_NV 0x8C26
#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV 0x8C27
#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV 0x8C28
typedef void (* fp_glProgramVertexLimitNV)(GLenum, GLint);
extern fp_glProgramVertexLimitNV gladglProgramVertexLimitNV;
#define glProgramVertexLimitNV gladglProgramVertexLimitNV
typedef void (* fp_glFramebufferTextureEXT)(GLenum, GLenum, GLuint, GLint);
extern fp_glFramebufferTextureEXT gladglFramebufferTextureEXT;
#define glFramebufferTextureEXT gladglFramebufferTextureEXT
typedef void (* fp_glFramebufferTextureLayerEXT)(GLenum, GLenum, GLuint, GLint, GLint);
extern fp_glFramebufferTextureLayerEXT gladglFramebufferTextureLayerEXT;
#define glFramebufferTextureLayerEXT gladglFramebufferTextureLayerEXT
typedef void (* fp_glFramebufferTextureFaceEXT)(GLenum, GLenum, GLuint, GLint, GLenum);
extern fp_glFramebufferTextureFaceEXT gladglFramebufferTextureFaceEXT;
#define glFramebufferTextureFaceEXT gladglFramebufferTextureFaceEXT
int GL_EXT_framebuffer_multisample_blit_scaled;
#define GL_SCALED_RESOLVE_FASTEST_EXT 0x90BA
#define GL_SCALED_RESOLVE_NICEST_EXT 0x90BB
int GL_AMD_debug_output;
#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
typedef void (* fp_glDebugMessageEnableAMD)(GLenum, GLenum, GLsizei, const GLuint*, GLboolean);
extern fp_glDebugMessageEnableAMD gladglDebugMessageEnableAMD;
#define glDebugMessageEnableAMD gladglDebugMessageEnableAMD
typedef void (* fp_glDebugMessageInsertAMD)(GLenum, GLenum, GLuint, GLsizei, const GLchar*);
extern fp_glDebugMessageInsertAMD gladglDebugMessageInsertAMD;
#define glDebugMessageInsertAMD gladglDebugMessageInsertAMD
typedef void (* fp_glDebugMessageCallbackAMD)(GLDEBUGPROCAMD, void*);
extern fp_glDebugMessageCallbackAMD gladglDebugMessageCallbackAMD;
#define glDebugMessageCallbackAMD gladglDebugMessageCallbackAMD
typedef GLuint (* fp_glGetDebugMessageLogAMD)(GLuint, GLsizei, GLenum*, GLuint*, GLuint*, GLsizei*, GLchar*);
extern fp_glGetDebugMessageLogAMD gladglGetDebugMessageLogAMD;
#define glGetDebugMessageLogAMD gladglGetDebugMessageLogAMD
int GL_ARB_texture_border_clamp;
#define GL_CLAMP_TO_BORDER_ARB 0x812D
int GL_ARB_fragment_coord_conventions;
int GL_ARB_multitexture;
#define GL_TEXTURE0_ARB 0x84C0
#define GL_TEXTURE1_ARB 0x84C1
#define GL_TEXTURE2_ARB 0x84C2
#define GL_TEXTURE3_ARB 0x84C3
#define GL_TEXTURE4_ARB 0x84C4
#define GL_TEXTURE5_ARB 0x84C5
#define GL_TEXTURE6_ARB 0x84C6
#define GL_TEXTURE7_ARB 0x84C7
#define GL_TEXTURE8_ARB 0x84C8
#define GL_TEXTURE9_ARB 0x84C9
#define GL_TEXTURE10_ARB 0x84CA
#define GL_TEXTURE11_ARB 0x84CB
#define GL_TEXTURE12_ARB 0x84CC
#define GL_TEXTURE13_ARB 0x84CD
#define GL_TEXTURE14_ARB 0x84CE
#define GL_TEXTURE15_ARB 0x84CF
#define GL_TEXTURE16_ARB 0x84D0
#define GL_TEXTURE17_ARB 0x84D1
#define GL_TEXTURE18_ARB 0x84D2
#define GL_TEXTURE19_ARB 0x84D3
#define GL_TEXTURE20_ARB 0x84D4
#define GL_TEXTURE21_ARB 0x84D5
#define GL_TEXTURE22_ARB 0x84D6
#define GL_TEXTURE23_ARB 0x84D7
#define GL_TEXTURE24_ARB 0x84D8
#define GL_TEXTURE25_ARB 0x84D9
#define GL_TEXTURE26_ARB 0x84DA
#define GL_TEXTURE27_ARB 0x84DB
#define GL_TEXTURE28_ARB 0x84DC
#define GL_TEXTURE29_ARB 0x84DD
#define GL_TEXTURE30_ARB 0x84DE
#define GL_TEXTURE31_ARB 0x84DF
#define GL_ACTIVE_TEXTURE_ARB 0x84E0
#define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
typedef void (* fp_glActiveTextureARB)(GLenum);
extern fp_glActiveTextureARB gladglActiveTextureARB;
#define glActiveTextureARB gladglActiveTextureARB
typedef void (* fp_glClientActiveTextureARB)(GLenum);
extern fp_glClientActiveTextureARB gladglClientActiveTextureARB;
#define glClientActiveTextureARB gladglClientActiveTextureARB
typedef void (* fp_glMultiTexCoord1dARB)(GLenum, GLdouble);
extern fp_glMultiTexCoord1dARB gladglMultiTexCoord1dARB;
#define glMultiTexCoord1dARB gladglMultiTexCoord1dARB
typedef void (* fp_glMultiTexCoord1dvARB)(GLenum, const GLdouble*);
extern fp_glMultiTexCoord1dvARB gladglMultiTexCoord1dvARB;
#define glMultiTexCoord1dvARB gladglMultiTexCoord1dvARB
typedef void (* fp_glMultiTexCoord1fARB)(GLenum, GLfloat);
extern fp_glMultiTexCoord1fARB gladglMultiTexCoord1fARB;
#define glMultiTexCoord1fARB gladglMultiTexCoord1fARB
typedef void (* fp_glMultiTexCoord1fvARB)(GLenum, const GLfloat*);
extern fp_glMultiTexCoord1fvARB gladglMultiTexCoord1fvARB;
#define glMultiTexCoord1fvARB gladglMultiTexCoord1fvARB
typedef void (* fp_glMultiTexCoord1iARB)(GLenum, GLint);
extern fp_glMultiTexCoord1iARB gladglMultiTexCoord1iARB;
#define glMultiTexCoord1iARB gladglMultiTexCoord1iARB
typedef void (* fp_glMultiTexCoord1ivARB)(GLenum, const GLint*);
extern fp_glMultiTexCoord1ivARB gladglMultiTexCoord1ivARB;
#define glMultiTexCoord1ivARB gladglMultiTexCoord1ivARB
typedef void (* fp_glMultiTexCoord1sARB)(GLenum, GLshort);
extern fp_glMultiTexCoord1sARB gladglMultiTexCoord1sARB;
#define glMultiTexCoord1sARB gladglMultiTexCoord1sARB
typedef void (* fp_glMultiTexCoord1svARB)(GLenum, const GLshort*);
extern fp_glMultiTexCoord1svARB gladglMultiTexCoord1svARB;
#define glMultiTexCoord1svARB gladglMultiTexCoord1svARB
typedef void (* fp_glMultiTexCoord2dARB)(GLenum, GLdouble, GLdouble);
extern fp_glMultiTexCoord2dARB gladglMultiTexCoord2dARB;
#define glMultiTexCoord2dARB gladglMultiTexCoord2dARB
typedef void (* fp_glMultiTexCoord2dvARB)(GLenum, const GLdouble*);
extern fp_glMultiTexCoord2dvARB gladglMultiTexCoord2dvARB;
#define glMultiTexCoord2dvARB gladglMultiTexCoord2dvARB
typedef void (* fp_glMultiTexCoord2fARB)(GLenum, GLfloat, GLfloat);
extern fp_glMultiTexCoord2fARB gladglMultiTexCoord2fARB;
#define glMultiTexCoord2fARB gladglMultiTexCoord2fARB
typedef void (* fp_glMultiTexCoord2fvARB)(GLenum, const GLfloat*);
extern fp_glMultiTexCoord2fvARB gladglMultiTexCoord2fvARB;
#define glMultiTexCoord2fvARB gladglMultiTexCoord2fvARB
typedef void (* fp_glMultiTexCoord2iARB)(GLenum, GLint, GLint);
extern fp_glMultiTexCoord2iARB gladglMultiTexCoord2iARB;
#define glMultiTexCoord2iARB gladglMultiTexCoord2iARB
typedef void (* fp_glMultiTexCoord2ivARB)(GLenum, const GLint*);
extern fp_glMultiTexCoord2ivARB gladglMultiTexCoord2ivARB;
#define glMultiTexCoord2ivARB gladglMultiTexCoord2ivARB
typedef void (* fp_glMultiTexCoord2sARB)(GLenum, GLshort, GLshort);
extern fp_glMultiTexCoord2sARB gladglMultiTexCoord2sARB;
#define glMultiTexCoord2sARB gladglMultiTexCoord2sARB
typedef void (* fp_glMultiTexCoord2svARB)(GLenum, const GLshort*);
extern fp_glMultiTexCoord2svARB gladglMultiTexCoord2svARB;
#define glMultiTexCoord2svARB gladglMultiTexCoord2svARB
typedef void (* fp_glMultiTexCoord3dARB)(GLenum, GLdouble, GLdouble, GLdouble);
extern fp_glMultiTexCoord3dARB gladglMultiTexCoord3dARB;
#define glMultiTexCoord3dARB gladglMultiTexCoord3dARB
typedef void (* fp_glMultiTexCoord3dvARB)(GLenum, const GLdouble*);
extern fp_glMultiTexCoord3dvARB gladglMultiTexCoord3dvARB;
#define glMultiTexCoord3dvARB gladglMultiTexCoord3dvARB
typedef void (* fp_glMultiTexCoord3fARB)(GLenum, GLfloat, GLfloat, GLfloat);
extern fp_glMultiTexCoord3fARB gladglMultiTexCoord3fARB;
#define glMultiTexCoord3fARB gladglMultiTexCoord3fARB
typedef void (* fp_glMultiTexCoord3fvARB)(GLenum, const GLfloat*);
extern fp_glMultiTexCoord3fvARB gladglMultiTexCoord3fvARB;
#define glMultiTexCoord3fvARB gladglMultiTexCoord3fvARB
typedef void (* fp_glMultiTexCoord3iARB)(GLenum, GLint, GLint, GLint);
extern fp_glMultiTexCoord3iARB gladglMultiTexCoord3iARB;
#define glMultiTexCoord3iARB gladglMultiTexCoord3iARB
typedef void (* fp_glMultiTexCoord3ivARB)(GLenum, const GLint*);
extern fp_glMultiTexCoord3ivARB gladglMultiTexCoord3ivARB;
#define glMultiTexCoord3ivARB gladglMultiTexCoord3ivARB
typedef void (* fp_glMultiTexCoord3sARB)(GLenum, GLshort, GLshort, GLshort);
extern fp_glMultiTexCoord3sARB gladglMultiTexCoord3sARB;
#define glMultiTexCoord3sARB gladglMultiTexCoord3sARB
typedef void (* fp_glMultiTexCoord3svARB)(GLenum, const GLshort*);
extern fp_glMultiTexCoord3svARB gladglMultiTexCoord3svARB;
#define glMultiTexCoord3svARB gladglMultiTexCoord3svARB
typedef void (* fp_glMultiTexCoord4dARB)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glMultiTexCoord4dARB gladglMultiTexCoord4dARB;
#define glMultiTexCoord4dARB gladglMultiTexCoord4dARB
typedef void (* fp_glMultiTexCoord4dvARB)(GLenum, const GLdouble*);
extern fp_glMultiTexCoord4dvARB gladglMultiTexCoord4dvARB;
#define glMultiTexCoord4dvARB gladglMultiTexCoord4dvARB
typedef void (* fp_glMultiTexCoord4fARB)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glMultiTexCoord4fARB gladglMultiTexCoord4fARB;
#define glMultiTexCoord4fARB gladglMultiTexCoord4fARB
typedef void (* fp_glMultiTexCoord4fvARB)(GLenum, const GLfloat*);
extern fp_glMultiTexCoord4fvARB gladglMultiTexCoord4fvARB;
#define glMultiTexCoord4fvARB gladglMultiTexCoord4fvARB
typedef void (* fp_glMultiTexCoord4iARB)(GLenum, GLint, GLint, GLint, GLint);
extern fp_glMultiTexCoord4iARB gladglMultiTexCoord4iARB;
#define glMultiTexCoord4iARB gladglMultiTexCoord4iARB
typedef void (* fp_glMultiTexCoord4ivARB)(GLenum, const GLint*);
extern fp_glMultiTexCoord4ivARB gladglMultiTexCoord4ivARB;
#define glMultiTexCoord4ivARB gladglMultiTexCoord4ivARB
typedef void (* fp_glMultiTexCoord4sARB)(GLenum, GLshort, GLshort, GLshort, GLshort);
extern fp_glMultiTexCoord4sARB gladglMultiTexCoord4sARB;
#define glMultiTexCoord4sARB gladglMultiTexCoord4sARB
typedef void (* fp_glMultiTexCoord4svARB)(GLenum, const GLshort*);
extern fp_glMultiTexCoord4svARB gladglMultiTexCoord4svARB;
#define glMultiTexCoord4svARB gladglMultiTexCoord4svARB
int GL_SGIX_polynomial_ffd;
#define GL_TEXTURE_DEFORMATION_BIT_SGIX 0x00000001
#define GL_GEOMETRY_DEFORMATION_BIT_SGIX 0x00000002
#define GL_GEOMETRY_DEFORMATION_SGIX 0x8194
#define GL_TEXTURE_DEFORMATION_SGIX 0x8195
#define GL_DEFORMATIONS_MASK_SGIX 0x8196
#define GL_MAX_DEFORMATION_ORDER_SGIX 0x8197
typedef void (* fp_glDeformationMap3dSGIX)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, const GLdouble*);
extern fp_glDeformationMap3dSGIX gladglDeformationMap3dSGIX;
#define glDeformationMap3dSGIX gladglDeformationMap3dSGIX
typedef void (* fp_glDeformationMap3fSGIX)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, const GLfloat*);
extern fp_glDeformationMap3fSGIX gladglDeformationMap3fSGIX;
#define glDeformationMap3fSGIX gladglDeformationMap3fSGIX
typedef void (* fp_glDeformSGIX)(GLbitfield);
extern fp_glDeformSGIX gladglDeformSGIX;
#define glDeformSGIX gladglDeformSGIX
typedef void (* fp_glLoadIdentityDeformationMapSGIX)(GLbitfield);
extern fp_glLoadIdentityDeformationMapSGIX gladglLoadIdentityDeformationMapSGIX;
#define glLoadIdentityDeformationMapSGIX gladglLoadIdentityDeformationMapSGIX
int GL_EXT_provoking_vertex;
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT 0x8E4C
#define GL_FIRST_VERTEX_CONVENTION_EXT 0x8E4D
#define GL_LAST_VERTEX_CONVENTION_EXT 0x8E4E
#define GL_PROVOKING_VERTEX_EXT 0x8E4F
typedef void (* fp_glProvokingVertexEXT)(GLenum);
extern fp_glProvokingVertexEXT gladglProvokingVertexEXT;
#define glProvokingVertexEXT gladglProvokingVertexEXT
int GL_ARB_point_parameters;
#define GL_POINT_SIZE_MIN_ARB 0x8126
#define GL_POINT_SIZE_MAX_ARB 0x8127
#define GL_POINT_FADE_THRESHOLD_SIZE_ARB 0x8128
#define GL_POINT_DISTANCE_ATTENUATION_ARB 0x8129
typedef void (* fp_glPointParameterfARB)(GLenum, GLfloat);
extern fp_glPointParameterfARB gladglPointParameterfARB;
#define glPointParameterfARB gladglPointParameterfARB
typedef void (* fp_glPointParameterfvARB)(GLenum, const GLfloat*);
extern fp_glPointParameterfvARB gladglPointParameterfvARB;
#define glPointParameterfvARB gladglPointParameterfvARB
int GL_ARB_shader_image_load_store;
int GL_HP_occlusion_test;
#define GL_OCCLUSION_TEST_HP 0x8165
#define GL_OCCLUSION_TEST_RESULT_HP 0x8166
int GL_ARB_ES3_compatibility;
int GL_SGIX_framezoom;
#define GL_FRAMEZOOM_SGIX 0x818B
#define GL_FRAMEZOOM_FACTOR_SGIX 0x818C
#define GL_MAX_FRAMEZOOM_FACTOR_SGIX 0x818D
typedef void (* fp_glFrameZoomSGIX)(GLint);
extern fp_glFrameZoomSGIX gladglFrameZoomSGIX;
#define glFrameZoomSGIX gladglFrameZoomSGIX
int GL_ARB_texture_buffer_object_rgb32;
int GL_NV_bindless_multi_draw_indirect;
typedef void (* fp_glMultiDrawArraysIndirectBindlessNV)(GLenum, const GLvoid*, GLsizei, GLsizei, GLint);
extern fp_glMultiDrawArraysIndirectBindlessNV gladglMultiDrawArraysIndirectBindlessNV;
#define glMultiDrawArraysIndirectBindlessNV gladglMultiDrawArraysIndirectBindlessNV
typedef void (* fp_glMultiDrawElementsIndirectBindlessNV)(GLenum, GLenum, const GLvoid*, GLsizei, GLsizei, GLint);
extern fp_glMultiDrawElementsIndirectBindlessNV gladglMultiDrawElementsIndirectBindlessNV;
#define glMultiDrawElementsIndirectBindlessNV gladglMultiDrawElementsIndirectBindlessNV
int GL_SGIX_texture_multi_buffer;
#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX 0x812E
int GL_EXT_transform_feedback;
#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT 0x8C8F
#define GL_INTERLEAVED_ATTRIBS_EXT 0x8C8C
#define GL_SEPARATE_ATTRIBS_EXT 0x8C8D
#define GL_PRIMITIVES_GENERATED_EXT 0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT 0x8C88
#define GL_RASTERIZER_DISCARD_EXT 0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT 0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT 0x8C7F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT 0x8C76
typedef void (* fp_glBeginTransformFeedbackEXT)(GLenum);
extern fp_glBeginTransformFeedbackEXT gladglBeginTransformFeedbackEXT;
#define glBeginTransformFeedbackEXT gladglBeginTransformFeedbackEXT
typedef void (* fp_glEndTransformFeedbackEXT)();
extern fp_glEndTransformFeedbackEXT gladglEndTransformFeedbackEXT;
#define glEndTransformFeedbackEXT gladglEndTransformFeedbackEXT
typedef void (* fp_glBindBufferRangeEXT)(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr);
extern fp_glBindBufferRangeEXT gladglBindBufferRangeEXT;
#define glBindBufferRangeEXT gladglBindBufferRangeEXT
typedef void (* fp_glBindBufferOffsetEXT)(GLenum, GLuint, GLuint, GLintptr);
extern fp_glBindBufferOffsetEXT gladglBindBufferOffsetEXT;
#define glBindBufferOffsetEXT gladglBindBufferOffsetEXT
typedef void (* fp_glBindBufferBaseEXT)(GLenum, GLuint, GLuint);
extern fp_glBindBufferBaseEXT gladglBindBufferBaseEXT;
#define glBindBufferBaseEXT gladglBindBufferBaseEXT
typedef void (* fp_glTransformFeedbackVaryingsEXT)(GLuint, GLsizei, const GLchar**, GLenum);
extern fp_glTransformFeedbackVaryingsEXT gladglTransformFeedbackVaryingsEXT;
#define glTransformFeedbackVaryingsEXT gladglTransformFeedbackVaryingsEXT
typedef void (* fp_glGetTransformFeedbackVaryingEXT)(GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*);
extern fp_glGetTransformFeedbackVaryingEXT gladglGetTransformFeedbackVaryingEXT;
#define glGetTransformFeedbackVaryingEXT gladglGetTransformFeedbackVaryingEXT
int GL_KHR_texture_compression_astc_ldr;
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR 0x93B0
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR 0x93B1
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR 0x93B2
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR 0x93B3
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR 0x93B4
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR 0x93B5
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR 0x93B6
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR 0x93B7
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR 0x93B8
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR 0x93B9
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR 0x93BA
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD
int GL_3DFX_multisample;
#define GL_MULTISAMPLE_3DFX 0x86B2
#define GL_SAMPLE_BUFFERS_3DFX 0x86B3
#define GL_SAMPLES_3DFX 0x86B4
#define GL_MULTISAMPLE_BIT_3DFX 0x20000000
int GL_ARB_texture_env_dot3;
#define GL_DOT3_RGB_ARB 0x86AE
#define GL_DOT3_RGBA_ARB 0x86AF
int GL_NV_gpu_program4;
#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV 0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV 0x8905
#define GL_PROGRAM_ATTRIB_COMPONENTS_NV 0x8906
#define GL_PROGRAM_RESULT_COMPONENTS_NV 0x8907
#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV 0x8908
#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV 0x8909
#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV 0x8DA5
#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV 0x8DA6
typedef void (* fp_glProgramLocalParameterI4iNV)(GLenum, GLuint, GLint, GLint, GLint, GLint);
extern fp_glProgramLocalParameterI4iNV gladglProgramLocalParameterI4iNV;
#define glProgramLocalParameterI4iNV gladglProgramLocalParameterI4iNV
typedef void (* fp_glProgramLocalParameterI4ivNV)(GLenum, GLuint, const GLint*);
extern fp_glProgramLocalParameterI4ivNV gladglProgramLocalParameterI4ivNV;
#define glProgramLocalParameterI4ivNV gladglProgramLocalParameterI4ivNV
typedef void (* fp_glProgramLocalParametersI4ivNV)(GLenum, GLuint, GLsizei, const GLint*);
extern fp_glProgramLocalParametersI4ivNV gladglProgramLocalParametersI4ivNV;
#define glProgramLocalParametersI4ivNV gladglProgramLocalParametersI4ivNV
typedef void (* fp_glProgramLocalParameterI4uiNV)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint);
extern fp_glProgramLocalParameterI4uiNV gladglProgramLocalParameterI4uiNV;
#define glProgramLocalParameterI4uiNV gladglProgramLocalParameterI4uiNV
typedef void (* fp_glProgramLocalParameterI4uivNV)(GLenum, GLuint, const GLuint*);
extern fp_glProgramLocalParameterI4uivNV gladglProgramLocalParameterI4uivNV;
#define glProgramLocalParameterI4uivNV gladglProgramLocalParameterI4uivNV
typedef void (* fp_glProgramLocalParametersI4uivNV)(GLenum, GLuint, GLsizei, const GLuint*);
extern fp_glProgramLocalParametersI4uivNV gladglProgramLocalParametersI4uivNV;
#define glProgramLocalParametersI4uivNV gladglProgramLocalParametersI4uivNV
typedef void (* fp_glProgramEnvParameterI4iNV)(GLenum, GLuint, GLint, GLint, GLint, GLint);
extern fp_glProgramEnvParameterI4iNV gladglProgramEnvParameterI4iNV;
#define glProgramEnvParameterI4iNV gladglProgramEnvParameterI4iNV
typedef void (* fp_glProgramEnvParameterI4ivNV)(GLenum, GLuint, const GLint*);
extern fp_glProgramEnvParameterI4ivNV gladglProgramEnvParameterI4ivNV;
#define glProgramEnvParameterI4ivNV gladglProgramEnvParameterI4ivNV
typedef void (* fp_glProgramEnvParametersI4ivNV)(GLenum, GLuint, GLsizei, const GLint*);
extern fp_glProgramEnvParametersI4ivNV gladglProgramEnvParametersI4ivNV;
#define glProgramEnvParametersI4ivNV gladglProgramEnvParametersI4ivNV
typedef void (* fp_glProgramEnvParameterI4uiNV)(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint);
extern fp_glProgramEnvParameterI4uiNV gladglProgramEnvParameterI4uiNV;
#define glProgramEnvParameterI4uiNV gladglProgramEnvParameterI4uiNV
typedef void (* fp_glProgramEnvParameterI4uivNV)(GLenum, GLuint, const GLuint*);
extern fp_glProgramEnvParameterI4uivNV gladglProgramEnvParameterI4uivNV;
#define glProgramEnvParameterI4uivNV gladglProgramEnvParameterI4uivNV
typedef void (* fp_glProgramEnvParametersI4uivNV)(GLenum, GLuint, GLsizei, const GLuint*);
extern fp_glProgramEnvParametersI4uivNV gladglProgramEnvParametersI4uivNV;
#define glProgramEnvParametersI4uivNV gladglProgramEnvParametersI4uivNV
typedef void (* fp_glGetProgramLocalParameterIivNV)(GLenum, GLuint, GLint*);
extern fp_glGetProgramLocalParameterIivNV gladglGetProgramLocalParameterIivNV;
#define glGetProgramLocalParameterIivNV gladglGetProgramLocalParameterIivNV
typedef void (* fp_glGetProgramLocalParameterIuivNV)(GLenum, GLuint, GLuint*);
extern fp_glGetProgramLocalParameterIuivNV gladglGetProgramLocalParameterIuivNV;
#define glGetProgramLocalParameterIuivNV gladglGetProgramLocalParameterIuivNV
typedef void (* fp_glGetProgramEnvParameterIivNV)(GLenum, GLuint, GLint*);
extern fp_glGetProgramEnvParameterIivNV gladglGetProgramEnvParameterIivNV;
#define glGetProgramEnvParameterIivNV gladglGetProgramEnvParameterIivNV
typedef void (* fp_glGetProgramEnvParameterIuivNV)(GLenum, GLuint, GLuint*);
extern fp_glGetProgramEnvParameterIuivNV gladglGetProgramEnvParameterIuivNV;
#define glGetProgramEnvParameterIuivNV gladglGetProgramEnvParameterIuivNV
int GL_NV_gpu_program5;
#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV 0x8E5A
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5B
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5C
#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV 0x8E5D
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5F
#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV 0x8F44
#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV 0x8F45
typedef void (* fp_glProgramSubroutineParametersuivNV)(GLenum, GLsizei, const GLuint*);
extern fp_glProgramSubroutineParametersuivNV gladglProgramSubroutineParametersuivNV;
#define glProgramSubroutineParametersuivNV gladglProgramSubroutineParametersuivNV
typedef void (* fp_glGetProgramSubroutineParameteruivNV)(GLenum, GLuint, GLuint*);
extern fp_glGetProgramSubroutineParameteruivNV gladglGetProgramSubroutineParameteruivNV;
#define glGetProgramSubroutineParameteruivNV gladglGetProgramSubroutineParameteruivNV
int GL_NV_float_buffer;
#define GL_FLOAT_R_NV 0x8880
#define GL_FLOAT_RG_NV 0x8881
#define GL_FLOAT_RGB_NV 0x8882
#define GL_FLOAT_RGBA_NV 0x8883
#define GL_FLOAT_R16_NV 0x8884
#define GL_FLOAT_R32_NV 0x8885
#define GL_FLOAT_RG16_NV 0x8886
#define GL_FLOAT_RG32_NV 0x8887
#define GL_FLOAT_RGB16_NV 0x8888
#define GL_FLOAT_RGB32_NV 0x8889
#define GL_FLOAT_RGBA16_NV 0x888A
#define GL_FLOAT_RGBA32_NV 0x888B
#define GL_TEXTURE_FLOAT_COMPONENTS_NV 0x888C
#define GL_FLOAT_CLEAR_COLOR_VALUE_NV 0x888D
#define GL_FLOAT_RGBA_MODE_NV 0x888E
int GL_SGIS_texture_edge_clamp;
#define GL_CLAMP_TO_EDGE_SGIS 0x812F
int GL_ARB_framebuffer_sRGB;
int GL_SUN_slice_accum;
#define GL_SLICE_ACCUM_SUN 0x85CC
int GL_EXT_index_texture;
int GL_ARB_geometry_shader4;
#define GL_LINES_ADJACENCY_ARB 0x000A
#define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#define GL_GEOMETRY_SHADER_ARB 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
typedef void (* fp_glProgramParameteriARB)(GLuint, GLenum, GLint);
extern fp_glProgramParameteriARB gladglProgramParameteriARB;
#define glProgramParameteriARB gladglProgramParameteriARB
typedef void (* fp_glFramebufferTextureARB)(GLenum, GLenum, GLuint, GLint);
extern fp_glFramebufferTextureARB gladglFramebufferTextureARB;
#define glFramebufferTextureARB gladglFramebufferTextureARB
typedef void (* fp_glFramebufferTextureLayerARB)(GLenum, GLenum, GLuint, GLint, GLint);
extern fp_glFramebufferTextureLayerARB gladglFramebufferTextureLayerARB;
#define glFramebufferTextureLayerARB gladglFramebufferTextureLayerARB
typedef void (* fp_glFramebufferTextureFaceARB)(GLenum, GLenum, GLuint, GLint, GLenum);
extern fp_glFramebufferTextureFaceARB gladglFramebufferTextureFaceARB;
#define glFramebufferTextureFaceARB gladglFramebufferTextureFaceARB
int GL_EXT_separate_specular_color;
#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT 0x81F8
#define GL_SINGLE_COLOR_EXT 0x81F9
#define GL_SEPARATE_SPECULAR_COLOR_EXT 0x81FA
int GL_AMD_depth_clamp_separate;
#define GL_DEPTH_CLAMP_NEAR_AMD 0x901E
#define GL_DEPTH_CLAMP_FAR_AMD 0x901F
int GL_SUN_convolution_border_modes;
#define GL_WRAP_BORDER_SUN 0x81D4
int GL_SGIX_sprite;
#define GL_SPRITE_SGIX 0x8148
#define GL_SPRITE_MODE_SGIX 0x8149
#define GL_SPRITE_AXIS_SGIX 0x814A
#define GL_SPRITE_TRANSLATION_SGIX 0x814B
#define GL_SPRITE_AXIAL_SGIX 0x814C
#define GL_SPRITE_OBJECT_ALIGNED_SGIX 0x814D
#define GL_SPRITE_EYE_ALIGNED_SGIX 0x814E
typedef void (* fp_glSpriteParameterfSGIX)(GLenum, GLfloat);
extern fp_glSpriteParameterfSGIX gladglSpriteParameterfSGIX;
#define glSpriteParameterfSGIX gladglSpriteParameterfSGIX
typedef void (* fp_glSpriteParameterfvSGIX)(GLenum, const GLfloat*);
extern fp_glSpriteParameterfvSGIX gladglSpriteParameterfvSGIX;
#define glSpriteParameterfvSGIX gladglSpriteParameterfvSGIX
typedef void (* fp_glSpriteParameteriSGIX)(GLenum, GLint);
extern fp_glSpriteParameteriSGIX gladglSpriteParameteriSGIX;
#define glSpriteParameteriSGIX gladglSpriteParameteriSGIX
typedef void (* fp_glSpriteParameterivSGIX)(GLenum, const GLint*);
extern fp_glSpriteParameterivSGIX gladglSpriteParameterivSGIX;
#define glSpriteParameterivSGIX gladglSpriteParameterivSGIX
int GL_ARB_get_program_binary;
int GL_SGIS_multisample;
#define GL_MULTISAMPLE_SGIS 0x809D
#define GL_SAMPLE_ALPHA_TO_MASK_SGIS 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE_SGIS 0x809F
#define GL_SAMPLE_MASK_SGIS 0x80A0
#define GL_1PASS_SGIS 0x80A1
#define GL_2PASS_0_SGIS 0x80A2
#define GL_2PASS_1_SGIS 0x80A3
#define GL_4PASS_0_SGIS 0x80A4
#define GL_4PASS_1_SGIS 0x80A5
#define GL_4PASS_2_SGIS 0x80A6
#define GL_4PASS_3_SGIS 0x80A7
#define GL_SAMPLE_BUFFERS_SGIS 0x80A8
#define GL_SAMPLES_SGIS 0x80A9
#define GL_SAMPLE_MASK_VALUE_SGIS 0x80AA
#define GL_SAMPLE_MASK_INVERT_SGIS 0x80AB
#define GL_SAMPLE_PATTERN_SGIS 0x80AC
typedef void (* fp_glSampleMaskSGIS)(GLclampf, GLboolean);
extern fp_glSampleMaskSGIS gladglSampleMaskSGIS;
#define glSampleMaskSGIS gladglSampleMaskSGIS
typedef void (* fp_glSamplePatternSGIS)(GLenum);
extern fp_glSamplePatternSGIS gladglSamplePatternSGIS;
#define glSamplePatternSGIS gladglSamplePatternSGIS
int GL_EXT_framebuffer_object;
#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#define GL_FRAMEBUFFER_EXT 0x8D40
#define GL_RENDERBUFFER_EXT 0x8D41
#define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#define GL_STENCIL_INDEX1_EXT 0x8D46
#define GL_STENCIL_INDEX4_EXT 0x8D47
#define GL_STENCIL_INDEX8_EXT 0x8D48
#define GL_STENCIL_INDEX16_EXT 0x8D49
#define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
typedef GLboolean (* fp_glIsRenderbufferEXT)(GLuint);
extern fp_glIsRenderbufferEXT gladglIsRenderbufferEXT;
#define glIsRenderbufferEXT gladglIsRenderbufferEXT
typedef void (* fp_glBindRenderbufferEXT)(GLenum, GLuint);
extern fp_glBindRenderbufferEXT gladglBindRenderbufferEXT;
#define glBindRenderbufferEXT gladglBindRenderbufferEXT
typedef void (* fp_glDeleteRenderbuffersEXT)(GLsizei, const GLuint*);
extern fp_glDeleteRenderbuffersEXT gladglDeleteRenderbuffersEXT;
#define glDeleteRenderbuffersEXT gladglDeleteRenderbuffersEXT
typedef void (* fp_glGenRenderbuffersEXT)(GLsizei, GLuint*);
extern fp_glGenRenderbuffersEXT gladglGenRenderbuffersEXT;
#define glGenRenderbuffersEXT gladglGenRenderbuffersEXT
typedef void (* fp_glRenderbufferStorageEXT)(GLenum, GLenum, GLsizei, GLsizei);
extern fp_glRenderbufferStorageEXT gladglRenderbufferStorageEXT;
#define glRenderbufferStorageEXT gladglRenderbufferStorageEXT
typedef void (* fp_glGetRenderbufferParameterivEXT)(GLenum, GLenum, GLint*);
extern fp_glGetRenderbufferParameterivEXT gladglGetRenderbufferParameterivEXT;
#define glGetRenderbufferParameterivEXT gladglGetRenderbufferParameterivEXT
typedef GLboolean (* fp_glIsFramebufferEXT)(GLuint);
extern fp_glIsFramebufferEXT gladglIsFramebufferEXT;
#define glIsFramebufferEXT gladglIsFramebufferEXT
typedef void (* fp_glBindFramebufferEXT)(GLenum, GLuint);
extern fp_glBindFramebufferEXT gladglBindFramebufferEXT;
#define glBindFramebufferEXT gladglBindFramebufferEXT
typedef void (* fp_glDeleteFramebuffersEXT)(GLsizei, const GLuint*);
extern fp_glDeleteFramebuffersEXT gladglDeleteFramebuffersEXT;
#define glDeleteFramebuffersEXT gladglDeleteFramebuffersEXT
typedef void (* fp_glGenFramebuffersEXT)(GLsizei, GLuint*);
extern fp_glGenFramebuffersEXT gladglGenFramebuffersEXT;
#define glGenFramebuffersEXT gladglGenFramebuffersEXT
typedef GLenum (* fp_glCheckFramebufferStatusEXT)(GLenum);
extern fp_glCheckFramebufferStatusEXT gladglCheckFramebufferStatusEXT;
#define glCheckFramebufferStatusEXT gladglCheckFramebufferStatusEXT
typedef void (* fp_glFramebufferTexture1DEXT)(GLenum, GLenum, GLenum, GLuint, GLint);
extern fp_glFramebufferTexture1DEXT gladglFramebufferTexture1DEXT;
#define glFramebufferTexture1DEXT gladglFramebufferTexture1DEXT
typedef void (* fp_glFramebufferTexture2DEXT)(GLenum, GLenum, GLenum, GLuint, GLint);
extern fp_glFramebufferTexture2DEXT gladglFramebufferTexture2DEXT;
#define glFramebufferTexture2DEXT gladglFramebufferTexture2DEXT
typedef void (* fp_glFramebufferTexture3DEXT)(GLenum, GLenum, GLenum, GLuint, GLint, GLint);
extern fp_glFramebufferTexture3DEXT gladglFramebufferTexture3DEXT;
#define glFramebufferTexture3DEXT gladglFramebufferTexture3DEXT
typedef void (* fp_glFramebufferRenderbufferEXT)(GLenum, GLenum, GLenum, GLuint);
extern fp_glFramebufferRenderbufferEXT gladglFramebufferRenderbufferEXT;
#define glFramebufferRenderbufferEXT gladglFramebufferRenderbufferEXT
typedef void (* fp_glGetFramebufferAttachmentParameterivEXT)(GLenum, GLenum, GLenum, GLint*);
extern fp_glGetFramebufferAttachmentParameterivEXT gladglGetFramebufferAttachmentParameterivEXT;
#define glGetFramebufferAttachmentParameterivEXT gladglGetFramebufferAttachmentParameterivEXT
typedef void (* fp_glGenerateMipmapEXT)(GLenum);
extern fp_glGenerateMipmapEXT gladglGenerateMipmapEXT;
#define glGenerateMipmapEXT gladglGenerateMipmapEXT
int GL_ARB_robustness_isolation;
int GL_ARB_vertex_array_bgra;
int GL_APPLE_vertex_array_range;
#define GL_VERTEX_ARRAY_RANGE_APPLE 0x851D
#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE 0x851E
#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE 0x851F
#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE 0x8521
#define GL_STORAGE_CLIENT_APPLE 0x85B4
typedef void (* fp_glVertexArrayRangeAPPLE)(GLsizei, GLvoid*);
extern fp_glVertexArrayRangeAPPLE gladglVertexArrayRangeAPPLE;
#define glVertexArrayRangeAPPLE gladglVertexArrayRangeAPPLE
typedef void (* fp_glFlushVertexArrayRangeAPPLE)(GLsizei, GLvoid*);
extern fp_glFlushVertexArrayRangeAPPLE gladglFlushVertexArrayRangeAPPLE;
#define glFlushVertexArrayRangeAPPLE gladglFlushVertexArrayRangeAPPLE
typedef void (* fp_glVertexArrayParameteriAPPLE)(GLenum, GLint);
extern fp_glVertexArrayParameteriAPPLE gladglVertexArrayParameteriAPPLE;
#define glVertexArrayParameteriAPPLE gladglVertexArrayParameteriAPPLE
int GL_AMD_query_buffer_object;
#define GL_QUERY_BUFFER_AMD 0x9192
#define GL_QUERY_BUFFER_BINDING_AMD 0x9193
#define GL_QUERY_RESULT_NO_WAIT_AMD 0x9194
int GL_NV_register_combiners;
#define GL_REGISTER_COMBINERS_NV 0x8522
#define GL_VARIABLE_A_NV 0x8523
#define GL_VARIABLE_B_NV 0x8524
#define GL_VARIABLE_C_NV 0x8525
#define GL_VARIABLE_D_NV 0x8526
#define GL_VARIABLE_E_NV 0x8527
#define GL_VARIABLE_F_NV 0x8528
#define GL_VARIABLE_G_NV 0x8529
#define GL_CONSTANT_COLOR0_NV 0x852A
#define GL_CONSTANT_COLOR1_NV 0x852B
#define GL_PRIMARY_COLOR_NV 0x852C
#define GL_SECONDARY_COLOR_NV 0x852D
#define GL_SPARE0_NV 0x852E
#define GL_SPARE1_NV 0x852F
#define GL_DISCARD_NV 0x8530
#define GL_E_TIMES_F_NV 0x8531
#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV 0x8532
#define GL_UNSIGNED_IDENTITY_NV 0x8536
#define GL_UNSIGNED_INVERT_NV 0x8537
#define GL_EXPAND_NORMAL_NV 0x8538
#define GL_EXPAND_NEGATE_NV 0x8539
#define GL_HALF_BIAS_NORMAL_NV 0x853A
#define GL_HALF_BIAS_NEGATE_NV 0x853B
#define GL_SIGNED_IDENTITY_NV 0x853C
#define GL_SIGNED_NEGATE_NV 0x853D
#define GL_SCALE_BY_TWO_NV 0x853E
#define GL_SCALE_BY_FOUR_NV 0x853F
#define GL_SCALE_BY_ONE_HALF_NV 0x8540
#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV 0x8541
#define GL_COMBINER_INPUT_NV 0x8542
#define GL_COMBINER_MAPPING_NV 0x8543
#define GL_COMBINER_COMPONENT_USAGE_NV 0x8544
#define GL_COMBINER_AB_DOT_PRODUCT_NV 0x8545
#define GL_COMBINER_CD_DOT_PRODUCT_NV 0x8546
#define GL_COMBINER_MUX_SUM_NV 0x8547
#define GL_COMBINER_SCALE_NV 0x8548
#define GL_COMBINER_BIAS_NV 0x8549
#define GL_COMBINER_AB_OUTPUT_NV 0x854A
#define GL_COMBINER_CD_OUTPUT_NV 0x854B
#define GL_COMBINER_SUM_OUTPUT_NV 0x854C
#define GL_MAX_GENERAL_COMBINERS_NV 0x854D
#define GL_NUM_GENERAL_COMBINERS_NV 0x854E
#define GL_COLOR_SUM_CLAMP_NV 0x854F
#define GL_COMBINER0_NV 0x8550
#define GL_COMBINER1_NV 0x8551
#define GL_COMBINER2_NV 0x8552
#define GL_COMBINER3_NV 0x8553
#define GL_COMBINER4_NV 0x8554
#define GL_COMBINER5_NV 0x8555
#define GL_COMBINER6_NV 0x8556
#define GL_COMBINER7_NV 0x8557
typedef void (* fp_glCombinerParameterfvNV)(GLenum, const GLfloat*);
extern fp_glCombinerParameterfvNV gladglCombinerParameterfvNV;
#define glCombinerParameterfvNV gladglCombinerParameterfvNV
typedef void (* fp_glCombinerParameterfNV)(GLenum, GLfloat);
extern fp_glCombinerParameterfNV gladglCombinerParameterfNV;
#define glCombinerParameterfNV gladglCombinerParameterfNV
typedef void (* fp_glCombinerParameterivNV)(GLenum, const GLint*);
extern fp_glCombinerParameterivNV gladglCombinerParameterivNV;
#define glCombinerParameterivNV gladglCombinerParameterivNV
typedef void (* fp_glCombinerParameteriNV)(GLenum, GLint);
extern fp_glCombinerParameteriNV gladglCombinerParameteriNV;
#define glCombinerParameteriNV gladglCombinerParameteriNV
typedef void (* fp_glCombinerInputNV)(GLenum, GLenum, GLenum, GLenum, GLenum, GLenum);
extern fp_glCombinerInputNV gladglCombinerInputNV;
#define glCombinerInputNV gladglCombinerInputNV
typedef void (* fp_glCombinerOutputNV)(GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean);
extern fp_glCombinerOutputNV gladglCombinerOutputNV;
#define glCombinerOutputNV gladglCombinerOutputNV
typedef void (* fp_glFinalCombinerInputNV)(GLenum, GLenum, GLenum, GLenum);
extern fp_glFinalCombinerInputNV gladglFinalCombinerInputNV;
#define glFinalCombinerInputNV gladglFinalCombinerInputNV
typedef void (* fp_glGetCombinerInputParameterfvNV)(GLenum, GLenum, GLenum, GLenum, GLfloat*);
extern fp_glGetCombinerInputParameterfvNV gladglGetCombinerInputParameterfvNV;
#define glGetCombinerInputParameterfvNV gladglGetCombinerInputParameterfvNV
typedef void (* fp_glGetCombinerInputParameterivNV)(GLenum, GLenum, GLenum, GLenum, GLint*);
extern fp_glGetCombinerInputParameterivNV gladglGetCombinerInputParameterivNV;
#define glGetCombinerInputParameterivNV gladglGetCombinerInputParameterivNV
typedef void (* fp_glGetCombinerOutputParameterfvNV)(GLenum, GLenum, GLenum, GLfloat*);
extern fp_glGetCombinerOutputParameterfvNV gladglGetCombinerOutputParameterfvNV;
#define glGetCombinerOutputParameterfvNV gladglGetCombinerOutputParameterfvNV
typedef void (* fp_glGetCombinerOutputParameterivNV)(GLenum, GLenum, GLenum, GLint*);
extern fp_glGetCombinerOutputParameterivNV gladglGetCombinerOutputParameterivNV;
#define glGetCombinerOutputParameterivNV gladglGetCombinerOutputParameterivNV
typedef void (* fp_glGetFinalCombinerInputParameterfvNV)(GLenum, GLenum, GLfloat*);
extern fp_glGetFinalCombinerInputParameterfvNV gladglGetFinalCombinerInputParameterfvNV;
#define glGetFinalCombinerInputParameterfvNV gladglGetFinalCombinerInputParameterfvNV
typedef void (* fp_glGetFinalCombinerInputParameterivNV)(GLenum, GLenum, GLint*);
extern fp_glGetFinalCombinerInputParameterivNV gladglGetFinalCombinerInputParameterivNV;
#define glGetFinalCombinerInputParameterivNV gladglGetFinalCombinerInputParameterivNV
int GL_ARB_draw_buffers;
#define GL_MAX_DRAW_BUFFERS_ARB 0x8824
#define GL_DRAW_BUFFER0_ARB 0x8825
#define GL_DRAW_BUFFER1_ARB 0x8826
#define GL_DRAW_BUFFER2_ARB 0x8827
#define GL_DRAW_BUFFER3_ARB 0x8828
#define GL_DRAW_BUFFER4_ARB 0x8829
#define GL_DRAW_BUFFER5_ARB 0x882A
#define GL_DRAW_BUFFER6_ARB 0x882B
#define GL_DRAW_BUFFER7_ARB 0x882C
#define GL_DRAW_BUFFER8_ARB 0x882D
#define GL_DRAW_BUFFER9_ARB 0x882E
#define GL_DRAW_BUFFER10_ARB 0x882F
#define GL_DRAW_BUFFER11_ARB 0x8830
#define GL_DRAW_BUFFER12_ARB 0x8831
#define GL_DRAW_BUFFER13_ARB 0x8832
#define GL_DRAW_BUFFER14_ARB 0x8833
#define GL_DRAW_BUFFER15_ARB 0x8834
typedef void (* fp_glDrawBuffersARB)(GLsizei, const GLenum*);
extern fp_glDrawBuffersARB gladglDrawBuffersARB;
#define glDrawBuffersARB gladglDrawBuffersARB
int GL_ARB_clear_texture;
int GL_ARB_debug_output;
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB 0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION_ARB 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB 0x8245
#define GL_DEBUG_SOURCE_API_ARB 0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB 0x8249
#define GL_DEBUG_SOURCE_APPLICATION_ARB 0x824A
#define GL_DEBUG_SOURCE_OTHER_ARB 0x824B
#define GL_DEBUG_TYPE_ERROR_ARB 0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
#define GL_DEBUG_TYPE_PORTABILITY_ARB 0x824F
#define GL_DEBUG_TYPE_PERFORMANCE_ARB 0x8250
#define GL_DEBUG_TYPE_OTHER_ARB 0x8251
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB 0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB 0x9144
#define GL_DEBUG_LOGGED_MESSAGES_ARB 0x9145
#define GL_DEBUG_SEVERITY_HIGH_ARB 0x9146
#define GL_DEBUG_SEVERITY_MEDIUM_ARB 0x9147
#define GL_DEBUG_SEVERITY_LOW_ARB 0x9148
typedef void (* fp_glDebugMessageControlARB)(GLenum, GLenum, GLenum, GLsizei, const GLuint*, GLboolean);
extern fp_glDebugMessageControlARB gladglDebugMessageControlARB;
#define glDebugMessageControlARB gladglDebugMessageControlARB
typedef void (* fp_glDebugMessageInsertARB)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*);
extern fp_glDebugMessageInsertARB gladglDebugMessageInsertARB;
#define glDebugMessageInsertARB gladglDebugMessageInsertARB
typedef void (* fp_glDebugMessageCallbackARB)(GLDEBUGPROCARB, const void*);
extern fp_glDebugMessageCallbackARB gladglDebugMessageCallbackARB;
#define glDebugMessageCallbackARB gladglDebugMessageCallbackARB
typedef GLuint (* fp_glGetDebugMessageLogARB)(GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*);
extern fp_glGetDebugMessageLogARB gladglGetDebugMessageLogARB;
#define glGetDebugMessageLogARB gladglGetDebugMessageLogARB
int GL_SGI_color_matrix;
#define GL_COLOR_MATRIX_SGI 0x80B1
#define GL_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B2
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B3
#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI 0x80B4
#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI 0x80B5
#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI 0x80B6
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI 0x80B7
#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI 0x80B8
#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI 0x80B9
#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI 0x80BA
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI 0x80BB
int GL_EXT_cull_vertex;
#define GL_CULL_VERTEX_EXT 0x81AA
#define GL_CULL_VERTEX_EYE_POSITION_EXT 0x81AB
#define GL_CULL_VERTEX_OBJECT_POSITION_EXT 0x81AC
typedef void (* fp_glCullParameterdvEXT)(GLenum, GLdouble*);
extern fp_glCullParameterdvEXT gladglCullParameterdvEXT;
#define glCullParameterdvEXT gladglCullParameterdvEXT
typedef void (* fp_glCullParameterfvEXT)(GLenum, GLfloat*);
extern fp_glCullParameterfvEXT gladglCullParameterfvEXT;
#define glCullParameterfvEXT gladglCullParameterfvEXT
int GL_EXT_texture_sRGB;
#define GL_SRGB_EXT 0x8C40
#define GL_SRGB8_EXT 0x8C41
#define GL_SRGB_ALPHA_EXT 0x8C42
#define GL_SRGB8_ALPHA8_EXT 0x8C43
#define GL_SLUMINANCE_ALPHA_EXT 0x8C44
#define GL_SLUMINANCE8_ALPHA8_EXT 0x8C45
#define GL_SLUMINANCE_EXT 0x8C46
#define GL_SLUMINANCE8_EXT 0x8C47
#define GL_COMPRESSED_SRGB_EXT 0x8C48
#define GL_COMPRESSED_SRGB_ALPHA_EXT 0x8C49
#define GL_COMPRESSED_SLUMINANCE_EXT 0x8C4A
#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 0x8C4B
#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT 0x8C4C
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 0x8C4D
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT 0x8C4E
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT 0x8C4F
int GL_APPLE_row_bytes;
#define GL_PACK_ROW_BYTES_APPLE 0x8A15
#define GL_UNPACK_ROW_BYTES_APPLE 0x8A16
int GL_NV_texgen_reflection;
#define GL_NORMAL_MAP_NV 0x8511
#define GL_REFLECTION_MAP_NV 0x8512
int GL_IBM_multimode_draw_arrays;
typedef void (* fp_glMultiModeDrawArraysIBM)(const GLenum*, const GLint*, const GLsizei*, GLsizei, GLint);
extern fp_glMultiModeDrawArraysIBM gladglMultiModeDrawArraysIBM;
#define glMultiModeDrawArraysIBM gladglMultiModeDrawArraysIBM
typedef void (* fp_glMultiModeDrawElementsIBM)(const GLenum*, const GLsizei*, GLenum, const GLvoid**, GLsizei, GLint);
extern fp_glMultiModeDrawElementsIBM gladglMultiModeDrawElementsIBM;
#define glMultiModeDrawElementsIBM gladglMultiModeDrawElementsIBM
int GL_APPLE_vertex_array_object;
#define GL_VERTEX_ARRAY_BINDING_APPLE 0x85B5
typedef void (* fp_glBindVertexArrayAPPLE)(GLuint);
extern fp_glBindVertexArrayAPPLE gladglBindVertexArrayAPPLE;
#define glBindVertexArrayAPPLE gladglBindVertexArrayAPPLE
typedef void (* fp_glDeleteVertexArraysAPPLE)(GLsizei, const GLuint*);
extern fp_glDeleteVertexArraysAPPLE gladglDeleteVertexArraysAPPLE;
#define glDeleteVertexArraysAPPLE gladglDeleteVertexArraysAPPLE
typedef void (* fp_glGenVertexArraysAPPLE)(GLsizei, GLuint*);
extern fp_glGenVertexArraysAPPLE gladglGenVertexArraysAPPLE;
#define glGenVertexArraysAPPLE gladglGenVertexArraysAPPLE
typedef GLboolean (* fp_glIsVertexArrayAPPLE)(GLuint);
extern fp_glIsVertexArrayAPPLE gladglIsVertexArrayAPPLE;
#define glIsVertexArrayAPPLE gladglIsVertexArrayAPPLE
int GL_3DFX_texture_compression_FXT1;
#define GL_COMPRESSED_RGB_FXT1_3DFX 0x86B0
#define GL_COMPRESSED_RGBA_FXT1_3DFX 0x86B1
int GL_SGIX_ycrcb;
#define GL_YCRCB_422_SGIX 0x81BB
#define GL_YCRCB_444_SGIX 0x81BC
int GL_AMD_conservative_depth;
int GL_ARB_texture_float;
#define GL_TEXTURE_RED_TYPE_ARB 0x8C10
#define GL_TEXTURE_GREEN_TYPE_ARB 0x8C11
#define GL_TEXTURE_BLUE_TYPE_ARB 0x8C12
#define GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13
#define GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14
#define GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15
#define GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16
#define GL_UNSIGNED_NORMALIZED_ARB 0x8C17
#define GL_RGBA32F_ARB 0x8814
#define GL_RGB32F_ARB 0x8815
#define GL_ALPHA32F_ARB 0x8816
#define GL_INTENSITY32F_ARB 0x8817
#define GL_LUMINANCE32F_ARB 0x8818
#define GL_LUMINANCE_ALPHA32F_ARB 0x8819
#define GL_RGBA16F_ARB 0x881A
#define GL_RGB16F_ARB 0x881B
#define GL_ALPHA16F_ARB 0x881C
#define GL_INTENSITY16F_ARB 0x881D
#define GL_LUMINANCE16F_ARB 0x881E
#define GL_LUMINANCE_ALPHA16F_ARB 0x881F
int GL_ARB_compressed_texture_pixel_storage;
int GL_SGIS_detail_texture;
#define GL_DETAIL_TEXTURE_2D_SGIS 0x8095
#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS 0x8096
#define GL_LINEAR_DETAIL_SGIS 0x8097
#define GL_LINEAR_DETAIL_ALPHA_SGIS 0x8098
#define GL_LINEAR_DETAIL_COLOR_SGIS 0x8099
#define GL_DETAIL_TEXTURE_LEVEL_SGIS 0x809A
#define GL_DETAIL_TEXTURE_MODE_SGIS 0x809B
#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS 0x809C
typedef void (* fp_glDetailTexFuncSGIS)(GLenum, GLsizei, const GLfloat*);
extern fp_glDetailTexFuncSGIS gladglDetailTexFuncSGIS;
#define glDetailTexFuncSGIS gladglDetailTexFuncSGIS
typedef void (* fp_glGetDetailTexFuncSGIS)(GLenum, GLfloat*);
extern fp_glGetDetailTexFuncSGIS gladglGetDetailTexFuncSGIS;
#define glGetDetailTexFuncSGIS gladglGetDetailTexFuncSGIS
int GL_ARB_draw_instanced;
typedef void (* fp_glDrawArraysInstancedARB)(GLenum, GLint, GLsizei, GLsizei);
extern fp_glDrawArraysInstancedARB gladglDrawArraysInstancedARB;
#define glDrawArraysInstancedARB gladglDrawArraysInstancedARB
typedef void (* fp_glDrawElementsInstancedARB)(GLenum, GLsizei, GLenum, const GLvoid*, GLsizei);
extern fp_glDrawElementsInstancedARB gladglDrawElementsInstancedARB;
#define glDrawElementsInstancedARB gladglDrawElementsInstancedARB
int GL_OES_read_format;
#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES 0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES 0x8B9B
int GL_ATI_texture_float;
#define GL_RGBA_FLOAT32_ATI 0x8814
#define GL_RGB_FLOAT32_ATI 0x8815
#define GL_ALPHA_FLOAT32_ATI 0x8816
#define GL_INTENSITY_FLOAT32_ATI 0x8817
#define GL_LUMINANCE_FLOAT32_ATI 0x8818
#define GL_LUMINANCE_ALPHA_FLOAT32_ATI 0x8819
#define GL_RGBA_FLOAT16_ATI 0x881A
#define GL_RGB_FLOAT16_ATI 0x881B
#define GL_ALPHA_FLOAT16_ATI 0x881C
#define GL_INTENSITY_FLOAT16_ATI 0x881D
#define GL_LUMINANCE_FLOAT16_ATI 0x881E
#define GL_LUMINANCE_ALPHA_FLOAT16_ATI 0x881F
int GL_ARB_texture_gather;
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5F
#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F
int GL_AMD_vertex_shader_layer;
int GL_ARB_shading_language_include;
#define GL_SHADER_INCLUDE_ARB 0x8DAE
#define GL_NAMED_STRING_LENGTH_ARB 0x8DE9
#define GL_NAMED_STRING_TYPE_ARB 0x8DEA
typedef void (* fp_glNamedStringARB)(GLenum, GLint, const GLchar*, GLint, const GLchar*);
extern fp_glNamedStringARB gladglNamedStringARB;
#define glNamedStringARB gladglNamedStringARB
typedef void (* fp_glDeleteNamedStringARB)(GLint, const GLchar*);
extern fp_glDeleteNamedStringARB gladglDeleteNamedStringARB;
#define glDeleteNamedStringARB gladglDeleteNamedStringARB
typedef void (* fp_glCompileShaderIncludeARB)(GLuint, GLsizei, const GLchar**, const GLint*);
extern fp_glCompileShaderIncludeARB gladglCompileShaderIncludeARB;
#define glCompileShaderIncludeARB gladglCompileShaderIncludeARB
typedef GLboolean (* fp_glIsNamedStringARB)(GLint, const GLchar*);
extern fp_glIsNamedStringARB gladglIsNamedStringARB;
#define glIsNamedStringARB gladglIsNamedStringARB
typedef void (* fp_glGetNamedStringARB)(GLint, const GLchar*, GLsizei, GLint*, GLchar*);
extern fp_glGetNamedStringARB gladglGetNamedStringARB;
#define glGetNamedStringARB gladglGetNamedStringARB
typedef void (* fp_glGetNamedStringivARB)(GLint, const GLchar*, GLenum, GLint*);
extern fp_glGetNamedStringivARB gladglGetNamedStringivARB;
#define glGetNamedStringivARB gladglGetNamedStringivARB
int GL_APPLE_client_storage;
#define GL_UNPACK_CLIENT_STORAGE_APPLE 0x85B2
int GL_WIN_phong_shading;
#define GL_PHONG_WIN 0x80EA
#define GL_PHONG_HINT_WIN 0x80EB
int GL_INGR_blend_func_separate;
typedef void (* fp_glBlendFuncSeparateINGR)(GLenum, GLenum, GLenum, GLenum);
extern fp_glBlendFuncSeparateINGR gladglBlendFuncSeparateINGR;
#define glBlendFuncSeparateINGR gladglBlendFuncSeparateINGR
int GL_NV_path_rendering;
#define GL_PATH_FORMAT_SVG_NV 0x9070
#define GL_PATH_FORMAT_PS_NV 0x9071
#define GL_STANDARD_FONT_NAME_NV 0x9072
#define GL_SYSTEM_FONT_NAME_NV 0x9073
#define GL_FILE_NAME_NV 0x9074
#define GL_PATH_STROKE_WIDTH_NV 0x9075
#define GL_PATH_END_CAPS_NV 0x9076
#define GL_PATH_INITIAL_END_CAP_NV 0x9077
#define GL_PATH_TERMINAL_END_CAP_NV 0x9078
#define GL_PATH_JOIN_STYLE_NV 0x9079
#define GL_PATH_MITER_LIMIT_NV 0x907A
#define GL_PATH_DASH_CAPS_NV 0x907B
#define GL_PATH_INITIAL_DASH_CAP_NV 0x907C
#define GL_PATH_TERMINAL_DASH_CAP_NV 0x907D
#define GL_PATH_DASH_OFFSET_NV 0x907E
#define GL_PATH_CLIENT_LENGTH_NV 0x907F
#define GL_PATH_FILL_MODE_NV 0x9080
#define GL_PATH_FILL_MASK_NV 0x9081
#define GL_PATH_FILL_COVER_MODE_NV 0x9082
#define GL_PATH_STROKE_COVER_MODE_NV 0x9083
#define GL_PATH_STROKE_MASK_NV 0x9084
#define GL_COUNT_UP_NV 0x9088
#define GL_COUNT_DOWN_NV 0x9089
#define GL_PATH_OBJECT_BOUNDING_BOX_NV 0x908A
#define GL_CONVEX_HULL_NV 0x908B
#define GL_BOUNDING_BOX_NV 0x908D
#define GL_TRANSLATE_X_NV 0x908E
#define GL_TRANSLATE_Y_NV 0x908F
#define GL_TRANSLATE_2D_NV 0x9090
#define GL_TRANSLATE_3D_NV 0x9091
#define GL_AFFINE_2D_NV 0x9092
#define GL_AFFINE_3D_NV 0x9094
#define GL_TRANSPOSE_AFFINE_2D_NV 0x9096
#define GL_TRANSPOSE_AFFINE_3D_NV 0x9098
#define GL_UTF8_NV 0x909A
#define GL_UTF16_NV 0x909B
#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV 0x909C
#define GL_PATH_COMMAND_COUNT_NV 0x909D
#define GL_PATH_COORD_COUNT_NV 0x909E
#define GL_PATH_DASH_ARRAY_COUNT_NV 0x909F
#define GL_PATH_COMPUTED_LENGTH_NV 0x90A0
#define GL_PATH_FILL_BOUNDING_BOX_NV 0x90A1
#define GL_PATH_STROKE_BOUNDING_BOX_NV 0x90A2
#define GL_SQUARE_NV 0x90A3
#define GL_ROUND_NV 0x90A4
#define GL_TRIANGULAR_NV 0x90A5
#define GL_BEVEL_NV 0x90A6
#define GL_MITER_REVERT_NV 0x90A7
#define GL_MITER_TRUNCATE_NV 0x90A8
#define GL_SKIP_MISSING_GLYPH_NV 0x90A9
#define GL_USE_MISSING_GLYPH_NV 0x90AA
#define GL_PATH_ERROR_POSITION_NV 0x90AB
#define GL_PATH_FOG_GEN_MODE_NV 0x90AC
#define GL_ACCUM_ADJACENT_PAIRS_NV 0x90AD
#define GL_ADJACENT_PAIRS_NV 0x90AE
#define GL_FIRST_TO_REST_NV 0x90AF
#define GL_PATH_GEN_MODE_NV 0x90B0
#define GL_PATH_GEN_COEFF_NV 0x90B1
#define GL_PATH_GEN_COLOR_FORMAT_NV 0x90B2
#define GL_PATH_GEN_COMPONENTS_NV 0x90B3
#define GL_PATH_STENCIL_FUNC_NV 0x90B7
#define GL_PATH_STENCIL_REF_NV 0x90B8
#define GL_PATH_STENCIL_VALUE_MASK_NV 0x90B9
#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV 0x90BD
#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV 0x90BE
#define GL_PATH_COVER_DEPTH_FUNC_NV 0x90BF
#define GL_PATH_DASH_OFFSET_RESET_NV 0x90B4
#define GL_MOVE_TO_RESETS_NV 0x90B5
#define GL_MOVE_TO_CONTINUES_NV 0x90B6
#define GL_CLOSE_PATH_NV 0x00
#define GL_MOVE_TO_NV 0x02
#define GL_RELATIVE_MOVE_TO_NV 0x03
#define GL_LINE_TO_NV 0x04
#define GL_RELATIVE_LINE_TO_NV 0x05
#define GL_HORIZONTAL_LINE_TO_NV 0x06
#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV 0x07
#define GL_VERTICAL_LINE_TO_NV 0x08
#define GL_RELATIVE_VERTICAL_LINE_TO_NV 0x09
#define GL_QUADRATIC_CURVE_TO_NV 0x0A
#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV 0x0B
#define GL_CUBIC_CURVE_TO_NV 0x0C
#define GL_RELATIVE_CUBIC_CURVE_TO_NV 0x0D
#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0E
#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0F
#define GL_SMOOTH_CUBIC_CURVE_TO_NV 0x10
#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV 0x11
#define GL_SMALL_CCW_ARC_TO_NV 0x12
#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV 0x13
#define GL_SMALL_CW_ARC_TO_NV 0x14
#define GL_RELATIVE_SMALL_CW_ARC_TO_NV 0x15
#define GL_LARGE_CCW_ARC_TO_NV 0x16
#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV 0x17
#define GL_LARGE_CW_ARC_TO_NV 0x18
#define GL_RELATIVE_LARGE_CW_ARC_TO_NV 0x19
#define GL_RESTART_PATH_NV 0xF0
#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV 0xF2
#define GL_DUP_LAST_CUBIC_CURVE_TO_NV 0xF4
#define GL_RECT_NV 0xF6
#define GL_CIRCULAR_CCW_ARC_TO_NV 0xF8
#define GL_CIRCULAR_CW_ARC_TO_NV 0xFA
#define GL_CIRCULAR_TANGENT_ARC_TO_NV 0xFC
#define GL_ARC_TO_NV 0xFE
#define GL_RELATIVE_ARC_TO_NV 0xFF
#define GL_BOLD_BIT_NV 0x01
#define GL_ITALIC_BIT_NV 0x02
#define GL_GLYPH_WIDTH_BIT_NV 0x01
#define GL_GLYPH_HEIGHT_BIT_NV 0x02
#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV 0x04
#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV 0x08
#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV 0x10
#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV 0x20
#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV 0x40
#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV 0x80
#define GL_GLYPH_HAS_KERNING_BIT_NV 0x100
#define GL_FONT_X_MIN_BOUNDS_BIT_NV 0x00010000
#define GL_FONT_Y_MIN_BOUNDS_BIT_NV 0x00020000
#define GL_FONT_X_MAX_BOUNDS_BIT_NV 0x00040000
#define GL_FONT_Y_MAX_BOUNDS_BIT_NV 0x00080000
#define GL_FONT_UNITS_PER_EM_BIT_NV 0x00100000
#define GL_FONT_ASCENDER_BIT_NV 0x00200000
#define GL_FONT_DESCENDER_BIT_NV 0x00400000
#define GL_FONT_HEIGHT_BIT_NV 0x00800000
#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV 0x01000000
#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV 0x02000000
#define GL_FONT_UNDERLINE_POSITION_BIT_NV 0x04000000
#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV 0x08000000
#define GL_FONT_HAS_KERNING_BIT_NV 0x10000000
typedef GLuint (* fp_glGenPathsNV)(GLsizei);
extern fp_glGenPathsNV gladglGenPathsNV;
#define glGenPathsNV gladglGenPathsNV
typedef void (* fp_glDeletePathsNV)(GLuint, GLsizei);
extern fp_glDeletePathsNV gladglDeletePathsNV;
#define glDeletePathsNV gladglDeletePathsNV
typedef GLboolean (* fp_glIsPathNV)(GLuint);
extern fp_glIsPathNV gladglIsPathNV;
#define glIsPathNV gladglIsPathNV
typedef void (* fp_glPathCommandsNV)(GLuint, GLsizei, const GLubyte*, GLsizei, GLenum, const GLvoid*);
extern fp_glPathCommandsNV gladglPathCommandsNV;
#define glPathCommandsNV gladglPathCommandsNV
typedef void (* fp_glPathCoordsNV)(GLuint, GLsizei, GLenum, const GLvoid*);
extern fp_glPathCoordsNV gladglPathCoordsNV;
#define glPathCoordsNV gladglPathCoordsNV
typedef void (* fp_glPathSubCommandsNV)(GLuint, GLsizei, GLsizei, GLsizei, const GLubyte*, GLsizei, GLenum, const GLvoid*);
extern fp_glPathSubCommandsNV gladglPathSubCommandsNV;
#define glPathSubCommandsNV gladglPathSubCommandsNV
typedef void (* fp_glPathSubCoordsNV)(GLuint, GLsizei, GLsizei, GLenum, const GLvoid*);
extern fp_glPathSubCoordsNV gladglPathSubCoordsNV;
#define glPathSubCoordsNV gladglPathSubCoordsNV
typedef void (* fp_glPathStringNV)(GLuint, GLenum, GLsizei, const GLvoid*);
extern fp_glPathStringNV gladglPathStringNV;
#define glPathStringNV gladglPathStringNV
typedef void (* fp_glPathGlyphsNV)(GLuint, GLenum, const GLvoid*, GLbitfield, GLsizei, GLenum, const GLvoid*, GLenum, GLuint, GLfloat);
extern fp_glPathGlyphsNV gladglPathGlyphsNV;
#define glPathGlyphsNV gladglPathGlyphsNV
typedef void (* fp_glPathGlyphRangeNV)(GLuint, GLenum, const GLvoid*, GLbitfield, GLuint, GLsizei, GLenum, GLuint, GLfloat);
extern fp_glPathGlyphRangeNV gladglPathGlyphRangeNV;
#define glPathGlyphRangeNV gladglPathGlyphRangeNV
typedef void (* fp_glWeightPathsNV)(GLuint, GLsizei, const GLuint*, const GLfloat*);
extern fp_glWeightPathsNV gladglWeightPathsNV;
#define glWeightPathsNV gladglWeightPathsNV
typedef void (* fp_glCopyPathNV)(GLuint, GLuint);
extern fp_glCopyPathNV gladglCopyPathNV;
#define glCopyPathNV gladglCopyPathNV
typedef void (* fp_glInterpolatePathsNV)(GLuint, GLuint, GLuint, GLfloat);
extern fp_glInterpolatePathsNV gladglInterpolatePathsNV;
#define glInterpolatePathsNV gladglInterpolatePathsNV
typedef void (* fp_glTransformPathNV)(GLuint, GLuint, GLenum, const GLfloat*);
extern fp_glTransformPathNV gladglTransformPathNV;
#define glTransformPathNV gladglTransformPathNV
typedef void (* fp_glPathParameterivNV)(GLuint, GLenum, const GLint*);
extern fp_glPathParameterivNV gladglPathParameterivNV;
#define glPathParameterivNV gladglPathParameterivNV
typedef void (* fp_glPathParameteriNV)(GLuint, GLenum, GLint);
extern fp_glPathParameteriNV gladglPathParameteriNV;
#define glPathParameteriNV gladglPathParameteriNV
typedef void (* fp_glPathParameterfvNV)(GLuint, GLenum, const GLfloat*);
extern fp_glPathParameterfvNV gladglPathParameterfvNV;
#define glPathParameterfvNV gladglPathParameterfvNV
typedef void (* fp_glPathParameterfNV)(GLuint, GLenum, GLfloat);
extern fp_glPathParameterfNV gladglPathParameterfNV;
#define glPathParameterfNV gladglPathParameterfNV
typedef void (* fp_glPathDashArrayNV)(GLuint, GLsizei, const GLfloat*);
extern fp_glPathDashArrayNV gladglPathDashArrayNV;
#define glPathDashArrayNV gladglPathDashArrayNV
typedef void (* fp_glPathStencilFuncNV)(GLenum, GLint, GLuint);
extern fp_glPathStencilFuncNV gladglPathStencilFuncNV;
#define glPathStencilFuncNV gladglPathStencilFuncNV
typedef void (* fp_glPathStencilDepthOffsetNV)(GLfloat, GLfloat);
extern fp_glPathStencilDepthOffsetNV gladglPathStencilDepthOffsetNV;
#define glPathStencilDepthOffsetNV gladglPathStencilDepthOffsetNV
typedef void (* fp_glStencilFillPathNV)(GLuint, GLenum, GLuint);
extern fp_glStencilFillPathNV gladglStencilFillPathNV;
#define glStencilFillPathNV gladglStencilFillPathNV
typedef void (* fp_glStencilStrokePathNV)(GLuint, GLint, GLuint);
extern fp_glStencilStrokePathNV gladglStencilStrokePathNV;
#define glStencilStrokePathNV gladglStencilStrokePathNV
typedef void (* fp_glStencilFillPathInstancedNV)(GLsizei, GLenum, const GLvoid*, GLuint, GLenum, GLuint, GLenum, const GLfloat*);
extern fp_glStencilFillPathInstancedNV gladglStencilFillPathInstancedNV;
#define glStencilFillPathInstancedNV gladglStencilFillPathInstancedNV
typedef void (* fp_glStencilStrokePathInstancedNV)(GLsizei, GLenum, const GLvoid*, GLuint, GLint, GLuint, GLenum, const GLfloat*);
extern fp_glStencilStrokePathInstancedNV gladglStencilStrokePathInstancedNV;
#define glStencilStrokePathInstancedNV gladglStencilStrokePathInstancedNV
typedef void (* fp_glPathCoverDepthFuncNV)(GLenum);
extern fp_glPathCoverDepthFuncNV gladglPathCoverDepthFuncNV;
#define glPathCoverDepthFuncNV gladglPathCoverDepthFuncNV
typedef void (* fp_glPathColorGenNV)(GLenum, GLenum, GLenum, const GLfloat*);
extern fp_glPathColorGenNV gladglPathColorGenNV;
#define glPathColorGenNV gladglPathColorGenNV
typedef void (* fp_glPathTexGenNV)(GLenum, GLenum, GLint, const GLfloat*);
extern fp_glPathTexGenNV gladglPathTexGenNV;
#define glPathTexGenNV gladglPathTexGenNV
typedef void (* fp_glPathFogGenNV)(GLenum);
extern fp_glPathFogGenNV gladglPathFogGenNV;
#define glPathFogGenNV gladglPathFogGenNV
typedef void (* fp_glCoverFillPathNV)(GLuint, GLenum);
extern fp_glCoverFillPathNV gladglCoverFillPathNV;
#define glCoverFillPathNV gladglCoverFillPathNV
typedef void (* fp_glCoverStrokePathNV)(GLuint, GLenum);
extern fp_glCoverStrokePathNV gladglCoverStrokePathNV;
#define glCoverStrokePathNV gladglCoverStrokePathNV
typedef void (* fp_glCoverFillPathInstancedNV)(GLsizei, GLenum, const GLvoid*, GLuint, GLenum, GLenum, const GLfloat*);
extern fp_glCoverFillPathInstancedNV gladglCoverFillPathInstancedNV;
#define glCoverFillPathInstancedNV gladglCoverFillPathInstancedNV
typedef void (* fp_glCoverStrokePathInstancedNV)(GLsizei, GLenum, const GLvoid*, GLuint, GLenum, GLenum, const GLfloat*);
extern fp_glCoverStrokePathInstancedNV gladglCoverStrokePathInstancedNV;
#define glCoverStrokePathInstancedNV gladglCoverStrokePathInstancedNV
typedef void (* fp_glGetPathParameterivNV)(GLuint, GLenum, GLint*);
extern fp_glGetPathParameterivNV gladglGetPathParameterivNV;
#define glGetPathParameterivNV gladglGetPathParameterivNV
typedef void (* fp_glGetPathParameterfvNV)(GLuint, GLenum, GLfloat*);
extern fp_glGetPathParameterfvNV gladglGetPathParameterfvNV;
#define glGetPathParameterfvNV gladglGetPathParameterfvNV
typedef void (* fp_glGetPathCommandsNV)(GLuint, GLubyte*);
extern fp_glGetPathCommandsNV gladglGetPathCommandsNV;
#define glGetPathCommandsNV gladglGetPathCommandsNV
typedef void (* fp_glGetPathCoordsNV)(GLuint, GLfloat*);
extern fp_glGetPathCoordsNV gladglGetPathCoordsNV;
#define glGetPathCoordsNV gladglGetPathCoordsNV
typedef void (* fp_glGetPathDashArrayNV)(GLuint, GLfloat*);
extern fp_glGetPathDashArrayNV gladglGetPathDashArrayNV;
#define glGetPathDashArrayNV gladglGetPathDashArrayNV
typedef void (* fp_glGetPathMetricsNV)(GLbitfield, GLsizei, GLenum, const GLvoid*, GLuint, GLsizei, GLfloat*);
extern fp_glGetPathMetricsNV gladglGetPathMetricsNV;
#define glGetPathMetricsNV gladglGetPathMetricsNV
typedef void (* fp_glGetPathMetricRangeNV)(GLbitfield, GLuint, GLsizei, GLsizei, GLfloat*);
extern fp_glGetPathMetricRangeNV gladglGetPathMetricRangeNV;
#define glGetPathMetricRangeNV gladglGetPathMetricRangeNV
typedef void (* fp_glGetPathSpacingNV)(GLenum, GLsizei, GLenum, const GLvoid*, GLuint, GLfloat, GLfloat, GLenum, GLfloat*);
extern fp_glGetPathSpacingNV gladglGetPathSpacingNV;
#define glGetPathSpacingNV gladglGetPathSpacingNV
typedef void (* fp_glGetPathColorGenivNV)(GLenum, GLenum, GLint*);
extern fp_glGetPathColorGenivNV gladglGetPathColorGenivNV;
#define glGetPathColorGenivNV gladglGetPathColorGenivNV
typedef void (* fp_glGetPathColorGenfvNV)(GLenum, GLenum, GLfloat*);
extern fp_glGetPathColorGenfvNV gladglGetPathColorGenfvNV;
#define glGetPathColorGenfvNV gladglGetPathColorGenfvNV
typedef void (* fp_glGetPathTexGenivNV)(GLenum, GLenum, GLint*);
extern fp_glGetPathTexGenivNV gladglGetPathTexGenivNV;
#define glGetPathTexGenivNV gladglGetPathTexGenivNV
typedef void (* fp_glGetPathTexGenfvNV)(GLenum, GLenum, GLfloat*);
extern fp_glGetPathTexGenfvNV gladglGetPathTexGenfvNV;
#define glGetPathTexGenfvNV gladglGetPathTexGenfvNV
typedef GLboolean (* fp_glIsPointInFillPathNV)(GLuint, GLuint, GLfloat, GLfloat);
extern fp_glIsPointInFillPathNV gladglIsPointInFillPathNV;
#define glIsPointInFillPathNV gladglIsPointInFillPathNV
typedef GLboolean (* fp_glIsPointInStrokePathNV)(GLuint, GLfloat, GLfloat);
extern fp_glIsPointInStrokePathNV gladglIsPointInStrokePathNV;
#define glIsPointInStrokePathNV gladglIsPointInStrokePathNV
typedef GLfloat (* fp_glGetPathLengthNV)(GLuint, GLsizei, GLsizei);
extern fp_glGetPathLengthNV gladglGetPathLengthNV;
#define glGetPathLengthNV gladglGetPathLengthNV
typedef GLboolean (* fp_glPointAlongPathNV)(GLuint, GLsizei, GLsizei, GLfloat, GLfloat*, GLfloat*, GLfloat*, GLfloat*);
extern fp_glPointAlongPathNV gladglPointAlongPathNV;
#define glPointAlongPathNV gladglPointAlongPathNV
int GL_ATI_vertex_streams;
#define GL_MAX_VERTEX_STREAMS_ATI 0x876B
#define GL_VERTEX_STREAM0_ATI 0x876C
#define GL_VERTEX_STREAM1_ATI 0x876D
#define GL_VERTEX_STREAM2_ATI 0x876E
#define GL_VERTEX_STREAM3_ATI 0x876F
#define GL_VERTEX_STREAM4_ATI 0x8770
#define GL_VERTEX_STREAM5_ATI 0x8771
#define GL_VERTEX_STREAM6_ATI 0x8772
#define GL_VERTEX_STREAM7_ATI 0x8773
#define GL_VERTEX_SOURCE_ATI 0x8774
typedef void (* fp_glVertexStream1sATI)(GLenum, GLshort);
extern fp_glVertexStream1sATI gladglVertexStream1sATI;
#define glVertexStream1sATI gladglVertexStream1sATI
typedef void (* fp_glVertexStream1svATI)(GLenum, const GLshort*);
extern fp_glVertexStream1svATI gladglVertexStream1svATI;
#define glVertexStream1svATI gladglVertexStream1svATI
typedef void (* fp_glVertexStream1iATI)(GLenum, GLint);
extern fp_glVertexStream1iATI gladglVertexStream1iATI;
#define glVertexStream1iATI gladglVertexStream1iATI
typedef void (* fp_glVertexStream1ivATI)(GLenum, const GLint*);
extern fp_glVertexStream1ivATI gladglVertexStream1ivATI;
#define glVertexStream1ivATI gladglVertexStream1ivATI
typedef void (* fp_glVertexStream1fATI)(GLenum, GLfloat);
extern fp_glVertexStream1fATI gladglVertexStream1fATI;
#define glVertexStream1fATI gladglVertexStream1fATI
typedef void (* fp_glVertexStream1fvATI)(GLenum, const GLfloat*);
extern fp_glVertexStream1fvATI gladglVertexStream1fvATI;
#define glVertexStream1fvATI gladglVertexStream1fvATI
typedef void (* fp_glVertexStream1dATI)(GLenum, GLdouble);
extern fp_glVertexStream1dATI gladglVertexStream1dATI;
#define glVertexStream1dATI gladglVertexStream1dATI
typedef void (* fp_glVertexStream1dvATI)(GLenum, const GLdouble*);
extern fp_glVertexStream1dvATI gladglVertexStream1dvATI;
#define glVertexStream1dvATI gladglVertexStream1dvATI
typedef void (* fp_glVertexStream2sATI)(GLenum, GLshort, GLshort);
extern fp_glVertexStream2sATI gladglVertexStream2sATI;
#define glVertexStream2sATI gladglVertexStream2sATI
typedef void (* fp_glVertexStream2svATI)(GLenum, const GLshort*);
extern fp_glVertexStream2svATI gladglVertexStream2svATI;
#define glVertexStream2svATI gladglVertexStream2svATI
typedef void (* fp_glVertexStream2iATI)(GLenum, GLint, GLint);
extern fp_glVertexStream2iATI gladglVertexStream2iATI;
#define glVertexStream2iATI gladglVertexStream2iATI
typedef void (* fp_glVertexStream2ivATI)(GLenum, const GLint*);
extern fp_glVertexStream2ivATI gladglVertexStream2ivATI;
#define glVertexStream2ivATI gladglVertexStream2ivATI
typedef void (* fp_glVertexStream2fATI)(GLenum, GLfloat, GLfloat);
extern fp_glVertexStream2fATI gladglVertexStream2fATI;
#define glVertexStream2fATI gladglVertexStream2fATI
typedef void (* fp_glVertexStream2fvATI)(GLenum, const GLfloat*);
extern fp_glVertexStream2fvATI gladglVertexStream2fvATI;
#define glVertexStream2fvATI gladglVertexStream2fvATI
typedef void (* fp_glVertexStream2dATI)(GLenum, GLdouble, GLdouble);
extern fp_glVertexStream2dATI gladglVertexStream2dATI;
#define glVertexStream2dATI gladglVertexStream2dATI
typedef void (* fp_glVertexStream2dvATI)(GLenum, const GLdouble*);
extern fp_glVertexStream2dvATI gladglVertexStream2dvATI;
#define glVertexStream2dvATI gladglVertexStream2dvATI
typedef void (* fp_glVertexStream3sATI)(GLenum, GLshort, GLshort, GLshort);
extern fp_glVertexStream3sATI gladglVertexStream3sATI;
#define glVertexStream3sATI gladglVertexStream3sATI
typedef void (* fp_glVertexStream3svATI)(GLenum, const GLshort*);
extern fp_glVertexStream3svATI gladglVertexStream3svATI;
#define glVertexStream3svATI gladglVertexStream3svATI
typedef void (* fp_glVertexStream3iATI)(GLenum, GLint, GLint, GLint);
extern fp_glVertexStream3iATI gladglVertexStream3iATI;
#define glVertexStream3iATI gladglVertexStream3iATI
typedef void (* fp_glVertexStream3ivATI)(GLenum, const GLint*);
extern fp_glVertexStream3ivATI gladglVertexStream3ivATI;
#define glVertexStream3ivATI gladglVertexStream3ivATI
typedef void (* fp_glVertexStream3fATI)(GLenum, GLfloat, GLfloat, GLfloat);
extern fp_glVertexStream3fATI gladglVertexStream3fATI;
#define glVertexStream3fATI gladglVertexStream3fATI
typedef void (* fp_glVertexStream3fvATI)(GLenum, const GLfloat*);
extern fp_glVertexStream3fvATI gladglVertexStream3fvATI;
#define glVertexStream3fvATI gladglVertexStream3fvATI
typedef void (* fp_glVertexStream3dATI)(GLenum, GLdouble, GLdouble, GLdouble);
extern fp_glVertexStream3dATI gladglVertexStream3dATI;
#define glVertexStream3dATI gladglVertexStream3dATI
typedef void (* fp_glVertexStream3dvATI)(GLenum, const GLdouble*);
extern fp_glVertexStream3dvATI gladglVertexStream3dvATI;
#define glVertexStream3dvATI gladglVertexStream3dvATI
typedef void (* fp_glVertexStream4sATI)(GLenum, GLshort, GLshort, GLshort, GLshort);
extern fp_glVertexStream4sATI gladglVertexStream4sATI;
#define glVertexStream4sATI gladglVertexStream4sATI
typedef void (* fp_glVertexStream4svATI)(GLenum, const GLshort*);
extern fp_glVertexStream4svATI gladglVertexStream4svATI;
#define glVertexStream4svATI gladglVertexStream4svATI
typedef void (* fp_glVertexStream4iATI)(GLenum, GLint, GLint, GLint, GLint);
extern fp_glVertexStream4iATI gladglVertexStream4iATI;
#define glVertexStream4iATI gladglVertexStream4iATI
typedef void (* fp_glVertexStream4ivATI)(GLenum, const GLint*);
extern fp_glVertexStream4ivATI gladglVertexStream4ivATI;
#define glVertexStream4ivATI gladglVertexStream4ivATI
typedef void (* fp_glVertexStream4fATI)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glVertexStream4fATI gladglVertexStream4fATI;
#define glVertexStream4fATI gladglVertexStream4fATI
typedef void (* fp_glVertexStream4fvATI)(GLenum, const GLfloat*);
extern fp_glVertexStream4fvATI gladglVertexStream4fvATI;
#define glVertexStream4fvATI gladglVertexStream4fvATI
typedef void (* fp_glVertexStream4dATI)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
extern fp_glVertexStream4dATI gladglVertexStream4dATI;
#define glVertexStream4dATI gladglVertexStream4dATI
typedef void (* fp_glVertexStream4dvATI)(GLenum, const GLdouble*);
extern fp_glVertexStream4dvATI gladglVertexStream4dvATI;
#define glVertexStream4dvATI gladglVertexStream4dvATI
typedef void (* fp_glNormalStream3bATI)(GLenum, GLbyte, GLbyte, GLbyte);
extern fp_glNormalStream3bATI gladglNormalStream3bATI;
#define glNormalStream3bATI gladglNormalStream3bATI
typedef void (* fp_glNormalStream3bvATI)(GLenum, const GLbyte*);
extern fp_glNormalStream3bvATI gladglNormalStream3bvATI;
#define glNormalStream3bvATI gladglNormalStream3bvATI
typedef void (* fp_glNormalStream3sATI)(GLenum, GLshort, GLshort, GLshort);
extern fp_glNormalStream3sATI gladglNormalStream3sATI;
#define glNormalStream3sATI gladglNormalStream3sATI
typedef void (* fp_glNormalStream3svATI)(GLenum, const GLshort*);
extern fp_glNormalStream3svATI gladglNormalStream3svATI;
#define glNormalStream3svATI gladglNormalStream3svATI
typedef void (* fp_glNormalStream3iATI)(GLenum, GLint, GLint, GLint);
extern fp_glNormalStream3iATI gladglNormalStream3iATI;
#define glNormalStream3iATI gladglNormalStream3iATI
typedef void (* fp_glNormalStream3ivATI)(GLenum, const GLint*);
extern fp_glNormalStream3ivATI gladglNormalStream3ivATI;
#define glNormalStream3ivATI gladglNormalStream3ivATI
typedef void (* fp_glNormalStream3fATI)(GLenum, GLfloat, GLfloat, GLfloat);
extern fp_glNormalStream3fATI gladglNormalStream3fATI;
#define glNormalStream3fATI gladglNormalStream3fATI
typedef void (* fp_glNormalStream3fvATI)(GLenum, const GLfloat*);
extern fp_glNormalStream3fvATI gladglNormalStream3fvATI;
#define glNormalStream3fvATI gladglNormalStream3fvATI
typedef void (* fp_glNormalStream3dATI)(GLenum, GLdouble, GLdouble, GLdouble);
extern fp_glNormalStream3dATI gladglNormalStream3dATI;
#define glNormalStream3dATI gladglNormalStream3dATI
typedef void (* fp_glNormalStream3dvATI)(GLenum, const GLdouble*);
extern fp_glNormalStream3dvATI gladglNormalStream3dvATI;
#define glNormalStream3dvATI gladglNormalStream3dvATI
typedef void (* fp_glClientActiveVertexStreamATI)(GLenum);
extern fp_glClientActiveVertexStreamATI gladglClientActiveVertexStreamATI;
#define glClientActiveVertexStreamATI gladglClientActiveVertexStreamATI
typedef void (* fp_glVertexBlendEnviATI)(GLenum, GLint);
extern fp_glVertexBlendEnviATI gladglVertexBlendEnviATI;
#define glVertexBlendEnviATI gladglVertexBlendEnviATI
typedef void (* fp_glVertexBlendEnvfATI)(GLenum, GLfloat);
extern fp_glVertexBlendEnvfATI gladglVertexBlendEnvfATI;
#define glVertexBlendEnvfATI gladglVertexBlendEnvfATI
int GL_ARB_texture_non_power_of_two;
int GL_APPLE_rgb_422;
#define GL_RGB_422_APPLE 0x8A1F
int GL_EXT_texture_lod_bias;
#define GL_MAX_TEXTURE_LOD_BIAS_EXT 0x84FD
#define GL_TEXTURE_FILTER_CONTROL_EXT 0x8500
#define GL_TEXTURE_LOD_BIAS_EXT 0x8501
int GL_ARB_seamless_cube_map;
int GL_ARB_shader_group_vote;
int GL_NV_vdpau_interop;
#define GL_SURFACE_STATE_NV 0x86EB
#define GL_SURFACE_REGISTERED_NV 0x86FD
#define GL_SURFACE_MAPPED_NV 0x8700
#define GL_WRITE_DISCARD_NV 0x88BE
typedef void (* fp_glVDPAUInitNV)(const GLvoid*, const GLvoid*);
extern fp_glVDPAUInitNV gladglVDPAUInitNV;
#define glVDPAUInitNV gladglVDPAUInitNV
typedef void (* fp_glVDPAUFiniNV)();
extern fp_glVDPAUFiniNV gladglVDPAUFiniNV;
#define glVDPAUFiniNV gladglVDPAUFiniNV
typedef GLvdpauSurfaceNV (* fp_glVDPAURegisterVideoSurfaceNV)(const GLvoid*, GLenum, GLsizei, const GLuint*);
extern fp_glVDPAURegisterVideoSurfaceNV gladglVDPAURegisterVideoSurfaceNV;
#define glVDPAURegisterVideoSurfaceNV gladglVDPAURegisterVideoSurfaceNV
typedef GLvdpauSurfaceNV (* fp_glVDPAURegisterOutputSurfaceNV)(const GLvoid*, GLenum, GLsizei, const GLuint*);
extern fp_glVDPAURegisterOutputSurfaceNV gladglVDPAURegisterOutputSurfaceNV;
#define glVDPAURegisterOutputSurfaceNV gladglVDPAURegisterOutputSurfaceNV
typedef void (* fp_glVDPAUIsSurfaceNV)(GLvdpauSurfaceNV);
extern fp_glVDPAUIsSurfaceNV gladglVDPAUIsSurfaceNV;
#define glVDPAUIsSurfaceNV gladglVDPAUIsSurfaceNV
typedef void (* fp_glVDPAUUnregisterSurfaceNV)(GLvdpauSurfaceNV);
extern fp_glVDPAUUnregisterSurfaceNV gladglVDPAUUnregisterSurfaceNV;
#define glVDPAUUnregisterSurfaceNV gladglVDPAUUnregisterSurfaceNV
typedef void (* fp_glVDPAUGetSurfaceivNV)(GLvdpauSurfaceNV, GLenum, GLsizei, GLsizei*, GLint*);
extern fp_glVDPAUGetSurfaceivNV gladglVDPAUGetSurfaceivNV;
#define glVDPAUGetSurfaceivNV gladglVDPAUGetSurfaceivNV
typedef void (* fp_glVDPAUSurfaceAccessNV)(GLvdpauSurfaceNV, GLenum);
extern fp_glVDPAUSurfaceAccessNV gladglVDPAUSurfaceAccessNV;
#define glVDPAUSurfaceAccessNV gladglVDPAUSurfaceAccessNV
typedef void (* fp_glVDPAUMapSurfacesNV)(GLsizei, const GLvdpauSurfaceNV*);
extern fp_glVDPAUMapSurfacesNV gladglVDPAUMapSurfacesNV;
#define glVDPAUMapSurfacesNV gladglVDPAUMapSurfacesNV
typedef void (* fp_glVDPAUUnmapSurfacesNV)(GLsizei, const GLvdpauSurfaceNV*);
extern fp_glVDPAUUnmapSurfacesNV gladglVDPAUUnmapSurfacesNV;
#define glVDPAUUnmapSurfacesNV gladglVDPAUUnmapSurfacesNV
int GL_ARB_occlusion_query2;
int GL_ARB_internalformat_query2;
#define GL_SRGB_DECODE_ARB 0x8299
int GL_EXT_texture_filter_anisotropic;
#define GL_TEXTURE_MAX_ANISOTROPY_EXT 0x84FE
#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
int GL_SUN_vertex;
typedef void (* fp_glColor4ubVertex2fSUN)(GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat);
extern fp_glColor4ubVertex2fSUN gladglColor4ubVertex2fSUN;
#define glColor4ubVertex2fSUN gladglColor4ubVertex2fSUN
typedef void (* fp_glColor4ubVertex2fvSUN)(const GLubyte*, const GLfloat*);
extern fp_glColor4ubVertex2fvSUN gladglColor4ubVertex2fvSUN;
#define glColor4ubVertex2fvSUN gladglColor4ubVertex2fvSUN
typedef void (* fp_glColor4ubVertex3fSUN)(GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat);
extern fp_glColor4ubVertex3fSUN gladglColor4ubVertex3fSUN;
#define glColor4ubVertex3fSUN gladglColor4ubVertex3fSUN
typedef void (* fp_glColor4ubVertex3fvSUN)(const GLubyte*, const GLfloat*);
extern fp_glColor4ubVertex3fvSUN gladglColor4ubVertex3fvSUN;
#define glColor4ubVertex3fvSUN gladglColor4ubVertex3fvSUN
typedef void (* fp_glColor3fVertex3fSUN)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glColor3fVertex3fSUN gladglColor3fVertex3fSUN;
#define glColor3fVertex3fSUN gladglColor3fVertex3fSUN
typedef void (* fp_glColor3fVertex3fvSUN)(const GLfloat*, const GLfloat*);
extern fp_glColor3fVertex3fvSUN gladglColor3fVertex3fvSUN;
#define glColor3fVertex3fvSUN gladglColor3fVertex3fvSUN
typedef void (* fp_glNormal3fVertex3fSUN)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glNormal3fVertex3fSUN gladglNormal3fVertex3fSUN;
#define glNormal3fVertex3fSUN gladglNormal3fVertex3fSUN
typedef void (* fp_glNormal3fVertex3fvSUN)(const GLfloat*, const GLfloat*);
extern fp_glNormal3fVertex3fvSUN gladglNormal3fVertex3fvSUN;
#define glNormal3fVertex3fvSUN gladglNormal3fVertex3fvSUN
typedef void (* fp_glColor4fNormal3fVertex3fSUN)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glColor4fNormal3fVertex3fSUN gladglColor4fNormal3fVertex3fSUN;
#define glColor4fNormal3fVertex3fSUN gladglColor4fNormal3fVertex3fSUN
typedef void (* fp_glColor4fNormal3fVertex3fvSUN)(const GLfloat*, const GLfloat*, const GLfloat*);
extern fp_glColor4fNormal3fVertex3fvSUN gladglColor4fNormal3fVertex3fvSUN;
#define glColor4fNormal3fVertex3fvSUN gladglColor4fNormal3fVertex3fvSUN
typedef void (* fp_glTexCoord2fVertex3fSUN)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glTexCoord2fVertex3fSUN gladglTexCoord2fVertex3fSUN;
#define glTexCoord2fVertex3fSUN gladglTexCoord2fVertex3fSUN
typedef void (* fp_glTexCoord2fVertex3fvSUN)(const GLfloat*, const GLfloat*);
extern fp_glTexCoord2fVertex3fvSUN gladglTexCoord2fVertex3fvSUN;
#define glTexCoord2fVertex3fvSUN gladglTexCoord2fVertex3fvSUN
typedef void (* fp_glTexCoord4fVertex4fSUN)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glTexCoord4fVertex4fSUN gladglTexCoord4fVertex4fSUN;
#define glTexCoord4fVertex4fSUN gladglTexCoord4fVertex4fSUN
typedef void (* fp_glTexCoord4fVertex4fvSUN)(const GLfloat*, const GLfloat*);
extern fp_glTexCoord4fVertex4fvSUN gladglTexCoord4fVertex4fvSUN;
#define glTexCoord4fVertex4fvSUN gladglTexCoord4fVertex4fvSUN
typedef void (* fp_glTexCoord2fColor4ubVertex3fSUN)(GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat);
extern fp_glTexCoord2fColor4ubVertex3fSUN gladglTexCoord2fColor4ubVertex3fSUN;
#define glTexCoord2fColor4ubVertex3fSUN gladglTexCoord2fColor4ubVertex3fSUN
typedef void (* fp_glTexCoord2fColor4ubVertex3fvSUN)(const GLfloat*, const GLubyte*, const GLfloat*);
extern fp_glTexCoord2fColor4ubVertex3fvSUN gladglTexCoord2fColor4ubVertex3fvSUN;
#define glTexCoord2fColor4ubVertex3fvSUN gladglTexCoord2fColor4ubVertex3fvSUN
typedef void (* fp_glTexCoord2fColor3fVertex3fSUN)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glTexCoord2fColor3fVertex3fSUN gladglTexCoord2fColor3fVertex3fSUN;
#define glTexCoord2fColor3fVertex3fSUN gladglTexCoord2fColor3fVertex3fSUN
typedef void (* fp_glTexCoord2fColor3fVertex3fvSUN)(const GLfloat*, const GLfloat*, const GLfloat*);
extern fp_glTexCoord2fColor3fVertex3fvSUN gladglTexCoord2fColor3fVertex3fvSUN;
#define glTexCoord2fColor3fVertex3fvSUN gladglTexCoord2fColor3fVertex3fvSUN
typedef void (* fp_glTexCoord2fNormal3fVertex3fSUN)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glTexCoord2fNormal3fVertex3fSUN gladglTexCoord2fNormal3fVertex3fSUN;
#define glTexCoord2fNormal3fVertex3fSUN gladglTexCoord2fNormal3fVertex3fSUN
typedef void (* fp_glTexCoord2fNormal3fVertex3fvSUN)(const GLfloat*, const GLfloat*, const GLfloat*);
extern fp_glTexCoord2fNormal3fVertex3fvSUN gladglTexCoord2fNormal3fVertex3fvSUN;
#define glTexCoord2fNormal3fVertex3fvSUN gladglTexCoord2fNormal3fVertex3fvSUN
typedef void (* fp_glTexCoord2fColor4fNormal3fVertex3fSUN)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glTexCoord2fColor4fNormal3fVertex3fSUN gladglTexCoord2fColor4fNormal3fVertex3fSUN;
#define glTexCoord2fColor4fNormal3fVertex3fSUN gladglTexCoord2fColor4fNormal3fVertex3fSUN
typedef void (* fp_glTexCoord2fColor4fNormal3fVertex3fvSUN)(const GLfloat*, const GLfloat*, const GLfloat*, const GLfloat*);
extern fp_glTexCoord2fColor4fNormal3fVertex3fvSUN gladglTexCoord2fColor4fNormal3fVertex3fvSUN;
#define glTexCoord2fColor4fNormal3fVertex3fvSUN gladglTexCoord2fColor4fNormal3fVertex3fvSUN
typedef void (* fp_glTexCoord4fColor4fNormal3fVertex4fSUN)(GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glTexCoord4fColor4fNormal3fVertex4fSUN gladglTexCoord4fColor4fNormal3fVertex4fSUN;
#define glTexCoord4fColor4fNormal3fVertex4fSUN gladglTexCoord4fColor4fNormal3fVertex4fSUN
typedef void (* fp_glTexCoord4fColor4fNormal3fVertex4fvSUN)(const GLfloat*, const GLfloat*, const GLfloat*, const GLfloat*);
extern fp_glTexCoord4fColor4fNormal3fVertex4fvSUN gladglTexCoord4fColor4fNormal3fVertex4fvSUN;
#define glTexCoord4fColor4fNormal3fVertex4fvSUN gladglTexCoord4fColor4fNormal3fVertex4fvSUN
typedef void (* fp_glReplacementCodeuiVertex3fSUN)(GLuint, GLfloat, GLfloat, GLfloat);
extern fp_glReplacementCodeuiVertex3fSUN gladglReplacementCodeuiVertex3fSUN;
#define glReplacementCodeuiVertex3fSUN gladglReplacementCodeuiVertex3fSUN
typedef void (* fp_glReplacementCodeuiVertex3fvSUN)(const GLuint*, const GLfloat*);
extern fp_glReplacementCodeuiVertex3fvSUN gladglReplacementCodeuiVertex3fvSUN;
#define glReplacementCodeuiVertex3fvSUN gladglReplacementCodeuiVertex3fvSUN
typedef void (* fp_glReplacementCodeuiColor4ubVertex3fSUN)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat);
extern fp_glReplacementCodeuiColor4ubVertex3fSUN gladglReplacementCodeuiColor4ubVertex3fSUN;
#define glReplacementCodeuiColor4ubVertex3fSUN gladglReplacementCodeuiColor4ubVertex3fSUN
typedef void (* fp_glReplacementCodeuiColor4ubVertex3fvSUN)(const GLuint*, const GLubyte*, const GLfloat*);
extern fp_glReplacementCodeuiColor4ubVertex3fvSUN gladglReplacementCodeuiColor4ubVertex3fvSUN;
#define glReplacementCodeuiColor4ubVertex3fvSUN gladglReplacementCodeuiColor4ubVertex3fvSUN
typedef void (* fp_glReplacementCodeuiColor3fVertex3fSUN)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glReplacementCodeuiColor3fVertex3fSUN gladglReplacementCodeuiColor3fVertex3fSUN;
#define glReplacementCodeuiColor3fVertex3fSUN gladglReplacementCodeuiColor3fVertex3fSUN
typedef void (* fp_glReplacementCodeuiColor3fVertex3fvSUN)(const GLuint*, const GLfloat*, const GLfloat*);
extern fp_glReplacementCodeuiColor3fVertex3fvSUN gladglReplacementCodeuiColor3fVertex3fvSUN;
#define glReplacementCodeuiColor3fVertex3fvSUN gladglReplacementCodeuiColor3fVertex3fvSUN
typedef void (* fp_glReplacementCodeuiNormal3fVertex3fSUN)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glReplacementCodeuiNormal3fVertex3fSUN gladglReplacementCodeuiNormal3fVertex3fSUN;
#define glReplacementCodeuiNormal3fVertex3fSUN gladglReplacementCodeuiNormal3fVertex3fSUN
typedef void (* fp_glReplacementCodeuiNormal3fVertex3fvSUN)(const GLuint*, const GLfloat*, const GLfloat*);
extern fp_glReplacementCodeuiNormal3fVertex3fvSUN gladglReplacementCodeuiNormal3fVertex3fvSUN;
#define glReplacementCodeuiNormal3fVertex3fvSUN gladglReplacementCodeuiNormal3fVertex3fvSUN
typedef void (* fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glReplacementCodeuiColor4fNormal3fVertex3fSUN gladglReplacementCodeuiColor4fNormal3fVertex3fSUN;
#define glReplacementCodeuiColor4fNormal3fVertex3fSUN gladglReplacementCodeuiColor4fNormal3fVertex3fSUN
typedef void (* fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN)(const GLuint*, const GLfloat*, const GLfloat*, const GLfloat*);
extern fp_glReplacementCodeuiColor4fNormal3fVertex3fvSUN gladglReplacementCodeuiColor4fNormal3fVertex3fvSUN;
#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN gladglReplacementCodeuiColor4fNormal3fVertex3fvSUN
typedef void (* fp_glReplacementCodeuiTexCoord2fVertex3fSUN)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glReplacementCodeuiTexCoord2fVertex3fSUN gladglReplacementCodeuiTexCoord2fVertex3fSUN;
#define glReplacementCodeuiTexCoord2fVertex3fSUN gladglReplacementCodeuiTexCoord2fVertex3fSUN
typedef void (* fp_glReplacementCodeuiTexCoord2fVertex3fvSUN)(const GLuint*, const GLfloat*, const GLfloat*);
extern fp_glReplacementCodeuiTexCoord2fVertex3fvSUN gladglReplacementCodeuiTexCoord2fVertex3fvSUN;
#define glReplacementCodeuiTexCoord2fVertex3fvSUN gladglReplacementCodeuiTexCoord2fVertex3fvSUN
typedef void (* fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN gladglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN gladglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
typedef void (* fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)(const GLuint*, const GLfloat*, const GLfloat*, const GLfloat*);
extern fp_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN gladglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN gladglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
typedef void (* fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat);
extern fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN gladglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN gladglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
typedef void (* fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)(const GLuint*, const GLfloat*, const GLfloat*, const GLfloat*, const GLfloat*);
extern fp_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN gladglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN gladglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
int GL_SGIX_igloo_interface;
typedef void (* fp_glIglooInterfaceSGIX)(GLenum, const GLvoid*);
extern fp_glIglooInterfaceSGIX gladglIglooInterfaceSGIX;
#define glIglooInterfaceSGIX gladglIglooInterfaceSGIX
int GL_SGIS_texture_lod;
#define GL_TEXTURE_MIN_LOD_SGIS 0x813A
#define GL_TEXTURE_MAX_LOD_SGIS 0x813B
#define GL_TEXTURE_BASE_LEVEL_SGIS 0x813C
#define GL_TEXTURE_MAX_LEVEL_SGIS 0x813D
int GL_NV_vertex_program3;
int GL_ARB_draw_indirect;
int GL_NV_vertex_program4;
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV 0x88FD
typedef void (* fp_glVertexAttribI1iEXT)(GLuint, GLint);
extern fp_glVertexAttribI1iEXT gladglVertexAttribI1iEXT;
#define glVertexAttribI1iEXT gladglVertexAttribI1iEXT
typedef void (* fp_glVertexAttribI2iEXT)(GLuint, GLint, GLint);
extern fp_glVertexAttribI2iEXT gladglVertexAttribI2iEXT;
#define glVertexAttribI2iEXT gladglVertexAttribI2iEXT
typedef void (* fp_glVertexAttribI3iEXT)(GLuint, GLint, GLint, GLint);
extern fp_glVertexAttribI3iEXT gladglVertexAttribI3iEXT;
#define glVertexAttribI3iEXT gladglVertexAttribI3iEXT
typedef void (* fp_glVertexAttribI4iEXT)(GLuint, GLint, GLint, GLint, GLint);
extern fp_glVertexAttribI4iEXT gladglVertexAttribI4iEXT;
#define glVertexAttribI4iEXT gladglVertexAttribI4iEXT
typedef void (* fp_glVertexAttribI1uiEXT)(GLuint, GLuint);
extern fp_glVertexAttribI1uiEXT gladglVertexAttribI1uiEXT;
#define glVertexAttribI1uiEXT gladglVertexAttribI1uiEXT
typedef void (* fp_glVertexAttribI2uiEXT)(GLuint, GLuint, GLuint);
extern fp_glVertexAttribI2uiEXT gladglVertexAttribI2uiEXT;
#define glVertexAttribI2uiEXT gladglVertexAttribI2uiEXT
typedef void (* fp_glVertexAttribI3uiEXT)(GLuint, GLuint, GLuint, GLuint);
extern fp_glVertexAttribI3uiEXT gladglVertexAttribI3uiEXT;
#define glVertexAttribI3uiEXT gladglVertexAttribI3uiEXT
typedef void (* fp_glVertexAttribI4uiEXT)(GLuint, GLuint, GLuint, GLuint, GLuint);
extern fp_glVertexAttribI4uiEXT gladglVertexAttribI4uiEXT;
#define glVertexAttribI4uiEXT gladglVertexAttribI4uiEXT
typedef void (* fp_glVertexAttribI1ivEXT)(GLuint, const GLint*);
extern fp_glVertexAttribI1ivEXT gladglVertexAttribI1ivEXT;
#define glVertexAttribI1ivEXT gladglVertexAttribI1ivEXT
typedef void (* fp_glVertexAttribI2ivEXT)(GLuint, const GLint*);
extern fp_glVertexAttribI2ivEXT gladglVertexAttribI2ivEXT;
#define glVertexAttribI2ivEXT gladglVertexAttribI2ivEXT
typedef void (* fp_glVertexAttribI3ivEXT)(GLuint, const GLint*);
extern fp_glVertexAttribI3ivEXT gladglVertexAttribI3ivEXT;
#define glVertexAttribI3ivEXT gladglVertexAttribI3ivEXT
typedef void (* fp_glVertexAttribI4ivEXT)(GLuint, const GLint*);
extern fp_glVertexAttribI4ivEXT gladglVertexAttribI4ivEXT;
#define glVertexAttribI4ivEXT gladglVertexAttribI4ivEXT
typedef void (* fp_glVertexAttribI1uivEXT)(GLuint, const GLuint*);
extern fp_glVertexAttribI1uivEXT gladglVertexAttribI1uivEXT;
#define glVertexAttribI1uivEXT gladglVertexAttribI1uivEXT
typedef void (* fp_glVertexAttribI2uivEXT)(GLuint, const GLuint*);
extern fp_glVertexAttribI2uivEXT gladglVertexAttribI2uivEXT;
#define glVertexAttribI2uivEXT gladglVertexAttribI2uivEXT
typedef void (* fp_glVertexAttribI3uivEXT)(GLuint, const GLuint*);
extern fp_glVertexAttribI3uivEXT gladglVertexAttribI3uivEXT;
#define glVertexAttribI3uivEXT gladglVertexAttribI3uivEXT
typedef void (* fp_glVertexAttribI4uivEXT)(GLuint, const GLuint*);
extern fp_glVertexAttribI4uivEXT gladglVertexAttribI4uivEXT;
#define glVertexAttribI4uivEXT gladglVertexAttribI4uivEXT
typedef void (* fp_glVertexAttribI4bvEXT)(GLuint, const GLbyte*);
extern fp_glVertexAttribI4bvEXT gladglVertexAttribI4bvEXT;
#define glVertexAttribI4bvEXT gladglVertexAttribI4bvEXT
typedef void (* fp_glVertexAttribI4svEXT)(GLuint, const GLshort*);
extern fp_glVertexAttribI4svEXT gladglVertexAttribI4svEXT;
#define glVertexAttribI4svEXT gladglVertexAttribI4svEXT
typedef void (* fp_glVertexAttribI4ubvEXT)(GLuint, const GLubyte*);
extern fp_glVertexAttribI4ubvEXT gladglVertexAttribI4ubvEXT;
#define glVertexAttribI4ubvEXT gladglVertexAttribI4ubvEXT
typedef void (* fp_glVertexAttribI4usvEXT)(GLuint, const GLushort*);
extern fp_glVertexAttribI4usvEXT gladglVertexAttribI4usvEXT;
#define glVertexAttribI4usvEXT gladglVertexAttribI4usvEXT
typedef void (* fp_glVertexAttribIPointerEXT)(GLuint, GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glVertexAttribIPointerEXT gladglVertexAttribIPointerEXT;
#define glVertexAttribIPointerEXT gladglVertexAttribIPointerEXT
typedef void (* fp_glGetVertexAttribIivEXT)(GLuint, GLenum, GLint*);
extern fp_glGetVertexAttribIivEXT gladglGetVertexAttribIivEXT;
#define glGetVertexAttribIivEXT gladglGetVertexAttribIivEXT
typedef void (* fp_glGetVertexAttribIuivEXT)(GLuint, GLenum, GLuint*);
extern fp_glGetVertexAttribIuivEXT gladglGetVertexAttribIuivEXT;
#define glGetVertexAttribIuivEXT gladglGetVertexAttribIuivEXT
int GL_AMD_transform_feedback3_lines_triangles;
int GL_SGIS_fog_function;
#define GL_FOG_FUNC_SGIS 0x812A
#define GL_FOG_FUNC_POINTS_SGIS 0x812B
#define GL_MAX_FOG_FUNC_POINTS_SGIS 0x812C
typedef void (* fp_glFogFuncSGIS)(GLsizei, const GLfloat*);
extern fp_glFogFuncSGIS gladglFogFuncSGIS;
#define glFogFuncSGIS gladglFogFuncSGIS
typedef void (* fp_glGetFogFuncSGIS)(GLfloat*);
extern fp_glGetFogFuncSGIS gladglGetFogFuncSGIS;
#define glGetFogFuncSGIS gladglGetFogFuncSGIS
int GL_EXT_x11_sync_object;
#define GL_SYNC_X11_FENCE_EXT 0x90E1
typedef GLsync (* fp_glImportSyncEXT)(GLenum, GLintptr, GLbitfield);
extern fp_glImportSyncEXT gladglImportSyncEXT;
#define glImportSyncEXT gladglImportSyncEXT
int GL_ARB_sync;
int GL_ARB_compute_variable_group_size;
#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB 0x9344
#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB 0x90EB
#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB 0x9345
#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB 0x91BF
typedef void (* fp_glDispatchComputeGroupSizeARB)(GLuint, GLuint, GLuint, GLuint, GLuint, GLuint);
extern fp_glDispatchComputeGroupSizeARB gladglDispatchComputeGroupSizeARB;
#define glDispatchComputeGroupSizeARB gladglDispatchComputeGroupSizeARB
int GL_OES_fixed_point;
#define GL_FIXED_OES 0x140C
typedef void (* fp_glAlphaFuncxOES)(GLenum, GLfixed);
extern fp_glAlphaFuncxOES gladglAlphaFuncxOES;
#define glAlphaFuncxOES gladglAlphaFuncxOES
typedef void (* fp_glClearColorxOES)(GLfixed, GLfixed, GLfixed, GLfixed);
extern fp_glClearColorxOES gladglClearColorxOES;
#define glClearColorxOES gladglClearColorxOES
typedef void (* fp_glClearDepthxOES)(GLfixed);
extern fp_glClearDepthxOES gladglClearDepthxOES;
#define glClearDepthxOES gladglClearDepthxOES
typedef void (* fp_glClipPlanexOES)(GLenum, const GLfixed*);
extern fp_glClipPlanexOES gladglClipPlanexOES;
#define glClipPlanexOES gladglClipPlanexOES
typedef void (* fp_glColor4xOES)(GLfixed, GLfixed, GLfixed, GLfixed);
extern fp_glColor4xOES gladglColor4xOES;
#define glColor4xOES gladglColor4xOES
typedef void (* fp_glDepthRangexOES)(GLfixed, GLfixed);
extern fp_glDepthRangexOES gladglDepthRangexOES;
#define glDepthRangexOES gladglDepthRangexOES
typedef void (* fp_glFogxOES)(GLenum, GLfixed);
extern fp_glFogxOES gladglFogxOES;
#define glFogxOES gladglFogxOES
typedef void (* fp_glFogxvOES)(GLenum, const GLfixed*);
extern fp_glFogxvOES gladglFogxvOES;
#define glFogxvOES gladglFogxvOES
typedef void (* fp_glFrustumxOES)(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed);
extern fp_glFrustumxOES gladglFrustumxOES;
#define glFrustumxOES gladglFrustumxOES
typedef void (* fp_glGetClipPlanexOES)(GLenum, GLfixed*);
extern fp_glGetClipPlanexOES gladglGetClipPlanexOES;
#define glGetClipPlanexOES gladglGetClipPlanexOES
typedef void (* fp_glGetFixedvOES)(GLenum, GLfixed*);
extern fp_glGetFixedvOES gladglGetFixedvOES;
#define glGetFixedvOES gladglGetFixedvOES
typedef void (* fp_glGetTexEnvxvOES)(GLenum, GLenum, GLfixed*);
extern fp_glGetTexEnvxvOES gladglGetTexEnvxvOES;
#define glGetTexEnvxvOES gladglGetTexEnvxvOES
typedef void (* fp_glGetTexParameterxvOES)(GLenum, GLenum, GLfixed*);
extern fp_glGetTexParameterxvOES gladglGetTexParameterxvOES;
#define glGetTexParameterxvOES gladglGetTexParameterxvOES
typedef void (* fp_glLightModelxOES)(GLenum, GLfixed);
extern fp_glLightModelxOES gladglLightModelxOES;
#define glLightModelxOES gladglLightModelxOES
typedef void (* fp_glLightModelxvOES)(GLenum, const GLfixed*);
extern fp_glLightModelxvOES gladglLightModelxvOES;
#define glLightModelxvOES gladglLightModelxvOES
typedef void (* fp_glLightxOES)(GLenum, GLenum, GLfixed);
extern fp_glLightxOES gladglLightxOES;
#define glLightxOES gladglLightxOES
typedef void (* fp_glLightxvOES)(GLenum, GLenum, const GLfixed*);
extern fp_glLightxvOES gladglLightxvOES;
#define glLightxvOES gladglLightxvOES
typedef void (* fp_glLineWidthxOES)(GLfixed);
extern fp_glLineWidthxOES gladglLineWidthxOES;
#define glLineWidthxOES gladglLineWidthxOES
typedef void (* fp_glLoadMatrixxOES)(const GLfixed*);
extern fp_glLoadMatrixxOES gladglLoadMatrixxOES;
#define glLoadMatrixxOES gladglLoadMatrixxOES
typedef void (* fp_glMaterialxOES)(GLenum, GLenum, GLfixed);
extern fp_glMaterialxOES gladglMaterialxOES;
#define glMaterialxOES gladglMaterialxOES
typedef void (* fp_glMaterialxvOES)(GLenum, GLenum, const GLfixed*);
extern fp_glMaterialxvOES gladglMaterialxvOES;
#define glMaterialxvOES gladglMaterialxvOES
typedef void (* fp_glMultMatrixxOES)(const GLfixed*);
extern fp_glMultMatrixxOES gladglMultMatrixxOES;
#define glMultMatrixxOES gladglMultMatrixxOES
typedef void (* fp_glMultiTexCoord4xOES)(GLenum, GLfixed, GLfixed, GLfixed, GLfixed);
extern fp_glMultiTexCoord4xOES gladglMultiTexCoord4xOES;
#define glMultiTexCoord4xOES gladglMultiTexCoord4xOES
typedef void (* fp_glNormal3xOES)(GLfixed, GLfixed, GLfixed);
extern fp_glNormal3xOES gladglNormal3xOES;
#define glNormal3xOES gladglNormal3xOES
typedef void (* fp_glOrthoxOES)(GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed);
extern fp_glOrthoxOES gladglOrthoxOES;
#define glOrthoxOES gladglOrthoxOES
typedef void (* fp_glPointParameterxvOES)(GLenum, const GLfixed*);
extern fp_glPointParameterxvOES gladglPointParameterxvOES;
#define glPointParameterxvOES gladglPointParameterxvOES
typedef void (* fp_glPointSizexOES)(GLfixed);
extern fp_glPointSizexOES gladglPointSizexOES;
#define glPointSizexOES gladglPointSizexOES
typedef void (* fp_glPolygonOffsetxOES)(GLfixed, GLfixed);
extern fp_glPolygonOffsetxOES gladglPolygonOffsetxOES;
#define glPolygonOffsetxOES gladglPolygonOffsetxOES
typedef void (* fp_glRotatexOES)(GLfixed, GLfixed, GLfixed, GLfixed);
extern fp_glRotatexOES gladglRotatexOES;
#define glRotatexOES gladglRotatexOES
typedef void (* fp_glSampleCoverageOES)(GLfixed, GLboolean);
extern fp_glSampleCoverageOES gladglSampleCoverageOES;
#define glSampleCoverageOES gladglSampleCoverageOES
typedef void (* fp_glScalexOES)(GLfixed, GLfixed, GLfixed);
extern fp_glScalexOES gladglScalexOES;
#define glScalexOES gladglScalexOES
typedef void (* fp_glTexEnvxOES)(GLenum, GLenum, GLfixed);
extern fp_glTexEnvxOES gladglTexEnvxOES;
#define glTexEnvxOES gladglTexEnvxOES
typedef void (* fp_glTexEnvxvOES)(GLenum, GLenum, const GLfixed*);
extern fp_glTexEnvxvOES gladglTexEnvxvOES;
#define glTexEnvxvOES gladglTexEnvxvOES
typedef void (* fp_glTexParameterxOES)(GLenum, GLenum, GLfixed);
extern fp_glTexParameterxOES gladglTexParameterxOES;
#define glTexParameterxOES gladglTexParameterxOES
typedef void (* fp_glTexParameterxvOES)(GLenum, GLenum, const GLfixed*);
extern fp_glTexParameterxvOES gladglTexParameterxvOES;
#define glTexParameterxvOES gladglTexParameterxvOES
typedef void (* fp_glTranslatexOES)(GLfixed, GLfixed, GLfixed);
extern fp_glTranslatexOES gladglTranslatexOES;
#define glTranslatexOES gladglTranslatexOES
typedef void (* fp_glGetLightxvOES)(GLenum, GLenum, GLfixed*);
extern fp_glGetLightxvOES gladglGetLightxvOES;
#define glGetLightxvOES gladglGetLightxvOES
typedef void (* fp_glGetMaterialxvOES)(GLenum, GLenum, GLfixed*);
extern fp_glGetMaterialxvOES gladglGetMaterialxvOES;
#define glGetMaterialxvOES gladglGetMaterialxvOES
typedef void (* fp_glPointParameterxOES)(GLenum, GLfixed);
extern fp_glPointParameterxOES gladglPointParameterxOES;
#define glPointParameterxOES gladglPointParameterxOES
typedef void (* fp_glSampleCoveragexOES)(GLclampx, GLboolean);
extern fp_glSampleCoveragexOES gladglSampleCoveragexOES;
#define glSampleCoveragexOES gladglSampleCoveragexOES
typedef void (* fp_glAccumxOES)(GLenum, GLfixed);
extern fp_glAccumxOES gladglAccumxOES;
#define glAccumxOES gladglAccumxOES
typedef void (* fp_glBitmapxOES)(GLsizei, GLsizei, GLfixed, GLfixed, GLfixed, GLfixed, const GLubyte*);
extern fp_glBitmapxOES gladglBitmapxOES;
#define glBitmapxOES gladglBitmapxOES
typedef void (* fp_glBlendColorxOES)(GLfixed, GLfixed, GLfixed, GLfixed);
extern fp_glBlendColorxOES gladglBlendColorxOES;
#define glBlendColorxOES gladglBlendColorxOES
typedef void (* fp_glClearAccumxOES)(GLfixed, GLfixed, GLfixed, GLfixed);
extern fp_glClearAccumxOES gladglClearAccumxOES;
#define glClearAccumxOES gladglClearAccumxOES
typedef void (* fp_glColor3xOES)(GLfixed, GLfixed, GLfixed);
extern fp_glColor3xOES gladglColor3xOES;
#define glColor3xOES gladglColor3xOES
typedef void (* fp_glColor3xvOES)(const GLfixed*);
extern fp_glColor3xvOES gladglColor3xvOES;
#define glColor3xvOES gladglColor3xvOES
typedef void (* fp_glColor4xvOES)(const GLfixed*);
extern fp_glColor4xvOES gladglColor4xvOES;
#define glColor4xvOES gladglColor4xvOES
typedef void (* fp_glConvolutionParameterxOES)(GLenum, GLenum, GLfixed);
extern fp_glConvolutionParameterxOES gladglConvolutionParameterxOES;
#define glConvolutionParameterxOES gladglConvolutionParameterxOES
typedef void (* fp_glConvolutionParameterxvOES)(GLenum, GLenum, const GLfixed*);
extern fp_glConvolutionParameterxvOES gladglConvolutionParameterxvOES;
#define glConvolutionParameterxvOES gladglConvolutionParameterxvOES
typedef void (* fp_glEvalCoord1xOES)(GLfixed);
extern fp_glEvalCoord1xOES gladglEvalCoord1xOES;
#define glEvalCoord1xOES gladglEvalCoord1xOES
typedef void (* fp_glEvalCoord1xvOES)(const GLfixed*);
extern fp_glEvalCoord1xvOES gladglEvalCoord1xvOES;
#define glEvalCoord1xvOES gladglEvalCoord1xvOES
typedef void (* fp_glEvalCoord2xOES)(GLfixed, GLfixed);
extern fp_glEvalCoord2xOES gladglEvalCoord2xOES;
#define glEvalCoord2xOES gladglEvalCoord2xOES
typedef void (* fp_glEvalCoord2xvOES)(const GLfixed*);
extern fp_glEvalCoord2xvOES gladglEvalCoord2xvOES;
#define glEvalCoord2xvOES gladglEvalCoord2xvOES
typedef void (* fp_glFeedbackBufferxOES)(GLsizei, GLenum, const GLfixed*);
extern fp_glFeedbackBufferxOES gladglFeedbackBufferxOES;
#define glFeedbackBufferxOES gladglFeedbackBufferxOES
typedef void (* fp_glGetConvolutionParameterxvOES)(GLenum, GLenum, GLfixed*);
extern fp_glGetConvolutionParameterxvOES gladglGetConvolutionParameterxvOES;
#define glGetConvolutionParameterxvOES gladglGetConvolutionParameterxvOES
typedef void (* fp_glGetHistogramParameterxvOES)(GLenum, GLenum, GLfixed*);
extern fp_glGetHistogramParameterxvOES gladglGetHistogramParameterxvOES;
#define glGetHistogramParameterxvOES gladglGetHistogramParameterxvOES
typedef void (* fp_glGetLightxOES)(GLenum, GLenum, GLfixed*);
extern fp_glGetLightxOES gladglGetLightxOES;
#define glGetLightxOES gladglGetLightxOES
typedef void (* fp_glGetMapxvOES)(GLenum, GLenum, GLfixed*);
extern fp_glGetMapxvOES gladglGetMapxvOES;
#define glGetMapxvOES gladglGetMapxvOES
typedef void (* fp_glGetMaterialxOES)(GLenum, GLenum, GLfixed);
extern fp_glGetMaterialxOES gladglGetMaterialxOES;
#define glGetMaterialxOES gladglGetMaterialxOES
typedef void (* fp_glGetPixelMapxv)(GLenum, GLint, GLfixed*);
extern fp_glGetPixelMapxv gladglGetPixelMapxv;
#define glGetPixelMapxv gladglGetPixelMapxv
typedef void (* fp_glGetTexGenxvOES)(GLenum, GLenum, GLfixed*);
extern fp_glGetTexGenxvOES gladglGetTexGenxvOES;
#define glGetTexGenxvOES gladglGetTexGenxvOES
typedef void (* fp_glGetTexLevelParameterxvOES)(GLenum, GLint, GLenum, GLfixed*);
extern fp_glGetTexLevelParameterxvOES gladglGetTexLevelParameterxvOES;
#define glGetTexLevelParameterxvOES gladglGetTexLevelParameterxvOES
typedef void (* fp_glIndexxOES)(GLfixed);
extern fp_glIndexxOES gladglIndexxOES;
#define glIndexxOES gladglIndexxOES
typedef void (* fp_glIndexxvOES)(const GLfixed*);
extern fp_glIndexxvOES gladglIndexxvOES;
#define glIndexxvOES gladglIndexxvOES
typedef void (* fp_glLoadTransposeMatrixxOES)(const GLfixed*);
extern fp_glLoadTransposeMatrixxOES gladglLoadTransposeMatrixxOES;
#define glLoadTransposeMatrixxOES gladglLoadTransposeMatrixxOES
typedef void (* fp_glMap1xOES)(GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed);
extern fp_glMap1xOES gladglMap1xOES;
#define glMap1xOES gladglMap1xOES
typedef void (* fp_glMap2xOES)(GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed, GLfixed, GLint, GLint, GLfixed);
extern fp_glMap2xOES gladglMap2xOES;
#define glMap2xOES gladglMap2xOES
typedef void (* fp_glMapGrid1xOES)(GLint, GLfixed, GLfixed);
extern fp_glMapGrid1xOES gladglMapGrid1xOES;
#define glMapGrid1xOES gladglMapGrid1xOES
typedef void (* fp_glMapGrid2xOES)(GLint, GLfixed, GLfixed, GLfixed, GLfixed);
extern fp_glMapGrid2xOES gladglMapGrid2xOES;
#define glMapGrid2xOES gladglMapGrid2xOES
typedef void (* fp_glMultTransposeMatrixxOES)(const GLfixed*);
extern fp_glMultTransposeMatrixxOES gladglMultTransposeMatrixxOES;
#define glMultTransposeMatrixxOES gladglMultTransposeMatrixxOES
typedef void (* fp_glMultiTexCoord1xOES)(GLenum, GLfixed);
extern fp_glMultiTexCoord1xOES gladglMultiTexCoord1xOES;
#define glMultiTexCoord1xOES gladglMultiTexCoord1xOES
typedef void (* fp_glMultiTexCoord1xvOES)(GLenum, const GLfixed*);
extern fp_glMultiTexCoord1xvOES gladglMultiTexCoord1xvOES;
#define glMultiTexCoord1xvOES gladglMultiTexCoord1xvOES
typedef void (* fp_glMultiTexCoord2xOES)(GLenum, GLfixed, GLfixed);
extern fp_glMultiTexCoord2xOES gladglMultiTexCoord2xOES;
#define glMultiTexCoord2xOES gladglMultiTexCoord2xOES
typedef void (* fp_glMultiTexCoord2xvOES)(GLenum, const GLfixed*);
extern fp_glMultiTexCoord2xvOES gladglMultiTexCoord2xvOES;
#define glMultiTexCoord2xvOES gladglMultiTexCoord2xvOES
typedef void (* fp_glMultiTexCoord3xOES)(GLenum, GLfixed, GLfixed, GLfixed);
extern fp_glMultiTexCoord3xOES gladglMultiTexCoord3xOES;
#define glMultiTexCoord3xOES gladglMultiTexCoord3xOES
typedef void (* fp_glMultiTexCoord3xvOES)(GLenum, const GLfixed*);
extern fp_glMultiTexCoord3xvOES gladglMultiTexCoord3xvOES;
#define glMultiTexCoord3xvOES gladglMultiTexCoord3xvOES
typedef void (* fp_glMultiTexCoord4xvOES)(GLenum, const GLfixed*);
extern fp_glMultiTexCoord4xvOES gladglMultiTexCoord4xvOES;
#define glMultiTexCoord4xvOES gladglMultiTexCoord4xvOES
typedef void (* fp_glNormal3xvOES)(const GLfixed*);
extern fp_glNormal3xvOES gladglNormal3xvOES;
#define glNormal3xvOES gladglNormal3xvOES
typedef void (* fp_glPassThroughxOES)(GLfixed);
extern fp_glPassThroughxOES gladglPassThroughxOES;
#define glPassThroughxOES gladglPassThroughxOES
typedef void (* fp_glPixelMapx)(GLenum, GLint, const GLfixed*);
extern fp_glPixelMapx gladglPixelMapx;
#define glPixelMapx gladglPixelMapx
typedef void (* fp_glPixelStorex)(GLenum, GLfixed);
extern fp_glPixelStorex gladglPixelStorex;
#define glPixelStorex gladglPixelStorex
typedef void (* fp_glPixelTransferxOES)(GLenum, GLfixed);
extern fp_glPixelTransferxOES gladglPixelTransferxOES;
#define glPixelTransferxOES gladglPixelTransferxOES
typedef void (* fp_glPixelZoomxOES)(GLfixed, GLfixed);
extern fp_glPixelZoomxOES gladglPixelZoomxOES;
#define glPixelZoomxOES gladglPixelZoomxOES
typedef void (* fp_glPrioritizeTexturesxOES)(GLsizei, const GLuint*, const GLfixed*);
extern fp_glPrioritizeTexturesxOES gladglPrioritizeTexturesxOES;
#define glPrioritizeTexturesxOES gladglPrioritizeTexturesxOES
typedef void (* fp_glRasterPos2xOES)(GLfixed, GLfixed);
extern fp_glRasterPos2xOES gladglRasterPos2xOES;
#define glRasterPos2xOES gladglRasterPos2xOES
typedef void (* fp_glRasterPos2xvOES)(const GLfixed*);
extern fp_glRasterPos2xvOES gladglRasterPos2xvOES;
#define glRasterPos2xvOES gladglRasterPos2xvOES
typedef void (* fp_glRasterPos3xOES)(GLfixed, GLfixed, GLfixed);
extern fp_glRasterPos3xOES gladglRasterPos3xOES;
#define glRasterPos3xOES gladglRasterPos3xOES
typedef void (* fp_glRasterPos3xvOES)(const GLfixed*);
extern fp_glRasterPos3xvOES gladglRasterPos3xvOES;
#define glRasterPos3xvOES gladglRasterPos3xvOES
typedef void (* fp_glRasterPos4xOES)(GLfixed, GLfixed, GLfixed, GLfixed);
extern fp_glRasterPos4xOES gladglRasterPos4xOES;
#define glRasterPos4xOES gladglRasterPos4xOES
typedef void (* fp_glRasterPos4xvOES)(const GLfixed*);
extern fp_glRasterPos4xvOES gladglRasterPos4xvOES;
#define glRasterPos4xvOES gladglRasterPos4xvOES
typedef void (* fp_glRectxOES)(GLfixed, GLfixed, GLfixed, GLfixed);
extern fp_glRectxOES gladglRectxOES;
#define glRectxOES gladglRectxOES
typedef void (* fp_glRectxvOES)(const GLfixed*, const GLfixed*);
extern fp_glRectxvOES gladglRectxvOES;
#define glRectxvOES gladglRectxvOES
typedef void (* fp_glTexCoord1xOES)(GLfixed);
extern fp_glTexCoord1xOES gladglTexCoord1xOES;
#define glTexCoord1xOES gladglTexCoord1xOES
typedef void (* fp_glTexCoord1xvOES)(const GLfixed*);
extern fp_glTexCoord1xvOES gladglTexCoord1xvOES;
#define glTexCoord1xvOES gladglTexCoord1xvOES
typedef void (* fp_glTexCoord2xOES)(GLfixed, GLfixed);
extern fp_glTexCoord2xOES gladglTexCoord2xOES;
#define glTexCoord2xOES gladglTexCoord2xOES
typedef void (* fp_glTexCoord2xvOES)(const GLfixed*);
extern fp_glTexCoord2xvOES gladglTexCoord2xvOES;
#define glTexCoord2xvOES gladglTexCoord2xvOES
typedef void (* fp_glTexCoord3xOES)(GLfixed, GLfixed, GLfixed);
extern fp_glTexCoord3xOES gladglTexCoord3xOES;
#define glTexCoord3xOES gladglTexCoord3xOES
typedef void (* fp_glTexCoord3xvOES)(const GLfixed*);
extern fp_glTexCoord3xvOES gladglTexCoord3xvOES;
#define glTexCoord3xvOES gladglTexCoord3xvOES
typedef void (* fp_glTexCoord4xOES)(GLfixed, GLfixed, GLfixed, GLfixed);
extern fp_glTexCoord4xOES gladglTexCoord4xOES;
#define glTexCoord4xOES gladglTexCoord4xOES
typedef void (* fp_glTexCoord4xvOES)(const GLfixed*);
extern fp_glTexCoord4xvOES gladglTexCoord4xvOES;
#define glTexCoord4xvOES gladglTexCoord4xvOES
typedef void (* fp_glTexGenxOES)(GLenum, GLenum, GLfixed);
extern fp_glTexGenxOES gladglTexGenxOES;
#define glTexGenxOES gladglTexGenxOES
typedef void (* fp_glTexGenxvOES)(GLenum, GLenum, const GLfixed*);
extern fp_glTexGenxvOES gladglTexGenxvOES;
#define glTexGenxvOES gladglTexGenxvOES
typedef void (* fp_glVertex2xOES)(GLfixed);
extern fp_glVertex2xOES gladglVertex2xOES;
#define glVertex2xOES gladglVertex2xOES
typedef void (* fp_glVertex2xvOES)(const GLfixed*);
extern fp_glVertex2xvOES gladglVertex2xvOES;
#define glVertex2xvOES gladglVertex2xvOES
typedef void (* fp_glVertex3xOES)(GLfixed, GLfixed);
extern fp_glVertex3xOES gladglVertex3xOES;
#define glVertex3xOES gladglVertex3xOES
typedef void (* fp_glVertex3xvOES)(const GLfixed*);
extern fp_glVertex3xvOES gladglVertex3xvOES;
#define glVertex3xvOES gladglVertex3xvOES
typedef void (* fp_glVertex4xOES)(GLfixed, GLfixed, GLfixed);
extern fp_glVertex4xOES gladglVertex4xOES;
#define glVertex4xOES gladglVertex4xOES
typedef void (* fp_glVertex4xvOES)(const GLfixed*);
extern fp_glVertex4xvOES gladglVertex4xvOES;
#define glVertex4xvOES gladglVertex4xvOES
int GL_EXT_framebuffer_multisample;
#define GL_RENDERBUFFER_SAMPLES_EXT 0x8CAB
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT 0x8D56
#define GL_MAX_SAMPLES_EXT 0x8D57
typedef void (* fp_glRenderbufferStorageMultisampleEXT)(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
extern fp_glRenderbufferStorageMultisampleEXT gladglRenderbufferStorageMultisampleEXT;
#define glRenderbufferStorageMultisampleEXT gladglRenderbufferStorageMultisampleEXT
int GL_ARB_gpu_shader5;
int GL_SGIS_texture4D;
#define GL_PACK_SKIP_VOLUMES_SGIS 0x8130
#define GL_PACK_IMAGE_DEPTH_SGIS 0x8131
#define GL_UNPACK_SKIP_VOLUMES_SGIS 0x8132
#define GL_UNPACK_IMAGE_DEPTH_SGIS 0x8133
#define GL_TEXTURE_4D_SGIS 0x8134
#define GL_PROXY_TEXTURE_4D_SGIS 0x8135
#define GL_TEXTURE_4DSIZE_SGIS 0x8136
#define GL_TEXTURE_WRAP_Q_SGIS 0x8137
#define GL_MAX_4D_TEXTURE_SIZE_SGIS 0x8138
#define GL_TEXTURE_4D_BINDING_SGIS 0x814F
typedef void (* fp_glTexImage4DSGIS)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
extern fp_glTexImage4DSGIS gladglTexImage4DSGIS;
#define glTexImage4DSGIS gladglTexImage4DSGIS
typedef void (* fp_glTexSubImage4DSGIS)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glTexSubImage4DSGIS gladglTexSubImage4DSGIS;
#define glTexSubImage4DSGIS gladglTexSubImage4DSGIS
int GL_EXT_texture3D;
#define GL_PACK_SKIP_IMAGES_EXT 0x806B
#define GL_PACK_IMAGE_HEIGHT_EXT 0x806C
#define GL_UNPACK_SKIP_IMAGES_EXT 0x806D
#define GL_UNPACK_IMAGE_HEIGHT_EXT 0x806E
#define GL_TEXTURE_3D_EXT 0x806F
#define GL_PROXY_TEXTURE_3D_EXT 0x8070
#define GL_TEXTURE_DEPTH_EXT 0x8071
#define GL_TEXTURE_WRAP_R_EXT 0x8072
#define GL_MAX_3D_TEXTURE_SIZE_EXT 0x8073
typedef void (* fp_glTexImage3DEXT)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
extern fp_glTexImage3DEXT gladglTexImage3DEXT;
#define glTexImage3DEXT gladglTexImage3DEXT
typedef void (* fp_glTexSubImage3DEXT)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
extern fp_glTexSubImage3DEXT gladglTexSubImage3DEXT;
#define glTexSubImage3DEXT gladglTexSubImage3DEXT
int GL_EXT_multisample;
#define GL_MULTISAMPLE_EXT 0x809D
#define GL_SAMPLE_ALPHA_TO_MASK_EXT 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE_EXT 0x809F
#define GL_SAMPLE_MASK_EXT 0x80A0
#define GL_1PASS_EXT 0x80A1
#define GL_2PASS_0_EXT 0x80A2
#define GL_2PASS_1_EXT 0x80A3
#define GL_4PASS_0_EXT 0x80A4
#define GL_4PASS_1_EXT 0x80A5
#define GL_4PASS_2_EXT 0x80A6
#define GL_4PASS_3_EXT 0x80A7
#define GL_SAMPLE_BUFFERS_EXT 0x80A8
#define GL_SAMPLES_EXT 0x80A9
#define GL_SAMPLE_MASK_VALUE_EXT 0x80AA
#define GL_SAMPLE_MASK_INVERT_EXT 0x80AB
#define GL_SAMPLE_PATTERN_EXT 0x80AC
#define GL_MULTISAMPLE_BIT_EXT 0x20000000
typedef void (* fp_glSampleMaskEXT)(GLclampf, GLboolean);
extern fp_glSampleMaskEXT gladglSampleMaskEXT;
#define glSampleMaskEXT gladglSampleMaskEXT
typedef void (* fp_glSamplePatternEXT)(GLenum);
extern fp_glSamplePatternEXT gladglSamplePatternEXT;
#define glSamplePatternEXT gladglSamplePatternEXT
int GL_EXT_secondary_color;
#define GL_COLOR_SUM_EXT 0x8458
#define GL_CURRENT_SECONDARY_COLOR_EXT 0x8459
#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT 0x845A
#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT 0x845B
#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT 0x845C
#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT 0x845D
#define GL_SECONDARY_COLOR_ARRAY_EXT 0x845E
typedef void (* fp_glSecondaryColor3bEXT)(GLbyte, GLbyte, GLbyte);
extern fp_glSecondaryColor3bEXT gladglSecondaryColor3bEXT;
#define glSecondaryColor3bEXT gladglSecondaryColor3bEXT
typedef void (* fp_glSecondaryColor3bvEXT)(const GLbyte*);
extern fp_glSecondaryColor3bvEXT gladglSecondaryColor3bvEXT;
#define glSecondaryColor3bvEXT gladglSecondaryColor3bvEXT
typedef void (* fp_glSecondaryColor3dEXT)(GLdouble, GLdouble, GLdouble);
extern fp_glSecondaryColor3dEXT gladglSecondaryColor3dEXT;
#define glSecondaryColor3dEXT gladglSecondaryColor3dEXT
typedef void (* fp_glSecondaryColor3dvEXT)(const GLdouble*);
extern fp_glSecondaryColor3dvEXT gladglSecondaryColor3dvEXT;
#define glSecondaryColor3dvEXT gladglSecondaryColor3dvEXT
typedef void (* fp_glSecondaryColor3fEXT)(GLfloat, GLfloat, GLfloat);
extern fp_glSecondaryColor3fEXT gladglSecondaryColor3fEXT;
#define glSecondaryColor3fEXT gladglSecondaryColor3fEXT
typedef void (* fp_glSecondaryColor3fvEXT)(const GLfloat*);
extern fp_glSecondaryColor3fvEXT gladglSecondaryColor3fvEXT;
#define glSecondaryColor3fvEXT gladglSecondaryColor3fvEXT
typedef void (* fp_glSecondaryColor3iEXT)(GLint, GLint, GLint);
extern fp_glSecondaryColor3iEXT gladglSecondaryColor3iEXT;
#define glSecondaryColor3iEXT gladglSecondaryColor3iEXT
typedef void (* fp_glSecondaryColor3ivEXT)(const GLint*);
extern fp_glSecondaryColor3ivEXT gladglSecondaryColor3ivEXT;
#define glSecondaryColor3ivEXT gladglSecondaryColor3ivEXT
typedef void (* fp_glSecondaryColor3sEXT)(GLshort, GLshort, GLshort);
extern fp_glSecondaryColor3sEXT gladglSecondaryColor3sEXT;
#define glSecondaryColor3sEXT gladglSecondaryColor3sEXT
typedef void (* fp_glSecondaryColor3svEXT)(const GLshort*);
extern fp_glSecondaryColor3svEXT gladglSecondaryColor3svEXT;
#define glSecondaryColor3svEXT gladglSecondaryColor3svEXT
typedef void (* fp_glSecondaryColor3ubEXT)(GLubyte, GLubyte, GLubyte);
extern fp_glSecondaryColor3ubEXT gladglSecondaryColor3ubEXT;
#define glSecondaryColor3ubEXT gladglSecondaryColor3ubEXT
typedef void (* fp_glSecondaryColor3ubvEXT)(const GLubyte*);
extern fp_glSecondaryColor3ubvEXT gladglSecondaryColor3ubvEXT;
#define glSecondaryColor3ubvEXT gladglSecondaryColor3ubvEXT
typedef void (* fp_glSecondaryColor3uiEXT)(GLuint, GLuint, GLuint);
extern fp_glSecondaryColor3uiEXT gladglSecondaryColor3uiEXT;
#define glSecondaryColor3uiEXT gladglSecondaryColor3uiEXT
typedef void (* fp_glSecondaryColor3uivEXT)(const GLuint*);
extern fp_glSecondaryColor3uivEXT gladglSecondaryColor3uivEXT;
#define glSecondaryColor3uivEXT gladglSecondaryColor3uivEXT
typedef void (* fp_glSecondaryColor3usEXT)(GLushort, GLushort, GLushort);
extern fp_glSecondaryColor3usEXT gladglSecondaryColor3usEXT;
#define glSecondaryColor3usEXT gladglSecondaryColor3usEXT
typedef void (* fp_glSecondaryColor3usvEXT)(const GLushort*);
extern fp_glSecondaryColor3usvEXT gladglSecondaryColor3usvEXT;
#define glSecondaryColor3usvEXT gladglSecondaryColor3usvEXT
typedef void (* fp_glSecondaryColorPointerEXT)(GLint, GLenum, GLsizei, const GLvoid*);
extern fp_glSecondaryColorPointerEXT gladglSecondaryColorPointerEXT;
#define glSecondaryColorPointerEXT gladglSecondaryColorPointerEXT
int GL_NV_parameter_buffer_object2;
int GL_ATI_vertex_array_object;
#define GL_STATIC_ATI 0x8760
#define GL_DYNAMIC_ATI 0x8761
#define GL_PRESERVE_ATI 0x8762
#define GL_DISCARD_ATI 0x8763
#define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
typedef GLuint (* fp_glNewObjectBufferATI)(GLsizei, const GLvoid*, GLenum);
extern fp_glNewObjectBufferATI gladglNewObjectBufferATI;
#define glNewObjectBufferATI gladglNewObjectBufferATI
typedef GLboolean (* fp_glIsObjectBufferATI)(GLuint);
extern fp_glIsObjectBufferATI gladglIsObjectBufferATI;
#define glIsObjectBufferATI gladglIsObjectBufferATI
typedef void (* fp_glUpdateObjectBufferATI)(GLuint, GLuint, GLsizei, const GLvoid*, GLenum);
extern fp_glUpdateObjectBufferATI gladglUpdateObjectBufferATI;
#define glUpdateObjectBufferATI gladglUpdateObjectBufferATI
typedef void (* fp_glGetObjectBufferfvATI)(GLuint, GLenum, GLfloat*);
extern fp_glGetObjectBufferfvATI gladglGetObjectBufferfvATI;
#define glGetObjectBufferfvATI gladglGetObjectBufferfvATI
typedef void (* fp_glGetObjectBufferivATI)(GLuint, GLenum, GLint*);
extern fp_glGetObjectBufferivATI gladglGetObjectBufferivATI;
#define glGetObjectBufferivATI gladglGetObjectBufferivATI
typedef void (* fp_glFreeObjectBufferATI)(GLuint);
extern fp_glFreeObjectBufferATI gladglFreeObjectBufferATI;
#define glFreeObjectBufferATI gladglFreeObjectBufferATI
typedef void (* fp_glArrayObjectATI)(GLenum, GLint, GLenum, GLsizei, GLuint, GLuint);
extern fp_glArrayObjectATI gladglArrayObjectATI;
#define glArrayObjectATI gladglArrayObjectATI
typedef void (* fp_glGetArrayObjectfvATI)(GLenum, GLenum, GLfloat*);
extern fp_glGetArrayObjectfvATI gladglGetArrayObjectfvATI;
#define glGetArrayObjectfvATI gladglGetArrayObjectfvATI
typedef void (* fp_glGetArrayObjectivATI)(GLenum, GLenum, GLint*);
extern fp_glGetArrayObjectivATI gladglGetArrayObjectivATI;
#define glGetArrayObjectivATI gladglGetArrayObjectivATI
typedef void (* fp_glVariantArrayObjectATI)(GLuint, GLenum, GLsizei, GLuint, GLuint);
extern fp_glVariantArrayObjectATI gladglVariantArrayObjectATI;
#define glVariantArrayObjectATI gladglVariantArrayObjectATI
typedef void (* fp_glGetVariantArrayObjectfvATI)(GLuint, GLenum, GLfloat*);
extern fp_glGetVariantArrayObjectfvATI gladglGetVariantArrayObjectfvATI;
#define glGetVariantArrayObjectfvATI gladglGetVariantArrayObjectfvATI
typedef void (* fp_glGetVariantArrayObjectivATI)(GLuint, GLenum, GLint*);
extern fp_glGetVariantArrayObjectivATI gladglGetVariantArrayObjectivATI;
#define glGetVariantArrayObjectivATI gladglGetVariantArrayObjectivATI
int GL_ARB_sparse_texture;
#define GL_TEXTURE_SPARSE_ARB 0x91A6
#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB 0x91A7
#define GL_MIN_SPARSE_LEVEL_ARB 0x919B
#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB 0x91A8
#define GL_VIRTUAL_PAGE_SIZE_X_ARB 0x9195
#define GL_VIRTUAL_PAGE_SIZE_Y_ARB 0x9196
#define GL_VIRTUAL_PAGE_SIZE_Z_ARB 0x9197
#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB 0x9198
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB 0x9199
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB 0x919A
#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB 0x91A9
typedef void (* fp_glTexPageCommitmentARB)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean);
extern fp_glTexPageCommitmentARB gladglTexPageCommitmentARB;
#define glTexPageCommitmentARB gladglTexPageCommitmentARB
int GL_SGIS_point_line_texgen;
#define GL_EYE_DISTANCE_TO_POINT_SGIS 0x81F0
#define GL_OBJECT_DISTANCE_TO_POINT_SGIS 0x81F1
#define GL_EYE_DISTANCE_TO_LINE_SGIS 0x81F2
#define GL_OBJECT_DISTANCE_TO_LINE_SGIS 0x81F3
#define GL_EYE_POINT_SGIS 0x81F4
#define GL_OBJECT_POINT_SGIS 0x81F5
#define GL_EYE_LINE_SGIS 0x81F6
#define GL_OBJECT_LINE_SGIS 0x81F7
int GL_EXT_draw_range_elements;
#define GL_MAX_ELEMENTS_VERTICES_EXT 0x80E8
#define GL_MAX_ELEMENTS_INDICES_EXT 0x80E9
typedef void (* fp_glDrawRangeElementsEXT)(GLenum, GLuint, GLuint, GLsizei, GLenum, const GLvoid*);
extern fp_glDrawRangeElementsEXT gladglDrawRangeElementsEXT;
#define glDrawRangeElementsEXT gladglDrawRangeElementsEXT
int GL_SGIX_blend_alpha_minmax;
#define GL_ALPHA_MIN_SGIX 0x8320
#define GL_ALPHA_MAX_SGIX 0x8321

#ifdef __cplusplus
}
#endif

#endif
